/**
 * Copyright (c) 2014, 2016, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 */
"use strict";
define([], function() {
  // Internal use only.  All APIs and functionality are subject to change at any time.

  // Declare dvt, since it will be used in the toolkit source.
  var dvt;

var $JSCompiler_alias_VOID$$ = void 0, $JSCompiler_alias_TRUE$$ = !0, $JSCompiler_alias_NULL$$ = null, $JSCompiler_alias_FALSE$$ = !1;
function $JSCompiler_identityFn$$() {
  return function($JSCompiler_identityFn_value$$) {
    return $JSCompiler_identityFn_value$$
  }
}
function $JSCompiler_emptyFn$$() {
  return function() {
  }
}
function $JSCompiler_set$$($JSCompiler_set_name$$) {
  return function($JSCompiler_set_value$$) {
    this[$JSCompiler_set_name$$] = $JSCompiler_set_value$$
  }
}
function $JSCompiler_get$$($JSCompiler_get_name$$) {
  return function() {
    return this[$JSCompiler_get_name$$]
  }
}
function $JSCompiler_returnArg$$($JSCompiler_returnArg_value$$) {
  return function() {
    return $JSCompiler_returnArg_value$$
  }
}
var $JSCompiler_prototypeAlias$$;
function $goog$exportPath_$$($name$$56$$, $opt_object$$) {
  0 == $name$$56$$.indexOf("dvt.") && ($name$$56$$ = $name$$56$$.substring(4));
  var $parts$$ = $name$$56$$.split("."), $cur$$ = eval("dvt");
  !($parts$$[0] in $cur$$) && $cur$$.execScript && $cur$$.execScript("var " + $parts$$[0]);
  for(var $part$$;$parts$$.length && ($part$$ = $parts$$.shift());) {
    !$parts$$.length && $opt_object$$ !== $JSCompiler_alias_VOID$$ ? $cur$$[$part$$] = $opt_object$$ : $cur$$ = $cur$$[$part$$] ? $cur$$[$part$$] : $cur$$[$part$$] = {}
  }
}
Math.floor(2147483648 * Math.random()).toString(36);

dvt = function() {
  function $DvtSvgShadowUtils$$() {
  }
  function $DvtSvgPatternFillUtils$$() {
  }
  function $DvtSvgImageFillUtils$$() {
  }
  function $DvtSvgGradientUtils$$() {
  }
  function $DvtSvgFilterUtils$$() {
  }
  function $DvtSvgFilterContext$$() {
    this.Init()
  }
  function $DvtSvgImplFactory$$($DvtSvgShadowUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$
  }
  function $DvtHtmlRichTooltipManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  }
  function $DvtDomXmlParser$$() {
    this.$_parser$ = new DOMParser
  }
  function $DvtContextMenuTooltipItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  }
  function $DvtCustomTooltipItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  }
  function $DvtCustomTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  }
  function $DvtCustomTooltipEventHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_customTooltipManager$ = $DvtSvgPatternFillUtils$$;
    this.Init($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  }
  function $DvtCustomTooltipManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  }
  function $DvtPopupBehaviorHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
    this.$_behavior$ = this.$_mouseTarget$ = this.$_popupPosition$ = $JSCompiler_alias_NULL$$;
    this.$_hoverPopupShown$ = $JSCompiler_alias_FALSE$$;
    this.$_hoverTimer$ = new $dvt$$9$$.$Timer$($DvtSvgShadowUtils$$, 500, this.$_onHoverDelay$, this, 1);
    this.$_overTimer$ = new $dvt$$9$$.$Timer$($DvtSvgShadowUtils$$, 500, this.$_onOverDelay$, this, 1)
  }
  function $DvtPopupSource$$() {
  }
  function $DvtContextMenuSource$$() {
  }
  function $DvtCategoricalObject$$() {
  }
  function $DvtKeyboardNavigable$$() {
  }
  function $DvtSelectable$$() {
  }
  function $DvtTooltipSource$$() {
  }
  function $DvtLogicalObject$$() {
  }
  function $DvtLinearGradient$$() {
    this.Init()
  }
  function $DvtPolygonalShape$$() {
  }
  function $DvtCircularShape$$() {
  }
  function $DvtStage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, "g", $DvtSvgImageFillUtils$$);
    this.$_SVGRoot$ = $DvtSvgPatternFillUtils$$;
    this.$disableSelection$(this.$_elem$);
    this.setCursor("default")
  }
  function $DvtMarkerDefElem$$() {
    this.Init()
  }
  function $DvtActionTooltipEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
    this.target = $DvtSvgPatternFillUtils$$
  }
  function $DvtFocusEvent$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  }
  function $DvtBaseDrawEffect$$() {
    this.$_Init$()
  }
  function $DvtCombinedAnimPopOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  }
  function $DvtCombinedAnimScaleFade$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$)
  }
  function $DvtCombinedAnimFade$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  }
  function $DvtCombinedAnimConveyor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  }
  function $DvtAnimCubeOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  }
  function $DvtAnimCubeIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  }
  function $DvtAnimFlipOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  }
  function $DvtAnimFlipIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  }
  function $DvtAnimConveyorOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  }
  function $DvtAnimConveyorIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  }
  function $DvtInterpolator$$() {
    this.Init()
  }
  function $DvtAnimatorPropItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.type = $DvtSvgShadowUtils$$;
    this.$obj$ = $DvtSvgPatternFillUtils$$;
    this.$getter$ = $DvtSvgImageFillUtils$$;
    this.$setter$ = $DvtSvgGradientUtils$$;
    this.$destVal$ = $DvtSvgFilterUtils$$;
    this.$startVal$ = $JSCompiler_alias_NULL$$
  }
  function $DvtScheduler$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  }
  function $DvtScheduled$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  }
  function $DvtLockable$$() {
    this.$_Init$()
  }
  var $dvt$$9$$ = {$exportProperty$:function($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$
  }, $Obj$:$JSCompiler_emptyFn$$()};
  $dvt$$9$$.$Obj$.$_GET_FUNCTION_NAME_REGEXP$ = /function\s+([\S^]+)\s*\(/;
  $dvt$$9$$.$Obj$.$createSubclass$ = function $$dvt$$9$$$$Obj$$$createSubclass$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if(!($DvtSvgShadowUtils$$ === $JSCompiler_alias_VOID$$ || $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$)) {
      if($DvtSvgPatternFillUtils$$ === $JSCompiler_alias_VOID$$ && ($DvtSvgPatternFillUtils$$ = Object), $DvtSvgShadowUtils$$ != $DvtSvgPatternFillUtils$$) {
        var $DvtSvgGradientUtils$$ = $dvt$$9$$.$Obj$.$_tempSubclassConstructor$;
        $DvtSvgGradientUtils$$.prototype = $DvtSvgPatternFillUtils$$.prototype;
        $DvtSvgShadowUtils$$.prototype = new $DvtSvgGradientUtils$$;
        $DvtSvgShadowUtils$$.prototype.constructor = $DvtSvgShadowUtils$$;
        $DvtSvgShadowUtils$$.$superclass$ = $DvtSvgPatternFillUtils$$.prototype;
        $DvtSvgImageFillUtils$$ && ($DvtSvgShadowUtils$$.$_typeName$ = $DvtSvgImageFillUtils$$)
      }
    }
  };
  $dvt$$9$$.$Obj$.$_tempSubclassConstructor$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$getTypeName$ = function $$dvt$$9$$$$Obj$$$getTypeName$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$_typeName$;
    if($DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$) {
      var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$Obj$.$_GET_FUNCTION_NAME_REGEXP$.exec($DvtSvgShadowUtils$$.toString());
      $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$[1], $DvtSvgShadowUtils$$.$_typeName$ = $DvtSvgPatternFillUtils$$)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Obj$.prototype.$getTypeName$ = function $$dvt$$9$$$$Obj$$$$getTypeName$$() {
    return $dvt$$9$$.$Obj$.$getTypeName$(this.constructor)
  };
  $dvt$$9$$.$Obj$.prototype.$clone$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$Obj$.prototype.$mergeProps$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createCallback$ = function $$dvt$$9$$$$Obj$$$createCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return function() {
      return $DvtSvgPatternFillUtils$$.apply($DvtSvgShadowUtils$$, arguments)
    }
  };
  $dvt$$9$$.$Obj$.$defineConstant$ = $JSCompiler_identityFn$$();
  $dvt$$9$$.$ArrayUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ArrayUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ArrayUtils$.NONE = 0;
  $dvt$$9$$.$ArrayUtils$.$ADD$ = 1;
  $dvt$$9$$.$ArrayUtils$.$SUB$ = 2;
  $dvt$$9$$.$ArrayUtils$.$DIV$ = 3;
  $dvt$$9$$.$ArrayUtils$.$MULT$ = 4;
  $dvt$$9$$.$ArrayUtils$.$MOD$ = 5;
  $dvt$$9$$.$ArrayUtils$.$argsToArray$ = function $$dvt$$9$$$$ArrayUtils$$$argsToArray$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = Array($DvtSvgShadowUtils$$.length);
      if(0 < $DvtSvgShadowUtils$$.length) {
        for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
          $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]
        }
      }
      return $DvtSvgPatternFillUtils$$
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$ArrayUtils$.isArray = function $$dvt$$9$$$$ArrayUtils$$isArray$($DvtSvgShadowUtils$$) {
    return"undefined" != typeof $DvtSvgShadowUtils$$ && "[object Array]" === Object.prototype.toString.apply($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$ArrayUtils$.$toFloat$ = function $$dvt$$9$$$$ArrayUtils$$$toFloat$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$;
    if($dvt$$9$$.$ArrayUtils$.isArray($DvtSvgShadowUtils$$)) {
      $DvtSvgPatternFillUtils$$ || ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$ArrayUtils$.NONE);
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgImageFillUtils$$) ? $dvt$$9$$.$ArrayUtils$.NONE : $DvtSvgImageFillUtils$$;
      $DvtSvgImageFillUtils$$ !== $dvt$$9$$.$ArrayUtils$.NONE && ("number" !== typeof $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = parseFloat($DvtSvgPatternFillUtils$$)), isNaN($DvtSvgPatternFillUtils$$) && ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$ArrayUtils$.NONE));
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgFilterUtils$$;
      if($DvtSvgImageFillUtils$$ === $dvt$$9$$.$ArrayUtils$.NONE) {
        for($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$;$DvtSvgFilterUtils$$++) {
          $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$] = parseFloat($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$])
        }
      }else {
        for($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$;$DvtSvgFilterUtils$$++) {
          var $DvtSvgFilterContext$$ = parseFloat($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$]);
          switch($DvtSvgImageFillUtils$$) {
            case $dvt$$9$$.$ArrayUtils$.$MULT$:
              $DvtSvgFilterContext$$ *= $DvtSvgPatternFillUtils$$;
              break;
            case $dvt$$9$$.$ArrayUtils$.$ADD$:
              $DvtSvgFilterContext$$ += $DvtSvgPatternFillUtils$$;
              break;
            case $dvt$$9$$.$ArrayUtils$.$SUB$:
              $DvtSvgFilterContext$$ -= $DvtSvgPatternFillUtils$$;
              break;
            case $dvt$$9$$.$ArrayUtils$.$DIV$:
              $DvtSvgFilterContext$$ /= $DvtSvgPatternFillUtils$$;
              break;
            case $dvt$$9$$.$ArrayUtils$.$MOD$:
              $DvtSvgFilterContext$$ %= $DvtSvgPatternFillUtils$$
          }
          $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$] = $DvtSvgFilterContext$$
        }
      }
    }
  };
  $dvt$$9$$.$ArrayUtils$.copy = function $$dvt$$9$$$$ArrayUtils$$copy$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    if($DvtSvgShadowUtils$$) {
      $DvtSvgPatternFillUtils$$ = [];
      for(var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
        $DvtSvgPatternFillUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$])
      }
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ArrayUtils$.$getIndex$ = function $$dvt$$9$$$$ArrayUtils$$$getIndex$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$) {
      if($DvtSvgShadowUtils$$.indexOf) {
        return $DvtSvgShadowUtils$$.indexOf($DvtSvgPatternFillUtils$$)
      }
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        if($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] === $DvtSvgPatternFillUtils$$) {
          return $DvtSvgImageFillUtils$$
        }
      }
    }
    return-1
  };
  $dvt$$9$$.$ArrayUtils$.$getLastIndex$ = function $$dvt$$9$$$$ArrayUtils$$$getLastIndex$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$.lastIndexOf) {
      return $DvtSvgShadowUtils$$.lastIndexOf($DvtSvgPatternFillUtils$$)
    }
    for(var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length - 1;0 <= $DvtSvgImageFillUtils$$;$DvtSvgImageFillUtils$$--) {
      if($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] === $DvtSvgPatternFillUtils$$) {
        return $DvtSvgImageFillUtils$$
      }
    }
    return-1
  };
  $dvt$$9$$.$ArrayUtils$.$equals$ = function $$dvt$$9$$$$ArrayUtils$$$equals$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!$DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ || $DvtSvgShadowUtils$$ && !$DvtSvgPatternFillUtils$$) {
      return $JSCompiler_alias_FALSE$$
    }
    if($DvtSvgShadowUtils$$ || $DvtSvgPatternFillUtils$$) {
      if($DvtSvgShadowUtils$$.length != $DvtSvgPatternFillUtils$$.length) {
        return $JSCompiler_alias_FALSE$$
      }
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ <= $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        if($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] !== $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]) {
          return $JSCompiler_alias_FALSE$$
        }
      }
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$ArrayUtils$.$hasAnyMapItem$ = function $$dvt$$9$$$$ArrayUtils$$$hasAnyMapItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!$DvtSvgShadowUtils$$ || !$DvtSvgPatternFillUtils$$) {
      return $JSCompiler_alias_FALSE$$
    }
    for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      if($DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]]) {
        return $JSCompiler_alias_TRUE$$
      }
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$ArrayUtils$.$hasAllMapItems$ = function $$dvt$$9$$$$ArrayUtils$$$hasAllMapItems$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!$DvtSvgShadowUtils$$ || !$DvtSvgPatternFillUtils$$) {
      return $JSCompiler_alias_FALSE$$
    }
    for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      if(!$DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]]) {
        return $JSCompiler_alias_FALSE$$
      }
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$ArrayUtils$.$hasAnyItem$ = function $$dvt$$9$$$$ArrayUtils$$$hasAnyItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$ArrayUtils$.$hasAnyMapItem$($dvt$$9$$.$ArrayUtils$.$createBooleanMap$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ArrayUtils$.$hasAllItems$ = function $$dvt$$9$$$$ArrayUtils$$$hasAllItems$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$ArrayUtils$.$hasAllMapItems$($dvt$$9$$.$ArrayUtils$.$createBooleanMap$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ArrayUtils$.$createBooleanMap$ = function $$dvt$$9$$$$ArrayUtils$$$createBooleanMap$$($DvtSvgShadowUtils$$) {
    if(!$DvtSvgShadowUtils$$) {
      return $JSCompiler_alias_NULL$$
    }
    for(var $DvtSvgPatternFillUtils$$ = {}, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]] = $JSCompiler_alias_TRUE$$
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ArrayUtils$.reduce = function $$dvt$$9$$$$ArrayUtils$$reduce$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$.reduce) {
      return $DvtSvgShadowUtils$$.reduce($DvtSvgPatternFillUtils$$)
    }
    for(var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[0], $DvtSvgFilterUtils$$ = 1;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgFilterUtils$$++) {
      $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$)
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$ArrayUtils$.map = function $$dvt$$9$$$$ArrayUtils$$map$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$.map) {
      return $DvtSvgShadowUtils$$.map($DvtSvgPatternFillUtils$$)
    }
    for(var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgFilterUtils$$++) {
      $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$] = $DvtSvgPatternFillUtils$$($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$)
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$ArrayUtils$.forEach = function $$dvt$$9$$$$ArrayUtils$$forEach$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$.map) {
      $DvtSvgShadowUtils$$.forEach($DvtSvgPatternFillUtils$$)
    }else {
      for(var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
        $DvtSvgPatternFillUtils$$($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$)
      }
    }
  };
  $dvt$$9$$.$StringUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$StringUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$StringUtils$.$_hasTrim$ = "hello".trim != $JSCompiler_alias_NULL$$;
  $dvt$$9$$.$StringUtils$.$_hasEndsWith$ = "hello".endsWith != $JSCompiler_alias_NULL$$;
  $dvt$$9$$.$StringUtils$.trim = function $$dvt$$9$$$$StringUtils$$trim$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$StringUtils$.$_hasTrim$ ? $DvtSvgShadowUtils$$.trim() : $DvtSvgShadowUtils$$.replace(/^\s+|\s+$/g, "")
  };
  $dvt$$9$$.$StringUtils$.endsWith = function $$dvt$$9$$$$StringUtils$$endsWith$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$StringUtils$.$_hasEndsWith$ ? $DvtSvgShadowUtils$$.endsWith($DvtSvgPatternFillUtils$$) : $DvtSvgShadowUtils$$.match($DvtSvgPatternFillUtils$$ + "$") == $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$StringUtils$.$processAriaLabel$ = function $$dvt$$9$$$$StringUtils$$$processAriaLabel$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/(<|&#60;)/g, "\x26lt;");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/(>|&#62;)/g, "\x26gt;");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;b&gt;/g, "");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;\/b&gt;/g, "");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;i&gt;/g, "");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;\/i&gt;/g, "");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/\n/g, "; ");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&#92;n/g, "; ");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;br&gt;/g, "; ");
    return $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;br\/&gt;/g, "; ")
  };
  $dvt$$9$$.$Context$ = function $$dvt$$9$$$$Context$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_root$ = $dvt$$9$$.$ToolkitUtils$.$createSvgDocument$($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ + "_svg" : $JSCompiler_alias_NULL$$);
    $DvtSvgShadowUtils$$.appendChild(this.$_root$);
    this.$_parentDiv$ = $DvtSvgShadowUtils$$;
    this.$_referenceDiv$ = $DvtSvgImageFillUtils$$;
    this.$_implFactory$ = new $DvtSvgImplFactory$$(this);
    this.$_defs$ = this.$_implFactory$.$newDefs$();
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$_root$, this.$_defs$);
    this.$_keyboardFocusArray$ = [];
    this.$_keyboardFocusIndex$ = 0;
    this.Init(this.$_implFactory$, this.$_root$, $DvtSvgPatternFillUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$_root$, this.$_stage$.$getElem$())
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Context$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Context$.$_DATATIP_POPUP_STYLE_CLASS$ = "OraDVTDatatipPopup";
  $dvt$$9$$.$Context$.$_TOOLTIP_POPUP_STYLE_CLASS$ = "OraDVTTooltipPopup";
  $dvt$$9$$.$Context$.$_DEFAULT_FONT_FAMILY$ = "'Helvetica Neue', Helvetica, Arial, sans-serif";
  $dvt$$9$$.$Context$.$_DEFAULT_FONT_FAMILIES$ = {"'Helvetica Neue', Helvetica, Arial, sans-serif":$JSCompiler_alias_TRUE$$, '"Helvetica Neue", Helvetica, Arial, sans-serif':$JSCompiler_alias_TRUE$$, '"Helvetica Neue",Helvetica,Arial,sans-serif':$JSCompiler_alias_TRUE$$};
  $dvt$$9$$.$Context$.$_DEFAULT_FONT_SIZE$ = "12px";
  $dvt$$9$$.$Context$.$_id$ = 0;
  $dvt$$9$$.$Context$.prototype.Init = function $$dvt$$9$$$$Context$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_implFactory$ = $DvtSvgShadowUtils$$;
    this.$_stage$ = new $DvtStage$$(this, $DvtSvgPatternFillUtils$$, ($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : "_dvt" + $dvt$$9$$.$Context$.$_id$) + "_stage");
    $dvt$$9$$.$Context$.$_id$++;
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_stage$.$getElem$(), "font-family", this.$getDefaultFontFamily$());
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_stage$.$getElem$(), "font-size", this.$getDefaultFontSize$());
    this.$_tooltipManagers$ = {};
    this.$_customTooltipManagers$ = {};
    this.$_scheduler$ = $JSCompiler_alias_NULL$$;
    this.$_globalDefsMap$ = {}
  };
  $dvt$$9$$.$Context$.prototype.$getDefaultFontFamily$ = function $$dvt$$9$$$$Context$$$$getDefaultFontFamily$$() {
    return $dvt$$9$$.$Context$.$_DEFAULT_FONT_FAMILY$
  };
  $dvt$$9$$.$Context$.prototype.$isDefaultFontFamily$ = function $$dvt$$9$$$$Context$$$$isDefaultFontFamily$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Context$.$_DEFAULT_FONT_FAMILIES$[$DvtSvgShadowUtils$$] == $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$Context$.prototype.$getDefaultFontSize$ = function $$dvt$$9$$$$Context$$$$getDefaultFontSize$$() {
    return $dvt$$9$$.$Context$.$_DEFAULT_FONT_SIZE$
  };
  $dvt$$9$$.$Context$.prototype.$getStage$ = $JSCompiler_get$$("$_stage$");
  $dvt$$9$$.$Context$.prototype.$isReadyToRender$ = function $$dvt$$9$$$$Context$$$$isReadyToRender$$() {
    for(var $DvtSvgShadowUtils$$ = this.$_parentDiv$;$DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ != document;) {
      if($DvtSvgShadowUtils$$.style && "none" == $DvtSvgShadowUtils$$.style.display) {
        return $JSCompiler_alias_FALSE$$
      }
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentNode
    }
    return $DvtSvgShadowUtils$$ == document
  };
  $dvt$$9$$.$Context$.prototype.$getSvgDocument$ = $JSCompiler_get$$("$_root$");
  $dvt$$9$$.$Context$.prototype.$setReadingDirection$ = $JSCompiler_set$$("$_readingDirection$");
  $dvt$$9$$.$Context$.prototype.$increaseGlobalDefReference$ = function $$dvt$$9$$$$Context$$$$increaseGlobalDefReference$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && (this.$_globalDefsMap$[$DvtSvgShadowUtils$$] = this.$_globalDefsMap$[$DvtSvgShadowUtils$$] ? this.$_globalDefsMap$[$DvtSvgShadowUtils$$]++ : 1)
  };
  $dvt$$9$$.$Context$.prototype.$decreaseGlobalDefReference$ = function $$dvt$$9$$$$Context$$$$decreaseGlobalDefReference$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$) {
      var $DvtSvgPatternFillUtils$$ = this.$_globalDefsMap$[$DvtSvgShadowUtils$$];
      $DvtSvgPatternFillUtils$$ && (1 == $DvtSvgPatternFillUtils$$ ? delete this.$_globalDefsMap$[$DvtSvgShadowUtils$$] : this.$_globalDefsMap$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$--);
      this.$_globalDefsMap$[$DvtSvgShadowUtils$$] || this.$removeDefsById$($DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$Context$.prototype.$getTooltipManager$ = function $$dvt$$9$$$$Context$$$$getTooltipManager$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = "_dvtTooltip");
    var $DvtSvgPatternFillUtils$$ = this.$_stage$.getId();
    $DvtSvgShadowUtils$$ += $DvtSvgPatternFillUtils$$;
    this.$_tooltipManagers$[$DvtSvgShadowUtils$$] || (this.$_tooltipManagers$[$DvtSvgShadowUtils$$] = this.$_implFactory$.$newTooltipManager$($DvtSvgShadowUtils$$));
    return this.$_tooltipManagers$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$Context$.prototype.$hideTooltips$ = function $$dvt$$9$$$$Context$$$$hideTooltips$$() {
    for(var $DvtSvgShadowUtils$$ in this.$_tooltipManagers$) {
      this.$_tooltipManagers$[$DvtSvgShadowUtils$$].$hideTooltip$()
    }
  };
  $dvt$$9$$.$Context$.prototype.$getScheduler$ = function $$dvt$$9$$$$Context$$$$getScheduler$$() {
    this.$_scheduler$ || (this.$_scheduler$ = new $DvtScheduler$$(this));
    return this.$_scheduler$
  };
  $dvt$$9$$.$Context$.prototype.$getDocumentUtils$ = function $$dvt$$9$$$$Context$$$$getDocumentUtils$$() {
    return this.$_implFactory$.$getDocumentUtils$()
  };
  $dvt$$9$$.$Context$.prototype.$pageToStageCoords$ = function $$dvt$$9$$$$Context$$$$pageToStageCoords$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getStageAbsolutePosition$();
    return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$ - $DvtSvgImageFillUtils$$.x, $DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$.y)
  };
  $dvt$$9$$.$Context$.prototype.$stageToPageCoords$ = function $$dvt$$9$$$$Context$$$$stageToPageCoords$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getStageAbsolutePosition$();
    return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$.x, $DvtSvgPatternFillUtils$$ + $DvtSvgImageFillUtils$$.y)
  };
  $dvt$$9$$.$Context$.prototype.$getStageAbsolutePosition$ = function $$dvt$$9$$$$Context$$$$getStageAbsolutePosition$$() {
    if(this.$_stageAbsolutePosition$) {
      return this.$_stageAbsolutePosition$
    }
    var $DvtSvgShadowUtils$$ = this.$_referenceDiv$;
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$_stage$.$getImpl$().$_SVGRoot$, $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentNode ? $DvtSvgShadowUtils$$.parentNode : $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$Agent$.$getElementPosition$($DvtSvgShadowUtils$$);
    return this.$_stageAbsolutePosition$ = new $dvt$$9$$.$Point$(parseInt($DvtSvgShadowUtils$$.x), parseInt($DvtSvgShadowUtils$$.y))
  };
  $dvt$$9$$.$Context$.prototype.$clearStageAbsolutePosition$ = function $$dvt$$9$$$$Context$$$$clearStageAbsolutePosition$$() {
    this.$_stageAbsolutePosition$ = $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Context$.prototype.$isOffscreen$ = function $$dvt$$9$$$$Context$$$$isOffscreen$$() {
    var $DvtSvgShadowUtils$$ = this.$_stage$.$getImpl$().$_SVGRoot$.getBoundingClientRect();
    return 0 > $DvtSvgShadowUtils$$.bottom || 0 > $DvtSvgShadowUtils$$.right || $DvtSvgShadowUtils$$.top > (window.innerHeight || document.documentElement.clientHeight) || $DvtSvgShadowUtils$$.left > (window.innerWidth || document.documentElement.clientWidth)
  };
  $dvt$$9$$.$Context$.prototype.$getCustomTooltipManager$ = function $$dvt$$9$$$$Context$$$$getCustomTooltipManager$$() {
    var $DvtSvgShadowUtils$$;
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = "_dvtCustomTooltip");
    var $DvtSvgPatternFillUtils$$ = this.$_stage$.getId();
    $DvtSvgShadowUtils$$ += $DvtSvgPatternFillUtils$$;
    this.$_customTooltipManagers$[$DvtSvgShadowUtils$$] || (this.$_customTooltipManagers$[$DvtSvgShadowUtils$$] = new $DvtCustomTooltipManager$$(this, $DvtSvgShadowUtils$$));
    return this.$_customTooltipManagers$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$Context$.prototype.$appendDefs$ = function $$dvt$$9$$$$Context$$$$appendDefs$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$_defs$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Context$.prototype.$getDefs$ = $JSCompiler_get$$("$_defs$");
  $dvt$$9$$.$Context$.prototype.$removeDefs$ = function $$dvt$$9$$$$Context$$$$removeDefs$$($DvtSvgShadowUtils$$) {
    this.$_defs$.removeChild($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Context$.prototype.$removeDefsById$ = function $$dvt$$9$$$$Context$$$$removeDefsById$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = this.$_defs$.childNodes, $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$];
      if($DvtSvgFilterUtils$$.id === $DvtSvgShadowUtils$$) {
        this.$_defs$.removeChild($DvtSvgFilterUtils$$);
        break
      }
    }
  };
  $dvt$$9$$.$Context$.$resetUniqueSeeds$ = function $$dvt$$9$$$$Context$$$resetUniqueSeeds$$() {
    $dvt$$9$$.$Agent$.$isEnvironmentBrowser$() || ("undefined" != typeof $DvtAfComponent$$ && ($DvtAfComponent$_uniqueSeed$$ = 0), $DvtSvgFilterUtils$$.$_counter$ = 0, $dvt$$9$$.$ClipPath$.$_uniqueSeed$ = 0, $dvt$$9$$.$SvgShapeUtils$.$_uniqueSeed$ = 0, $dvt$$9$$.$Mask$.$_uniqueSeed$ = 0, $dvt$$9$$.$Agent$.$_bInitialized$ = $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$Context$.$resetCaches$ = function $$dvt$$9$$$$Context$$$resetCaches$$() {
    $dvt$$9$$.$Agent$.$isEnvironmentBrowser$() || ("undefined" != typeof $DvtAfComponent$$ && ($DvtAfStyleUtils$_defaultFontColor$$ = $DvtAfStyleUtils$_defaultFontSize$$ = $DvtAfStyleUtils$_defaultFontFamily$$ = $DvtAfStyleUtils$_panelCardMap$$ = $JSCompiler_alias_NULL$$, $DvtAfStyleUtils$_afStretchWidth$$ = $DvtAfStyleUtils$_tagSkinKeyMap$$ = $DvtAfStyleUtils$_styleMap$$ = $JSCompiler_alias_VOID$$), $dvt$$9$$.$OutputText$.$_cache$ = $JSCompiler_alias_NULL$$, $dvt$$9$$.$TextUtils$.$_cachedTextDimensions$ = 
    {}, $dvt$$9$$.$MarkerUtils$.$_cache$ = {}, $dvt$$9$$.$LedGaugeRenderer$ && ($dvt$$9$$.$LedGaugeRenderer$.$_cache$ = $JSCompiler_alias_NULL$$))
  };
  $dvt$$9$$.$Context$.prototype.$setActiveElement$ = function $$dvt$$9$$$$Context$$$$setActiveElement$$($DvtSvgShadowUtils$$) {
    if($dvt$$9$$.$Agent$.$isEnvironmentBrowser$()) {
      this.$_activeElement$ && ($dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_activeElement$.$getElem$(), "id"), this.$_activeElement$ = $JSCompiler_alias_NULL$$);
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getElem$(), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgPatternFillUtils$$, "id");
      $DvtSvgImageFillUtils$$ || (($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId()) ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "id", $DvtSvgImageFillUtils$$) : ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventManager$.$_getActiveElementId$(), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "id", $DvtSvgImageFillUtils$$), this.$_activeElement$ = $DvtSvgShadowUtils$$));
      $DvtSvgShadowUtils$$.$applyAriaProperties$();
      "application" == this.$_role$ && this.$_parentDiv$.setAttribute("aria-activedescendant", $DvtSvgImageFillUtils$$)
    }
  };
  $dvt$$9$$.$Context$.prototype.$setAriaLabel$ = function $$dvt$$9$$$$Context$$$$setAriaLabel$$($DvtSvgShadowUtils$$) {
    this.$_parentDiv$.getAttribute("aria-label") || ($DvtSvgShadowUtils$$ ? this.$_parentDiv$.setAttribute("aria-label", $dvt$$9$$.$StringUtils$.$processAriaLabel$($DvtSvgShadowUtils$$)) : this.$_parentDiv$.removeAttribute("aria-label"))
  };
  $dvt$$9$$.$Context$.prototype.$setAriaRole$ = function $$dvt$$9$$$$Context$$$$setAriaRole$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ ? this.$_parentDiv$.setAttribute("role", $DvtSvgShadowUtils$$) : this.$_parentDiv$.removeAttribute("role");
    this.$_role$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Context$.prototype.$setTooltipAttachedCallback$ = $JSCompiler_set$$("$_tooltipAttachedCallback$");
  $dvt$$9$$.$Context$.prototype.$setTooltipStyleClass$ = $JSCompiler_set$$("$_tooltipStyleClass$");
  $dvt$$9$$.$Context$.prototype.$getTooltipStyleClass$ = function $$dvt$$9$$$$Context$$$$getTooltipStyleClass$$() {
    return this.$_tooltipStyleClass$ ? this.$_tooltipStyleClass$ : $dvt$$9$$.$Context$.$_TOOLTIP_POPUP_STYLE_CLASS$
  };
  $dvt$$9$$.$Context$.prototype.$setDatatipStyleClass$ = $JSCompiler_set$$("$_datatipStyleClass$");
  $dvt$$9$$.$Context$.prototype.$getDatatipStyleClass$ = function $$dvt$$9$$$$Context$$$$getDatatipStyleClass$$() {
    return this.$_datatipStyleClass$ ? this.$_datatipStyleClass$ : $dvt$$9$$.$Context$.$_DATATIP_POPUP_STYLE_CLASS$
  };
  $dvt$$9$$.$Context$.prototype.$setKeyboardFocusArray$ = function $$dvt$$9$$$$Context$$$$setKeyboardFocusArray$$($DvtSvgShadowUtils$$) {
    this.$_keyboardFocusArray$ = $DvtSvgShadowUtils$$;
    this.$_keyboardFocusIndex$ = 0;
    0 < $DvtSvgShadowUtils$$.length && (this.$_root$.parentNode.$_currentObj$ = this.$_keyboardFocusArray$[this.$_keyboardFocusIndex$])
  };
  $dvt$$9$$.$Context$.prototype.$getCurrentKeyboardFocus$ = function $$dvt$$9$$$$Context$$$$getCurrentKeyboardFocus$$() {
    return this.$_keyboardFocusArray$.length <= this.$_keyboardFocusIndex$ ? $JSCompiler_alias_NULL$$ : this.$_keyboardFocusArray$[this.$_keyboardFocusIndex$]
  };
  $dvt$$9$$.$Context$.prototype.$setCurrentKeyboardFocus$ = function $$dvt$$9$$$$Context$$$$setCurrentKeyboardFocus$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$ArrayUtils$.$getIndex$(this.$_keyboardFocusArray$, $DvtSvgShadowUtils$$);
    if(-1 != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = this.$_keyboardFocusArray$[$DvtSvgShadowUtils$$];
      this.$_keyboardFocusIndex$ = $DvtSvgShadowUtils$$;
      this.$_root$.parentNode.$_currentObj$ = $DvtSvgPatternFillUtils$$
    }
  };
  $dvt$$9$$.$Context$.prototype.$nextKeyboardFocus$ = function $$dvt$$9$$$$Context$$$$nextKeyboardFocus$$() {
    var $DvtSvgShadowUtils$$ = this.$_keyboardFocusArray$[this.$_keyboardFocusIndex$ + 1];
    return $DvtSvgShadowUtils$$ ? (this.$_keyboardFocusIndex$++, this.$_root$.parentNode.$_currentObj$ = $DvtSvgShadowUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Context$.prototype.$previousKeyboardFocus$ = function $$dvt$$9$$$$Context$$$$previousKeyboardFocus$$() {
    var $DvtSvgShadowUtils$$ = this.$_keyboardFocusArray$[this.$_keyboardFocusIndex$ - 1];
    return $DvtSvgShadowUtils$$ ? (this.$_keyboardFocusIndex$--, this.$_root$.parentNode.$_currentObj$ = $DvtSvgShadowUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Context$.prototype.$getNumberConverter$ = function $$dvt$$9$$$$Context$$$$getNumberConverter$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getLocaleHelpers$();
    return $DvtSvgPatternFillUtils$$.numberConverterFactory ? $DvtSvgPatternFillUtils$$.numberConverterFactory.createConverter($DvtSvgShadowUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Context$.prototype.$getLocaleHelpers$ = function $$dvt$$9$$$$Context$$$$getLocaleHelpers$$() {
    return this.$_localeHelpers$ ? this.$_localeHelpers$ : {}
  };
  $dvt$$9$$.$Context$.prototype.$setLocaleHelpers$ = $JSCompiler_set$$("$_localeHelpers$");
  $dvt$$9$$.$Context$.requestAnimationFrame = function $$dvt$$9$$$$Context$$requestAnimationFrame$($DvtSvgShadowUtils$$) {
    return window.requestAnimationFrame ? window.requestAnimationFrame($DvtSvgShadowUtils$$) : window.setTimeout($DvtSvgShadowUtils$$, 1E3 / 30)
  };
  $dvt$$9$$.$Context$.cancelAnimationFrame = function $$dvt$$9$$$$Context$$cancelAnimationFrame$($DvtSvgShadowUtils$$) {
    window.cancelAnimationFrame ? window.cancelAnimationFrame($DvtSvgShadowUtils$$) : clearTimeout($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Context$.prototype.$createOverlayDiv$ = function $$dvt$$9$$$$Context$$$$createOverlayDiv$$() {
    var $DvtSvgShadowUtils$$ = document.createElement("div");
    $DvtSvgShadowUtils$$.style.top = "-100%";
    $DvtSvgShadowUtils$$.style.position = "relative";
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Context$.prototype.$setOverlayAttachedCallback$ = $JSCompiler_set$$("$_overlayAttachedCallback$");
  $dvt$$9$$.$Obj$.$createSubclass$($DvtLockable$$, $dvt$$9$$.$Obj$);
  $DvtLockable$$.prototype.$_Init$ = function $$DvtLockable$$$$$_Init$$() {
    this.$_bLocked$ = $JSCompiler_alias_FALSE$$
  };
  $DvtLockable$$.prototype.$__lock$ = function $$DvtLockable$$$$$__lock$$() {
    this.$_bLocked$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtScheduled$$, $dvt$$9$$.$Obj$);
  $DvtScheduled$$.$_STATE_INITIALIZE$ = 0;
  $DvtScheduled$$.$_STATE_BEGIN$ = 1;
  $DvtScheduled$$.$_STATE_RUN$ = 2;
  $DvtScheduled$$.$CalcProgress$ = function $$DvtScheduled$$$$CalcProgress$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = 1 - $DvtSvgPatternFillUtils$$;
    if(0 == $DvtSvgImageFillUtils$$) {
      return 0.5
    }
    $DvtSvgImageFillUtils$$ = ($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$) / $DvtSvgImageFillUtils$$;
    1 < $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = 1);
    return $DvtSvgImageFillUtils$$
  };
  $DvtScheduled$$.prototype.Init = function $$DvtScheduled$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_scheduler$ = $DvtSvgPatternFillUtils$$;
    this.$setDuration$($DvtSvgImageFillUtils$$);
    this.$setDelay$($DvtSvgGradientUtils$$);
    this.$setEasing$($DvtSvgFilterUtils$$);
    this.$_bRunning$ = $JSCompiler_alias_FALSE$$;
    this.$_startTime$ = $JSCompiler_alias_NULL$$;
    this.$_progress$ = 0;
    this.$_state$ = $DvtScheduled$$.$_STATE_INITIALIZE$;
    this.$_onStepObj$ = this.$_onStep$ = this.$_onEndObj$ = this.$_onEnd$ = this.$_onStartObj$ = this.$_onStart$ = this.$_onInitObj$ = this.$_onInit$ = $JSCompiler_alias_NULL$$
  };
  $DvtScheduled$$.prototype.$getDuration$ = $JSCompiler_get$$("$_duration$");
  $DvtScheduled$$.prototype.$setDuration$ = function $$DvtScheduled$$$$$setDuration$$($DvtSvgShadowUtils$$) {
    this.$_duration$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0.5
  };
  $DvtScheduled$$.prototype.$setDelay$ = function $$DvtScheduled$$$$$setDelay$$($DvtSvgShadowUtils$$) {
    this.$_delay$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0
  };
  $DvtScheduled$$.prototype.$setEasing$ = function $$DvtScheduled$$$$$setEasing$$($DvtSvgShadowUtils$$) {
    this.$_easing$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : $dvt$$9$$.$Easing$.$cubicInOut$
  };
  $DvtScheduled$$.prototype.$setOnInit$ = function $$DvtScheduled$$$$$setOnInit$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_onInit$ = $DvtSvgShadowUtils$$;
    this.$_onInitObj$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $JSCompiler_alias_NULL$$
  };
  $DvtScheduled$$.prototype.$getOnInit$ = function $$DvtScheduled$$$$$getOnInit$$() {
    return[this.$_onInit$, this.$_onInitObj$]
  };
  $DvtScheduled$$.prototype.$setOnStart$ = function $$DvtScheduled$$$$$setOnStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_onStart$ = $DvtSvgShadowUtils$$;
    this.$_onStartObj$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $JSCompiler_alias_NULL$$
  };
  $DvtScheduled$$.prototype.$getOnStart$ = function $$DvtScheduled$$$$$getOnStart$$() {
    return[this.$_onStart$, this.$_onStartObj$]
  };
  $DvtScheduled$$.prototype.$setOnEnd$ = function $$DvtScheduled$$$$$setOnEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_onEnd$ = $DvtSvgShadowUtils$$;
    this.$_onEndObj$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $JSCompiler_alias_NULL$$
  };
  $DvtScheduled$$.prototype.$getOnEnd$ = function $$DvtScheduled$$$$$getOnEnd$$() {
    return[this.$_onEnd$, this.$_onEndObj$]
  };
  $DvtScheduled$$.prototype.$isRunning$ = $JSCompiler_get$$("$_bRunning$");
  $DvtScheduled$$.prototype.play = function $$DvtScheduled$$$$play$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ ? this.$_play$() : $dvt$$9$$.$Context$.requestAnimationFrame($dvt$$9$$.$Obj$.$createCallback$(this, this.$_play$))
  };
  $DvtScheduled$$.prototype.$_play$ = function $$DvtScheduled$$$$$_play$$() {
    this.$_bRunning$ || (this.$_bRunning$ = $JSCompiler_alias_TRUE$$, this.$ProcessPlay$(), this.$_scheduler$.$addScheduled$(this));
    this.$_context$.$isOffscreen$() && this.stop($JSCompiler_alias_TRUE$$)
  };
  $DvtScheduled$$.prototype.stop = function $$DvtScheduled$$$$stop$($DvtSvgShadowUtils$$) {
    this.$_scheduler$.$removeScheduled$(this);
    $DvtSvgShadowUtils$$ && this.$ProcessStep$(1);
    this.$ProcessEnd$()
  };
  $DvtScheduled$$.prototype.pause = function $$DvtScheduled$$$$pause$() {
    this.$_bRunning$ = $JSCompiler_alias_FALSE$$
  };
  $DvtScheduled$$.prototype.reset = function $$DvtScheduled$$$$reset$() {
    this.$_state$ = $DvtScheduled$$.$_STATE_INITIALIZE$
  };
  $DvtScheduled$$.prototype.$processTime$ = function $$DvtScheduled$$$$$processTime$$($DvtSvgShadowUtils$$) {
    if(this.$_bRunning$) {
      $DvtSvgShadowUtils$$ -= this.$_startTime$;
      if(0 > $DvtSvgShadowUtils$$) {
        return $JSCompiler_alias_FALSE$$
      }
      var $DvtSvgPatternFillUtils$$ = 1E3 * this.$GetTotalDuration$(), $DvtSvgImageFillUtils$$ = 1;
      0 != $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ / $DvtSvgPatternFillUtils$$);
      1 < $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = 1);
      this.$ProcessStep$($DvtSvgImageFillUtils$$);
      ($DvtSvgShadowUtils$$ = 1 <= $DvtSvgImageFillUtils$$) && this.$ProcessEnd$();
      return $DvtSvgShadowUtils$$
    }
  };
  $DvtScheduled$$.prototype.$GetTotalDuration$ = function $$DvtScheduled$$$$$GetTotalDuration$$() {
    return this.$_delay$ + this.$_duration$
  };
  $DvtScheduled$$.prototype.$ProcessPlay$ = function $$DvtScheduled$$$$$ProcessPlay$$() {
    this.$_state$ == $DvtScheduled$$.$_STATE_INITIALIZE$ && this.$ProcessInitialize$();
    this.$_state$ == $DvtScheduled$$.$_STATE_BEGIN$ ? (this.$_startTime$ = (new Date).getTime(), this.$ProcessStart$()) : this.$_startTime$ = (new Date).getTime() - 1E3 * this.$_progress$ * this.$GetTotalDuration$();
    this.$_state$ = $DvtScheduled$$.$_STATE_RUN$
  };
  $DvtScheduled$$.prototype.$ProcessInitialize$ = function $$DvtScheduled$$$$$ProcessInitialize$$() {
    this.$_onInit$ && this.$_onInit$.call(this.$_onInitObj$);
    this.$Initialize$();
    this.$_state$ = $DvtScheduled$$.$_STATE_BEGIN$
  };
  $DvtScheduled$$.prototype.$ProcessStart$ = function $$DvtScheduled$$$$$ProcessStart$$() {
    this.$_bRunning$ = $JSCompiler_alias_TRUE$$;
    this.$_progress$ = 0;
    this.$_onStart$ && this.$_onStart$.call(this.$_onStartObj$)
  };
  $DvtScheduled$$.prototype.$ProcessStep$ = function $$DvtScheduled$$$$$ProcessStep$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_progress$ = $DvtSvgShadowUtils$$;
    0 < this.$_delay$ && ($DvtSvgPatternFillUtils$$ = $DvtScheduled$$.$CalcProgress$($DvtSvgShadowUtils$$, this.$_delay$ / this.$GetTotalDuration$()));
    0 <= $DvtSvgPatternFillUtils$$ && (this.$_easing$ && ($DvtSvgPatternFillUtils$$ = this.$_easing$($DvtSvgPatternFillUtils$$)), this.$Step$($DvtSvgPatternFillUtils$$), this.$_onStep$ && this.$_onStep$.call(this.$_onStepObj$, $DvtSvgPatternFillUtils$$))
  };
  $DvtScheduled$$.prototype.$ProcessEnd$ = function $$DvtScheduled$$$$$ProcessEnd$$() {
    this.$_bRunning$ && (this.$_bRunning$ = $JSCompiler_alias_FALSE$$, this.$_progress$ = 1, this.$_state$ = $DvtScheduled$$.$_STATE_BEGIN$, this.$_onEnd$ && this.$_onEnd$.call(this.$_onEndObj$))
  };
  $DvtScheduled$$.prototype.$Initialize$ = $JSCompiler_emptyFn$$();
  $DvtScheduled$$.prototype.$Step$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($DvtScheduler$$, $dvt$$9$$.$Obj$);
  $DvtScheduler$$.prototype.Init = function $$DvtScheduler$$$$Init$() {
    this.$_scheduledItems$ = [];
    this.$_bRunning$ = $JSCompiler_alias_FALSE$$
  };
  $DvtScheduler$$.prototype.$HandleTimer$ = function $$DvtScheduler$$$$$HandleTimer$$() {
    for(var $DvtSvgShadowUtils$$ = (new Date).getTime(), $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_scheduledItems$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = this.$_scheduledItems$[$DvtSvgPatternFillUtils$$];
      $DvtSvgImageFillUtils$$.$processTime$($DvtSvgShadowUtils$$) && this.$removeScheduled$($DvtSvgImageFillUtils$$)
    }
    1 > this.$_scheduledItems$.length ? this.pause() : this.$_animationRequestId$ = $dvt$$9$$.$Context$.requestAnimationFrame($dvt$$9$$.$Obj$.$createCallback$(this, this.$HandleTimer$));
    $DvtScheduler$$.$_frameCount$++
  };
  $DvtScheduler$$.prototype.$addScheduled$ = function $$DvtScheduler$$$$$addScheduled$$($DvtSvgShadowUtils$$) {
    0 > $dvt$$9$$.$ArrayUtils$.$getIndex$(this.$_scheduledItems$, $DvtSvgShadowUtils$$) && this.$_scheduledItems$.push($DvtSvgShadowUtils$$);
    this.play()
  };
  $DvtScheduler$$.prototype.$removeScheduled$ = function $$DvtScheduler$$$$$removeScheduled$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$ArrayUtils$.$getIndex$(this.$_scheduledItems$, $DvtSvgShadowUtils$$);
    0 <= $DvtSvgShadowUtils$$ && this.$_scheduledItems$.splice($DvtSvgShadowUtils$$, 1)
  };
  $DvtScheduler$$.prototype.play = function $$DvtScheduler$$$$play$() {
    if(!this.$_bRunning$) {
      for(var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_scheduledItems$.length;$DvtSvgShadowUtils$$++) {
        var $DvtSvgPatternFillUtils$$ = this.$_scheduledItems$[$DvtSvgShadowUtils$$];
        $DvtSvgPatternFillUtils$$.$isRunning$() || $DvtSvgPatternFillUtils$$.play()
      }
      this.$_bRunning$ = $JSCompiler_alias_TRUE$$;
      this.$_animationRequestId$ = $dvt$$9$$.$Context$.requestAnimationFrame($dvt$$9$$.$Obj$.$createCallback$(this, this.$HandleTimer$))
    }
  };
  $DvtScheduler$$.prototype.pause = function $$DvtScheduler$$$$pause$() {
    if(this.$_bRunning$) {
      this.$_bRunning$ = $JSCompiler_alias_FALSE$$;
      this.$_animationRequestId$ && $dvt$$9$$.$Context$.cancelAnimationFrame(this.$_animationRequestId$);
      for(var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_scheduledItems$.length;$DvtSvgShadowUtils$$++) {
        var $DvtSvgPatternFillUtils$$ = this.$_scheduledItems$[$DvtSvgShadowUtils$$];
        $DvtSvgPatternFillUtils$$.$isRunning$() && $DvtSvgPatternFillUtils$$.pause()
      }
    }
  };
  $dvt$$9$$.$Animator$ = function $$dvt$$9$$$$Animator$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Animator$, $DvtScheduled$$);
  $dvt$$9$$.$Animator$.$TYPE_NUMBER$ = "typeNumber";
  $dvt$$9$$.$Animator$.$TYPE_MATRIX$ = "typeMatrix";
  $dvt$$9$$.$Animator$.$TYPE_NUMBER_ARRAY$ = "typeNumberArray";
  $dvt$$9$$.$Animator$.$TYPE_COLOR$ = "typeColor";
  $dvt$$9$$.$Animator$.$TYPE_COLOR_ARRAY$ = "typeColorArray";
  $dvt$$9$$.$Animator$.$TYPE_GROW_POLYLINE$ = "typeGrowPolyline";
  $dvt$$9$$.$Animator$.$TYPE_RECTANGLE$ = "typeRectangle";
  $dvt$$9$$.$Animator$.$TYPE_POINT$ = "typePoint";
  $dvt$$9$$.$Animator$.$TYPE_PATH$ = "typePath";
  $dvt$$9$$.$Animator$.$TYPE_GROW_PATH$ = "typeGrowPath";
  $dvt$$9$$.$Animator$.$TYPE_FILL$ = "typeFill";
  $dvt$$9$$.$Animator$.$TYPE_STROKE$ = "typeStroke";
  $dvt$$9$$.$Animator$.$TYPE_POLYLINE$ = "typePolyline";
  $dvt$$9$$.$Animator$.$_KEY_PREFIX$ = "dvtAnimPropMap_";
  $dvt$$9$$.$Animator$.prototype.Init = function $$dvt$$9$$$$Animator$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$9$$.$Animator$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScheduler$(), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_props$ = {}
  };
  $dvt$$9$$.$Animator$.prototype.$addProp$ = function $$dvt$$9$$$$Animator$$$$addProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = this.$GetPropItem$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgFilterContext$$ ? $DvtSvgFilterContext$$.$destVal$ = $DvtSvgFilterUtils$$ : ($DvtSvgFilterContext$$ = new $DvtAnimatorPropItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $DvtSvgShadowUtils$$ = $dvt$$9$$.$Animator$.$GetKey$($DvtSvgPatternFillUtils$$), this.$_props$[$DvtSvgShadowUtils$$] || (this.$_props$[$DvtSvgShadowUtils$$] = {}), this.$_props$[$DvtSvgShadowUtils$$][$dvt$$9$$.$Animator$.$GetKey$($DvtSvgImageFillUtils$$)] = 
    $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Animator$.prototype.$removeProp$ = function $$dvt$$9$$$$Animator$$$$removeProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$GetPropItem$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$ ? ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.$destVal$, delete this.$_props$[$dvt$$9$$.$Animator$.$GetKey$($DvtSvgShadowUtils$$)][$dvt$$9$$.$Animator$.$GetKey$($DvtSvgPatternFillUtils$$)], $DvtSvgImageFillUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Animator$.prototype.$getDestVal$ = function $$dvt$$9$$$$Animator$$$$getDestVal$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$GetPropItem$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$.$destVal$ : $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$.call($DvtSvgShadowUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Animator$.prototype.$GetPropItem$ = function $$dvt$$9$$$$Animator$$$$GetPropItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$Animator$.$GetKey$($DvtSvgShadowUtils$$);
    return this.$_props$[$DvtSvgImageFillUtils$$] ? this.$_props$[$DvtSvgImageFillUtils$$][$dvt$$9$$.$Animator$.$GetKey$($DvtSvgPatternFillUtils$$)] : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Animator$.$GetKey$ = function $$dvt$$9$$$$Animator$$$GetKey$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_dvtAnimPropMapKey$ || ($DvtSvgShadowUtils$$.$_dvtAnimPropMapKey$ = $dvt$$9$$.$Animator$.$_KEY_PREFIX$ + Math.random());
    return $DvtSvgShadowUtils$$.$_dvtAnimPropMapKey$
  };
  $dvt$$9$$.$Animator$.prototype.$Initialize$ = function $$dvt$$9$$$$Animator$$$$Initialize$$() {
    for(var $DvtSvgShadowUtils$$ in this.$_props$) {
      for(var $DvtSvgPatternFillUtils$$ in this.$_props$[$DvtSvgShadowUtils$$]) {
        var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$][$DvtSvgPatternFillUtils$$];
        $DvtSvgImageFillUtils$$.$startVal$ = $DvtSvgImageFillUtils$$.$getter$.call($DvtSvgImageFillUtils$$.$obj$)
      }
    }
  };
  $dvt$$9$$.$Animator$.prototype.$Step$ = function $$dvt$$9$$$$Animator$$$$Step$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ in this.$_props$) {
      for(var $DvtSvgImageFillUtils$$ in this.$_props$[$DvtSvgPatternFillUtils$$]) {
        var $DvtSvgGradientUtils$$ = this.$_props$[$DvtSvgPatternFillUtils$$][$DvtSvgImageFillUtils$$], $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$obj$, $dvt$$9$$ = $DvtSvgGradientUtils$$.$setter$, $DvtSvgGradientUtils$$ = $DvtInterpolator$$.$interpolate$(this.$_context$, $DvtSvgGradientUtils$$.type, $DvtSvgGradientUtils$$.$startVal$, $DvtSvgGradientUtils$$.$destVal$, $DvtSvgShadowUtils$$);
        $dvt$$9$$.call($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$)
      }
    }
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtAnimatorPropItem$$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Playable$ = function $$dvt$$9$$$$Playable$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Playable$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Playable$.$appendOnEnd$ = function $$dvt$$9$$$$Playable$$$appendOnEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getOnEnd$();
      !$DvtSvgGradientUtils$$ || !$DvtSvgGradientUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnEnd$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : $DvtSvgShadowUtils$$.$setOnEnd$(function() {
        $DvtSvgGradientUtils$$[0].call($DvtSvgGradientUtils$$[1]);
        $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$)
      })
    }
  };
  $dvt$$9$$.$Playable$.$prependOnEnd$ = function $$dvt$$9$$$$Playable$$$prependOnEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getOnEnd$();
      !$DvtSvgGradientUtils$$ || !$DvtSvgGradientUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnEnd$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : $DvtSvgShadowUtils$$.$setOnEnd$(function() {
        $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$);
        $DvtSvgGradientUtils$$[0].call($DvtSvgGradientUtils$$[1])
      })
    }
  };
  $dvt$$9$$.$Playable$.$appendOnStart$ = function $$dvt$$9$$$$Playable$$$appendOnStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$.$getOnStart$ && $DvtSvgShadowUtils$$.$setOnStart$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getOnStart$();
      !$DvtSvgGradientUtils$$ || !$DvtSvgGradientUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnStart$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : $DvtSvgShadowUtils$$.$setOnStart$(function() {
        $DvtSvgGradientUtils$$[0].call($DvtSvgGradientUtils$$[1]);
        $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$)
      })
    }
  };
  $dvt$$9$$.$Playable$.$prependOnStart$ = function $$dvt$$9$$$$Playable$$$prependOnStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$.$getOnStart$ && $DvtSvgShadowUtils$$.$setOnStart$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getOnStart$();
      !$DvtSvgGradientUtils$$ || !$DvtSvgGradientUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnStart$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : $DvtSvgShadowUtils$$.$setOnStart$(function() {
        $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$);
        $DvtSvgGradientUtils$$[0].call($DvtSvgGradientUtils$$[1])
      })
    }
  };
  $dvt$$9$$.$Playable$.$appendOnInit$ = function $$dvt$$9$$$$Playable$$$appendOnInit$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$.$getOnInit$ && $DvtSvgShadowUtils$$.$setOnInit$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getOnInit$();
      !$DvtSvgImageFillUtils$$ || !$DvtSvgImageFillUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnInit$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_VOID$$) : $DvtSvgShadowUtils$$.$setOnInit$(function() {
        $DvtSvgImageFillUtils$$[0].call($DvtSvgImageFillUtils$$[1]);
        $DvtSvgPatternFillUtils$$.call($JSCompiler_alias_VOID$$)
      })
    }
  };
  $dvt$$9$$.$Playable$.$prependOnInit$ = function $$dvt$$9$$$$Playable$$$prependOnInit$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$.$getOnInit$ && $DvtSvgShadowUtils$$.$setOnInit$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getOnInit$();
      !$DvtSvgImageFillUtils$$ || !$DvtSvgImageFillUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnInit$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_VOID$$) : $DvtSvgShadowUtils$$.$setOnInit$(function() {
        $DvtSvgPatternFillUtils$$.call($JSCompiler_alias_VOID$$);
        $DvtSvgImageFillUtils$$[0].call($DvtSvgImageFillUtils$$[1])
      })
    }
  };
  $dvt$$9$$.$Playable$.prototype.Init = function $$dvt$$9$$$$Playable$$$Init$($DvtSvgShadowUtils$$) {
    this.$Context$ = $DvtSvgShadowUtils$$;
    this.$_onEndObj$ = this.$_onEnd$ = $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Playable$.prototype.$setOnEnd$ = function $$dvt$$9$$$$Playable$$$$setOnEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_onEnd$ = $DvtSvgShadowUtils$$;
    this.$_onEndObj$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Playable$.prototype.$getOnEnd$ = function $$dvt$$9$$$$Playable$$$$getOnEnd$$() {
    return[this.$_onEnd$, this.$_onEndObj$]
  };
  $dvt$$9$$.$Playable$.prototype.$getDuration$ = $JSCompiler_returnArg$$(0);
  $dvt$$9$$.$Playable$.prototype.$initialize$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Playable$.prototype.play = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Playable$.prototype.stop = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Playable$.prototype.pause = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$ParallelPlayable$ = function $$dvt$$9$$$$ParallelPlayable$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    arguments && 1 < arguments.length && arguments[1] instanceof Array ? $DvtSvgPatternFillUtils$$ = arguments[1] : ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ArrayUtils$.$argsToArray$(arguments), $DvtSvgPatternFillUtils$$.splice(0, 1));
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ParallelPlayable$, $dvt$$9$$.$Playable$);
  $dvt$$9$$.$ParallelPlayable$.prototype.Init = function $$dvt$$9$$$$ParallelPlayable$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$9$$.$ParallelPlayable$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_runningCounter$ = 0;
    this.$_arPlayables$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : [];
    this.$_bStarted$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$ParallelPlayable$.prototype.$getDuration$ = function $$dvt$$9$$$$ParallelPlayable$$$$getDuration$$() {
    for(var $DvtSvgShadowUtils$$ = 0, $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_arPlayables$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = this.$_arPlayables$[$DvtSvgPatternFillUtils$$];
      $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Playable$ && ($DvtSvgShadowUtils$$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.$getDuration$()))
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$ParallelPlayable$.prototype.$initialize$ = function $$dvt$$9$$$$ParallelPlayable$$$$initialize$$() {
    for(var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_arPlayables$.length;$DvtSvgShadowUtils$$++) {
      this.$_arPlayables$[$DvtSvgShadowUtils$$] instanceof $dvt$$9$$.$Playable$ && this.$_arPlayables$[$DvtSvgShadowUtils$$].$initialize$()
    }
  };
  $dvt$$9$$.$ParallelPlayable$.prototype.play = function $$dvt$$9$$$$ParallelPlayable$$$play$($DvtSvgShadowUtils$$) {
    0 < this.$_arPlayables$.length ? $DvtSvgShadowUtils$$ ? this.$_play$() : (this.$initialize$(), $dvt$$9$$.$Context$.requestAnimationFrame($dvt$$9$$.$Obj$.$createCallback$(this, this.$_play$))) : $dvt$$9$$.$Context$.requestAnimationFrame($dvt$$9$$.$Obj$.$createCallback$(this, this.$DoEnd$))
  };
  $dvt$$9$$.$ParallelPlayable$.prototype.$_play$ = function $$dvt$$9$$$$ParallelPlayable$$$$_play$$() {
    for(var $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_arPlayables$.length;$DvtSvgPatternFillUtils$$++) {
      $DvtSvgShadowUtils$$ = this.$_arPlayables$[$DvtSvgPatternFillUtils$$], $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$Playable$ && (this.$_bStarted$ || (this.$_runningCounter$++, $dvt$$9$$.$Playable$.$appendOnEnd$($DvtSvgShadowUtils$$, this.$OnPlayableEnd$, this)), $DvtSvgShadowUtils$$.play($JSCompiler_alias_TRUE$$))
    }
    this.$_bStarted$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$ParallelPlayable$.prototype.stop = function $$dvt$$9$$$$ParallelPlayable$$$stop$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$_arPlayables$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$ = this.$_arPlayables$[$DvtSvgImageFillUtils$$], $DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$Playable$ && $DvtSvgPatternFillUtils$$.stop($DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$ParallelPlayable$.prototype.pause = function $$dvt$$9$$$$ParallelPlayable$$$pause$() {
    for(var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_arPlayables$.length;$DvtSvgShadowUtils$$++) {
      var $DvtSvgPatternFillUtils$$ = this.$_arPlayables$[$DvtSvgShadowUtils$$];
      $DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$Playable$ && $DvtSvgPatternFillUtils$$.pause()
    }
  };
  $dvt$$9$$.$ParallelPlayable$.prototype.$OnPlayableEnd$ = function $$dvt$$9$$$$ParallelPlayable$$$$OnPlayableEnd$$() {
    this.$_runningCounter$--;
    1 > this.$_runningCounter$ && this.$DoEnd$()
  };
  $dvt$$9$$.$ParallelPlayable$.prototype.$DoEnd$ = function $$dvt$$9$$$$ParallelPlayable$$$$DoEnd$$() {
    this.$_onEnd$ && this.$_onEnd$.call(this.$_onEndObj$)
  };
  $dvt$$9$$.$SequentialPlayable$ = function $$dvt$$9$$$$SequentialPlayable$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    arguments && 1 < arguments.length && arguments[1] instanceof Array ? $DvtSvgPatternFillUtils$$ = arguments[1] : ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ArrayUtils$.$argsToArray$(arguments), $DvtSvgPatternFillUtils$$.splice(0, 1));
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SequentialPlayable$, $dvt$$9$$.$Playable$);
  $dvt$$9$$.$SequentialPlayable$.prototype.Init = function $$dvt$$9$$$$SequentialPlayable$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$9$$.$SequentialPlayable$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_arPlayables$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : [];
    this.$_currIndex$ = -1;
    this.$_bStarted$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$SequentialPlayable$.prototype.$getDuration$ = function $$dvt$$9$$$$SequentialPlayable$$$$getDuration$$() {
    for(var $DvtSvgShadowUtils$$ = 0, $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_arPlayables$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = this.$_arPlayables$[$DvtSvgPatternFillUtils$$];
      $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Playable$ && ($DvtSvgShadowUtils$$ += $DvtSvgImageFillUtils$$.$getDuration$())
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$SequentialPlayable$.prototype.$initialize$ = function $$dvt$$9$$$$SequentialPlayable$$$$initialize$$() {
    0 < this.$_arPlayables$.length && this.$_arPlayables$[0] instanceof $dvt$$9$$.$Playable$ && this.$_arPlayables$[0].$initialize$()
  };
  $dvt$$9$$.$SequentialPlayable$.prototype.play = function $$dvt$$9$$$$SequentialPlayable$$$play$($DvtSvgShadowUtils$$) {
    this.$_arPlayables$ && 0 < this.$_arPlayables$.length ? $DvtSvgShadowUtils$$ ? this.$_play$() : (this.$initialize$(), $dvt$$9$$.$Context$.requestAnimationFrame($dvt$$9$$.$Obj$.$createCallback$(this, this.$_play$))) : $dvt$$9$$.$Context$.requestAnimationFrame($dvt$$9$$.$Obj$.$createCallback$(this, this.$DoEnd$))
  };
  $dvt$$9$$.$SequentialPlayable$.prototype.$_play$ = function $$dvt$$9$$$$SequentialPlayable$$$$_play$$() {
    if(this.$_bStarted$) {
      var $DvtSvgShadowUtils$$ = this.$_arPlayables$[this.$_currIndex$];
      $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$Playable$ && $DvtSvgShadowUtils$$.play($JSCompiler_alias_TRUE$$)
    }else {
      this.$_arPlayables$[0] instanceof $dvt$$9$$.$Playable$ && ($DvtSvgShadowUtils$$ = this.$_arPlayables$[0]);
      var $DvtSvgPatternFillUtils$$;
      this.$_arPlayables$[this.$_arPlayables$.length - 1] instanceof $dvt$$9$$.$Playable$ && ($DvtSvgPatternFillUtils$$ = this.$_arPlayables$[this.$_arPlayables$.length - 1]);
      for(var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < this.$_arPlayables$.length - 1;$DvtSvgGradientUtils$$++) {
        $DvtSvgImageFillUtils$$ = this.$_arPlayables$[$DvtSvgGradientUtils$$], $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Playable$ && $dvt$$9$$.$Playable$.$appendOnEnd$($DvtSvgImageFillUtils$$, this.$DoSequenceStep$, this)
      }
      $DvtSvgPatternFillUtils$$ && $dvt$$9$$.$Playable$.$appendOnEnd$($DvtSvgPatternFillUtils$$, this.$DoEnd$, this);
      this.$_bStarted$ = $JSCompiler_alias_TRUE$$;
      this.$_currIndex$ = 0;
      $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.play($JSCompiler_alias_TRUE$$)
    }
  };
  $dvt$$9$$.$SequentialPlayable$.prototype.$DoSequenceStep$ = function $$dvt$$9$$$$SequentialPlayable$$$$DoSequenceStep$$() {
    var $DvtSvgShadowUtils$$ = this.$_arPlayables$[++this.$_currIndex$];
    $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$Playable$ ? $DvtSvgShadowUtils$$.play($JSCompiler_alias_TRUE$$) : this.$DoSequenceStep$()
  };
  $dvt$$9$$.$SequentialPlayable$.prototype.stop = function $$dvt$$9$$$$SequentialPlayable$$$stop$($DvtSvgShadowUtils$$) {
    if(this.$_arPlayables$) {
      for(var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = this.$_currIndex$;$DvtSvgImageFillUtils$$ < this.$_arPlayables$.length;$DvtSvgImageFillUtils$$++) {
        ($DvtSvgPatternFillUtils$$ = this.$_arPlayables$[$DvtSvgImageFillUtils$$]) && $DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$Playable$ && $DvtSvgPatternFillUtils$$.stop($DvtSvgShadowUtils$$)
      }
    }
  };
  $dvt$$9$$.$SequentialPlayable$.prototype.pause = function $$dvt$$9$$$$SequentialPlayable$$$pause$() {
    if(this.$_arPlayables$) {
      var $DvtSvgShadowUtils$$ = this.$_arPlayables$[this.$_currIndex$];
      $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$Playable$ && $DvtSvgShadowUtils$$.pause()
    }
  };
  $dvt$$9$$.$SequentialPlayable$.prototype.$DoEnd$ = function $$dvt$$9$$$$SequentialPlayable$$$$DoEnd$$() {
    this.$_onEnd$ && this.$_onEnd$.call(this.$_onEndObj$)
  };
  $dvt$$9$$.$BlackBoxAnimationHandler$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$BlackBoxAnimationHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$BlackBoxAnimationHandler$.$ALPHA_FADE$ = "alphaFade";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_RIGHT$ = "conveyorFromRight";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_LEFT$ = "conveyorFromLeft";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$CUBE_TO_RIGHT$ = "cubeToRight";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$CUBE_TO_LEFT$ = "cubeToLeft";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$FLIP_RIGHT$ = "flipRight";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$FLIP_LEFT$ = "flipLeft";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_RIGHT$ = "transitionToRight";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_LEFT$ = "transitionToLeft";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$SLIDE_TO_RIGHT$ = "slideToRight";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$SLIDE_TO_LEFT$ = "slideToLeft";
  $dvt$$9$$.$BlackBoxAnimationHandler$.$ZOOM$ = "zoom";
  $dvt$$9$$.$BlackBoxAnimationHandler$.isSupported = function $$dvt$$9$$$$BlackBoxAnimationHandler$$isSupported$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$ALPHA_FADE$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_RIGHT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CUBE_TO_RIGHT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CUBE_TO_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$FLIP_RIGHT$ || $DvtSvgShadowUtils$$ == 
    $dvt$$9$$.$BlackBoxAnimationHandler$.$FLIP_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_RIGHT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$SLIDE_TO_RIGHT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$SLIDE_TO_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$ZOOM$
  };
  $dvt$$9$$.$BlackBoxAnimationHandler$.$getInAnimation$ = function $$dvt$$9$$$$BlackBoxAnimationHandler$$$getInAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    return $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$ALPHA_FADE$ ? new $dvt$$9$$.$AnimFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_RIGHT$ ? new $DvtAnimConveyorIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_E$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_LEFT$ ? new $DvtAnimConveyorIn$$($DvtSvgShadowUtils$$, 
    $DvtSvgImageFillUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_W$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CUBE_TO_RIGHT$ ? new $DvtAnimCubeIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$9$$.$BaseAnimation$.$AXIS_Y$, $dvt$$9$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CUBE_TO_LEFT$ ? new $DvtAnimCubeIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$9$$.$BaseAnimation$.$AXIS_Y$, 
    $dvt$$9$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$FLIP_RIGHT$ ? new $DvtAnimFlipIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$9$$.$BaseAnimation$.$AXIS_Y$, $dvt$$9$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$FLIP_LEFT$ ? new $DvtAnimFlipIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$9$$.$BaseAnimation$.$AXIS_Y$, 
    $dvt$$9$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_RIGHT$ ? new $dvt$$9$$.$AnimScaleFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_NW$, 0.5, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_LEFT$ ? new $dvt$$9$$.$AnimScaleFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, 
    $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_NE$, 0.5, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$SLIDE_TO_RIGHT$ ? ($dvt$$9$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgImageFillUtils$$, -$DvtSvgGradientUtils$$.$w$, 0), new $dvt$$9$$.$AnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, new $dvt$$9$$.$Point$($DvtSvgGradientUtils$$.$w$, 0), $DvtSvgFilterUtils$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$SLIDE_TO_LEFT$ ? 
    ($dvt$$9$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$.$w$, 0), new $dvt$$9$$.$AnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, new $dvt$$9$$.$Point$(-$DvtSvgGradientUtils$$.$w$, 0), $DvtSvgFilterUtils$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$ZOOM$ ? new $dvt$$9$$.$AnimScaleFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_C$, 0.5, $DvtSvgFilterUtils$$) : 
    $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$BlackBoxAnimationHandler$.$getCombinedAnimation$ = function $$dvt$$9$$$$BlackBoxAnimationHandler$$$getCombinedAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    return $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$ALPHA_FADE$ ? new $DvtCombinedAnimFade$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_RIGHT$ ? new $DvtCombinedAnimConveyor$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_W$, $dvt$$9$$.$BaseAnimation$.$DIR_E$, $DvtSvgFilterContext$$) : 
    $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_LEFT$ ? new $DvtCombinedAnimConveyor$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_E$, $dvt$$9$$.$BaseAnimation$.$DIR_W$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CUBE_TO_RIGHT$ ? new $dvt$$9$$.$CombinedAnimCube$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$AXIS_Y$, 
    $dvt$$9$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$CUBE_TO_LEFT$ ? new $dvt$$9$$.$CombinedAnimCube$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$AXIS_Y$, $dvt$$9$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$FLIP_RIGHT$ ? new $dvt$$9$$.$CombinedAnimFlip$($DvtSvgShadowUtils$$, 
    $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$AXIS_Y$, $dvt$$9$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$FLIP_LEFT$ ? new $dvt$$9$$.$CombinedAnimFlip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$BaseAnimation$.$AXIS_Y$, $dvt$$9$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_RIGHT$ ? 
    new $DvtCombinedAnimScaleFade$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_SE$, $dvt$$9$$.$BaseAnimation$.$DIR_NW$, 0.5, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_LEFT$ ? new $DvtCombinedAnimScaleFade$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_SW$, $dvt$$9$$.$BaseAnimation$.$DIR_NE$, 
    0.5, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$SLIDE_TO_RIGHT$ ? ($dvt$$9$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgGradientUtils$$, -$DvtSvgFilterUtils$$.$w$, 0), new $dvt$$9$$.$CombinedAnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, new $dvt$$9$$.$Point$($DvtSvgFilterUtils$$.$w$, 0), new $dvt$$9$$.$Point$($DvtSvgFilterUtils$$.$w$, 0), $DvtSvgFilterContext$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$SLIDE_TO_LEFT$ ? 
    ($dvt$$9$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$.$w$, 0), new $dvt$$9$$.$CombinedAnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, new $dvt$$9$$.$Point$(-$DvtSvgFilterUtils$$.$w$, 0), new $dvt$$9$$.$Point$(-$DvtSvgFilterUtils$$.$w$, 0), $DvtSvgFilterContext$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$BlackBoxAnimationHandler$.$ZOOM$ ? new $DvtCombinedAnimScaleFade$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, 
    $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$.$BaseAnimation$.$DIR_C$, $dvt$$9$$.$BaseAnimation$.$DIR_C$, 0.5, $DvtSvgFilterContext$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$BlackBoxAnimationHandler$.$_offsetObjects$ = function $$dvt$$9$$$$BlackBoxAnimationHandler$$$_offsetObjects$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$.length) {
      for(var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
        $dvt$$9$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
      }
    }else {
      $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$setTranslate$($DvtSvgShadowUtils$$.$getTranslateX$() + $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.$getTranslateY$() + $DvtSvgImageFillUtils$$)
    }
  };
  $dvt$$9$$.$DataAnimationHandler$ = function $$dvt$$9$$$$DataAnimationHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$DataAnimationHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$DataAnimationHandler$.$_OVERLAP_RATIO$ = 0.4;
  $dvt$$9$$.$DataAnimationHandler$.prototype.Init = function $$dvt$$9$$$$DataAnimationHandler$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_deleteContainer$ = $DvtSvgPatternFillUtils$$;
    this.$_playables$ = []
  };
  $dvt$$9$$.$DataAnimationHandler$.prototype.$getCtx$ = $JSCompiler_get$$("$_context$");
  $dvt$$9$$.$DataAnimationHandler$.prototype.$constructAnimation$ = function $$dvt$$9$$$$DataAnimationHandler$$$$constructAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgPatternFillUtils$$ && !this.$_context$.$isOffscreen$()) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.slice(0);
      if($DvtSvgShadowUtils$$) {
        for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
          var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
          if($DvtSvgGradientUtils$$) {
            for(var $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.getId(), $dvt$$9$$ = $JSCompiler_alias_FALSE$$, $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterContext$$++) {
              var $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$];
              if($DvtSvgImplFactory$$) {
                var $DvtHtmlRichTooltipManager$$ = $DvtSvgImplFactory$$.getId();
                if($DvtSvgFilterUtils$$ === $DvtHtmlRichTooltipManager$$ || $DvtSvgFilterUtils$$ && $DvtSvgFilterUtils$$.$equals$ && $DvtSvgFilterUtils$$.$equals$($DvtHtmlRichTooltipManager$$)) {
                  $DvtSvgImplFactory$$.$animateUpdate$(this, $DvtSvgGradientUtils$$);
                  $DvtSvgPatternFillUtils$$.splice($DvtSvgFilterContext$$, 1);
                  $dvt$$9$$ = $JSCompiler_alias_TRUE$$;
                  break
                }
              }
            }
            $dvt$$9$$ || $DvtSvgGradientUtils$$.$animateDelete$(this, this.$_deleteContainer$)
          }
        }
      }
      for($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] && $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].$animateInsert$(this)
      }
    }
  };
  $dvt$$9$$.$DataAnimationHandler$.prototype.add = function $$dvt$$9$$$$DataAnimationHandler$$$add$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$) {
      for($DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = 0);this.$_playables$.length <= $DvtSvgPatternFillUtils$$;) {
        this.$_playables$.push([])
      }
      this.$_playables$[$DvtSvgPatternFillUtils$$].push($DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$DataAnimationHandler$.prototype.$getAnimation$ = function $$dvt$$9$$$$DataAnimationHandler$$$$getAnimation$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$_playables$.length;$DvtSvgImageFillUtils$$++) {
      if(0 < this.$_playables$[$DvtSvgImageFillUtils$$].length) {
        var $DvtSvgGradientUtils$$ = new $dvt$$9$$.$ParallelPlayable$(this.$_context$, this.$_playables$[$DvtSvgImageFillUtils$$]);
        $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$)
      }
    }
    if($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$ = [];
      for($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        if(0 < $DvtSvgImageFillUtils$$) {
          var $DvtSvgFilterUtils$$ = new $dvt$$9$$.$CustomAnimation$(this.$_context$, $JSCompiler_alias_NULL$$, $DvtSvgImageFillUtils$$);
          $DvtSvgShadowUtils$$.push(new $dvt$$9$$.$SequentialPlayable$(this.$_context$, [$DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$]]))
        }else {
          $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$])
        }
        $DvtSvgImageFillUtils$$ += (1 - $dvt$$9$$.$DataAnimationHandler$.$_OVERLAP_RATIO$) * $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$].$getDuration$()
      }
      return new $dvt$$9$$.$ParallelPlayable$(this.$_context$, $DvtSvgShadowUtils$$)
    }
    return new $dvt$$9$$.$SequentialPlayable$(this.$_context$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Easing$ = function $$dvt$$9$$$$Easing$$() {
    this.Init()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Easing$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Easing$.$linear$ = $JSCompiler_identityFn$$();
  $dvt$$9$$.$Easing$.$quadraticIn$ = function $$dvt$$9$$$$Easing$$$quadraticIn$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Easing$.$PolyIn$($DvtSvgShadowUtils$$, 2)
  };
  $dvt$$9$$.$Easing$.$quadraticOut$ = function $$dvt$$9$$$$Easing$$$quadraticOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Easing$.$PolyOut$($DvtSvgShadowUtils$$, 2)
  };
  $dvt$$9$$.$Easing$.$quadraticInOut$ = function $$dvt$$9$$$$Easing$$$quadraticInOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Easing$.$PolyInOut$($DvtSvgShadowUtils$$, 2)
  };
  $dvt$$9$$.$Easing$.$cubicIn$ = function $$dvt$$9$$$$Easing$$$cubicIn$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Easing$.$PolyIn$($DvtSvgShadowUtils$$, 3)
  };
  $dvt$$9$$.$Easing$.$cubicOut$ = function $$dvt$$9$$$$Easing$$$cubicOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Easing$.$PolyOut$($DvtSvgShadowUtils$$, 3)
  };
  $dvt$$9$$.$Easing$.$cubicInOut$ = function $$dvt$$9$$$$Easing$$$cubicInOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Easing$.$PolyInOut$($DvtSvgShadowUtils$$, 3)
  };
  $dvt$$9$$.$Easing$.$backOut$ = function $$dvt$$9$$$$Easing$$$backOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = 1.70158);
    $DvtSvgShadowUtils$$ = 1 - $DvtSvgShadowUtils$$;
    return 1 - $DvtSvgShadowUtils$$ * $DvtSvgShadowUtils$$ * (($DvtSvgPatternFillUtils$$ + 1) * $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Easing$.$backIn$ = function $$dvt$$9$$$$Easing$$$backIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = 1.70158);
    return $DvtSvgShadowUtils$$ * $DvtSvgShadowUtils$$ * (($DvtSvgPatternFillUtils$$ + 1) * $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Easing$.$elasticIn$ = function $$dvt$$9$$$$Easing$$$elasticIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if(0 >= $DvtSvgShadowUtils$$ || 1 <= $DvtSvgShadowUtils$$) {
      return $DvtSvgShadowUtils$$
    }
    $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = 0.45);
    var $DvtSvgGradientUtils$$;
    !$DvtSvgPatternFillUtils$$ || 1 > $DvtSvgPatternFillUtils$$ ? ($DvtSvgPatternFillUtils$$ = 1, $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ / 4) : $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ / (2 * Math.PI) * Math.asin(1 / $DvtSvgPatternFillUtils$$);
    return-($DvtSvgPatternFillUtils$$ * Math.pow(2, 10 * ($DvtSvgShadowUtils$$ -= 1)) * Math.sin(($DvtSvgShadowUtils$$ - $DvtSvgGradientUtils$$) * 2 * Math.PI / $DvtSvgImageFillUtils$$))
  };
  $dvt$$9$$.$Easing$.$elasticOut$ = function $$dvt$$9$$$$Easing$$$elasticOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return 1 - $dvt$$9$$.$Easing$.$elasticIn$(1 - $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Easing$.$PolyIn$ = function $$dvt$$9$$$$Easing$$$PolyIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 > $DvtSvgShadowUtils$$ ? 0 : 1 < $DvtSvgShadowUtils$$ ? 1 : Math.pow($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Easing$.$PolyOut$ = function $$dvt$$9$$$$Easing$$$PolyOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 > $DvtSvgShadowUtils$$ ? 0 : 1 < $DvtSvgShadowUtils$$ ? 1 : 1 - Math.pow(1 - $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Easing$.$PolyInOut$ = function $$dvt$$9$$$$Easing$$$PolyInOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 > $DvtSvgShadowUtils$$ ? 0 : 1 < $DvtSvgShadowUtils$$ ? 1 : 0.5 > $DvtSvgShadowUtils$$ ? 0.5 * Math.pow(2 * $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) : 0.5 * (2 - Math.pow(2 * (1 - $DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$))
  };
  $dvt$$9$$.$Easing$.prototype.Init = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($DvtInterpolator$$, $dvt$$9$$.$Obj$);
  $DvtInterpolator$$.$addInterpolator$ = function $$DvtInterpolator$$$$addInterpolator$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtInterpolator$$.$_map$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$
  };
  $DvtInterpolator$$.$removeInterpolator$ = function $$DvtInterpolator$$$$removeInterpolator$$($DvtSvgShadowUtils$$) {
    delete $DvtInterpolator$$.$_map$[$DvtSvgShadowUtils$$]
  };
  $DvtInterpolator$$.$interpolate$ = function $$DvtInterpolator$$$$interpolate$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    return($DvtSvgPatternFillUtils$$ = $DvtInterpolator$$.$_getInterpolator$($DvtSvgPatternFillUtils$$)) ? $DvtSvgPatternFillUtils$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) : $DvtSvgGradientUtils$$
  };
  $DvtInterpolator$$.$_getInterpolator$ = function $$DvtInterpolator$$$$_getInterpolator$$($DvtSvgShadowUtils$$) {
    return $DvtInterpolator$$.$_map$[$DvtSvgShadowUtils$$]
  };
  $DvtInterpolator$$.$InterpolateNumber$ = function $$DvtInterpolator$$$$InterpolateNumber$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$9$$.$Math$.$interpolateNumber$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $DvtInterpolator$$.$InterpolateNumberArray$ = function $$DvtInterpolator$$$$InterpolateNumberArray$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.length;
    for(var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.length, $dvt$$9$$ = [], $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < Math.max($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$);$DvtSvgFilterContext$$++) {
      $dvt$$9$$.push($DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgFilterContext$$ < $DvtSvgShadowUtils$$ ? $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$] : $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$ - 1], $DvtSvgFilterContext$$ < $DvtSvgFilterUtils$$ ? $DvtSvgImageFillUtils$$[$DvtSvgFilterContext$$] : $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$ - 1], $DvtSvgGradientUtils$$))
    }
    return $dvt$$9$$
  };
  $DvtInterpolator$$.$InterpolateMatrix$ = function $$DvtInterpolator$$$$InterpolateMatrix$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return new $dvt$$9$$.$Matrix$($DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_a$, $DvtSvgImageFillUtils$$.$_a$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_b$, $DvtSvgImageFillUtils$$.$_b$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_c$, $DvtSvgImageFillUtils$$.$_c$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_d$, $DvtSvgImageFillUtils$$.$_d$, 
    $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_tx$, $DvtSvgImageFillUtils$$.$_tx$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_ty$, $DvtSvgImageFillUtils$$.$_ty$, $DvtSvgGradientUtils$$))
  };
  $DvtInterpolator$$.$InterpolateColor$ = function $$DvtInterpolator$$$$InterpolateColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$interpolateColor$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $DvtInterpolator$$.$InterpolateColorArray$ = function $$DvtInterpolator$$$$InterpolateColorArray$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.length;
    for(var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.length, $dvt$$9$$ = [], $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < Math.max($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$);$DvtSvgFilterContext$$++) {
      $dvt$$9$$.push($DvtInterpolator$$.$InterpolateColor$(0, $DvtSvgFilterContext$$ < $DvtSvgShadowUtils$$ ? $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$] : $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$ - 1], $DvtSvgFilterContext$$ < $DvtSvgFilterUtils$$ ? $DvtSvgImageFillUtils$$[$DvtSvgFilterContext$$] : $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$ - 1], $DvtSvgGradientUtils$$))
    }
    return $dvt$$9$$
  };
  $DvtInterpolator$$.$InterpolateGrowPolyline$ = function $$DvtInterpolator$$$$InterpolateGrowPolyline$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if(0 === $DvtSvgGradientUtils$$) {
      return[$DvtSvgImageFillUtils$$[0], $DvtSvgImageFillUtils$$[1]]
    }
    if(1 === $DvtSvgGradientUtils$$) {
      return $DvtSvgImageFillUtils$$
    }
    var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.length;
    $DvtSvgShadowUtils$$ = [$DvtSvgImageFillUtils$$[0], $DvtSvgImageFillUtils$$[1]];
    for(var $dvt$$9$$ = $DvtSvgGradientUtils$$ * $DvtInterpolator$$.$CalcPolylineLength$($DvtSvgImageFillUtils$$), $DvtSvgFilterContext$$ = 0, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = 2;$DvtHtmlRichTooltipManager$$ < $DvtSvgFilterUtils$$ - 1;$DvtHtmlRichTooltipManager$$ += 2) {
      $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$ - 2];
      $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$ - 1];
      var $DvtDomXmlParser$$ = $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$], $DvtContextMenuTooltipItem$$ = $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$ + 1];
      $DvtSvgImplFactory$$ = $DvtInterpolator$$.$CalcPolylineLength$([$DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$]);
      if($DvtSvgFilterContext$$ + $DvtSvgImplFactory$$ > $dvt$$9$$) {
        $DvtSvgImageFillUtils$$ = ($dvt$$9$$ - $DvtSvgFilterContext$$) / $DvtSvgImplFactory$$;
        $DvtSvgFilterUtils$$ = $DvtContextMenuTooltipItem$$ - $DvtSvgPatternFillUtils$$;
        $DvtSvgShadowUtils$$.push($DvtSvgGradientUtils$$ + $DvtSvgImageFillUtils$$ * ($DvtDomXmlParser$$ - $DvtSvgGradientUtils$$));
        $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$ + $DvtSvgImageFillUtils$$ * $DvtSvgFilterUtils$$);
        break
      }else {
        $DvtSvgFilterContext$$ += $DvtSvgImplFactory$$, $DvtSvgShadowUtils$$.push($DvtDomXmlParser$$), $DvtSvgShadowUtils$$.push($DvtContextMenuTooltipItem$$)
      }
    }
    return $DvtSvgShadowUtils$$
  };
  $DvtInterpolator$$.$InterpolateGrowPath$ = function $$DvtInterpolator$$$$InterpolateGrowPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if(0 === $DvtSvgGradientUtils$$) {
      return[$DvtSvgImageFillUtils$$[0], $DvtSvgImageFillUtils$$[1]]
    }
    if(1 === $DvtSvgGradientUtils$$) {
      return $DvtSvgImageFillUtils$$
    }
    $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$.length;
    $DvtSvgShadowUtils$$ = [];
    for(var $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$ * $DvtInterpolator$$.$CalcPathLength$($DvtSvgImageFillUtils$$), $dvt$$9$$ = 0, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$, $DvtCustomTooltip$$, $DvtCircularShape$$, $DvtCustomTooltipEventHandler$$, $DvtCustomTooltipManager$$ = 0;$DvtCustomTooltipManager$$ < $DvtSvgPatternFillUtils$$;$DvtCustomTooltipManager$$++) {
      $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtCustomTooltipManager$$];
      var $DvtStage$$;
      switch($DvtSvgGradientUtils$$) {
        case "M":
          $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$];
          $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$];
          $DvtCircularShape$$ = $DvtSvgImplFactory$$;
          $DvtCustomTooltipEventHandler$$ = $DvtHtmlRichTooltipManager$$;
          $DvtStage$$ = [$DvtCircularShape$$, $DvtCustomTooltipEventHandler$$, $DvtCircularShape$$, $DvtCustomTooltipEventHandler$$];
          break;
        case "L":
          $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$];
          $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$];
          $DvtStage$$ = [$DvtCircularShape$$, $DvtCustomTooltipEventHandler$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$];
          break;
        case "Q":
          $DvtDomXmlParser$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$];
          $DvtContextMenuTooltipItem$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$];
          $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$];
          $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$];
          $DvtStage$$ = [$DvtCircularShape$$, $DvtCustomTooltipEventHandler$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$];
          break;
        case "C":
          $DvtDomXmlParser$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$], $DvtContextMenuTooltipItem$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$], $DvtCustomTooltipItem$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$], $DvtCustomTooltip$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$], $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$], $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[++$DvtCustomTooltipManager$$], $DvtStage$$ = 
          [$DvtCircularShape$$, $DvtCustomTooltipEventHandler$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$]
      }
      $DvtSvgFilterContext$$ = $DvtInterpolator$$.$CalcPolylineLength$($DvtStage$$);
      if($dvt$$9$$ + $DvtSvgFilterContext$$ > $DvtSvgFilterUtils$$) {
        $DvtSvgImageFillUtils$$ = ($DvtSvgFilterUtils$$ - $dvt$$9$$) / $DvtSvgFilterContext$$;
        $DvtSvgShadowUtils$$.push($DvtSvgGradientUtils$$);
        switch($DvtSvgGradientUtils$$) {
          case "Q":
            $DvtSvgShadowUtils$$.push($DvtCircularShape$$ + $DvtSvgImageFillUtils$$ * ($DvtDomXmlParser$$ - $DvtCircularShape$$), $DvtCustomTooltipEventHandler$$ + $DvtSvgImageFillUtils$$ * ($DvtContextMenuTooltipItem$$ - $DvtCustomTooltipEventHandler$$));
            break;
          case "C":
            $DvtSvgShadowUtils$$.push($DvtCircularShape$$ + $DvtSvgImageFillUtils$$ * ($DvtDomXmlParser$$ - $DvtCircularShape$$), $DvtCustomTooltipEventHandler$$ + $DvtSvgImageFillUtils$$ * ($DvtContextMenuTooltipItem$$ - $DvtCustomTooltipEventHandler$$), $DvtCircularShape$$ + $DvtSvgImageFillUtils$$ * ($DvtCustomTooltipItem$$ - $DvtCircularShape$$), $DvtCustomTooltipEventHandler$$ + $DvtSvgImageFillUtils$$ * ($DvtCustomTooltip$$ - $DvtCustomTooltipEventHandler$$))
        }
        $DvtSvgShadowUtils$$.push($DvtCircularShape$$ + $DvtSvgImageFillUtils$$ * ($DvtSvgImplFactory$$ - $DvtCircularShape$$), $DvtCustomTooltipEventHandler$$ + $DvtSvgImageFillUtils$$ * ($DvtHtmlRichTooltipManager$$ - $DvtCustomTooltipEventHandler$$));
        break
      }else {
        $dvt$$9$$ += $DvtSvgFilterContext$$;
        $DvtSvgShadowUtils$$.push($DvtSvgGradientUtils$$);
        switch($DvtSvgGradientUtils$$) {
          case "Q":
            $DvtSvgShadowUtils$$.push($DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$);
            break;
          case "C":
            $DvtSvgShadowUtils$$.push($DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$, $DvtCustomTooltip$$)
        }
        $DvtSvgShadowUtils$$.push($DvtSvgImplFactory$$);
        $DvtSvgShadowUtils$$.push($DvtHtmlRichTooltipManager$$)
      }
      $DvtCircularShape$$ = $DvtSvgImplFactory$$;
      $DvtCustomTooltipEventHandler$$ = $DvtHtmlRichTooltipManager$$
    }
    return $DvtSvgShadowUtils$$
  };
  $DvtInterpolator$$.$CalcPolylineLength$ = function $$DvtInterpolator$$$$CalcPolylineLength$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgShadowUtils$$.length;$DvtSvgFilterContext$$ += 2) {
      $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$], $dvt$$9$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$ + 1], 0 < $DvtSvgFilterContext$$ && ($DvtSvgFilterUtils$$ === $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ += Math.abs($dvt$$9$$ - $DvtSvgGradientUtils$$) : $dvt$$9$$ === $DvtSvgGradientUtils$$ ? $DvtSvgPatternFillUtils$$ += Math.abs($DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$) : ($DvtSvgImageFillUtils$$ = Math.abs($DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$), 
      $DvtSvgGradientUtils$$ = Math.abs($dvt$$9$$ - $DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$ += Math.sqrt($DvtSvgImageFillUtils$$ * $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$))), $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$ = $dvt$$9$$
    }
    return $DvtSvgPatternFillUtils$$
  };
  $DvtInterpolator$$.$CalcPathLength$ = function $$DvtInterpolator$$$$CalcPathLength$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgShadowUtils$$.length;) {
      $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$];
      switch($DvtSvgFilterContext$$) {
        case "M":
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 1];
          $dvt$$9$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 2];
          $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$;
          $DvtSvgGradientUtils$$ = $dvt$$9$$;
          $DvtSvgImplFactory$$ += 3;
          continue;
        case "L":
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 1];
          $dvt$$9$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 2];
          $DvtSvgImplFactory$$ += 3;
          break;
        case "Q":
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 3];
          $dvt$$9$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 4];
          $DvtSvgImplFactory$$ += 5;
          break;
        case "C":
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 5], $dvt$$9$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 6], $DvtSvgImplFactory$$ += 7
      }
      0 < $DvtSvgImplFactory$$ && ($DvtSvgFilterUtils$$ === $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ += Math.abs($dvt$$9$$ - $DvtSvgGradientUtils$$) : $dvt$$9$$ === $DvtSvgGradientUtils$$ ? $DvtSvgPatternFillUtils$$ += Math.abs($DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$) : ($DvtSvgImageFillUtils$$ = Math.abs($DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$ = Math.abs($dvt$$9$$ - $DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$ += Math.sqrt($DvtSvgImageFillUtils$$ * 
      $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$)));
      $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$;
      $DvtSvgGradientUtils$$ = $dvt$$9$$
    }
    return $DvtSvgPatternFillUtils$$
  };
  $DvtInterpolator$$.$InterpolateRectangle$ = function $$DvtInterpolator$$$$InterpolateRectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return new $dvt$$9$$.$Rectangle$($DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.x, $DvtSvgImageFillUtils$$.x, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.y, $DvtSvgImageFillUtils$$.y, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$w$, $DvtSvgImageFillUtils$$.$w$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$h$, $DvtSvgImageFillUtils$$.$h$, 
    $DvtSvgGradientUtils$$))
  };
  $DvtInterpolator$$.$InterpolatePoint$ = function $$DvtInterpolator$$$$InterpolatePoint$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return new $dvt$$9$$.$Point$($DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.x, $DvtSvgImageFillUtils$$.x, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.y, $DvtSvgImageFillUtils$$.y, $DvtSvgGradientUtils$$))
  };
  $DvtInterpolator$$.$InterpolatePath$ = function $$DvtInterpolator$$$$InterpolatePath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.length;
    var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.length;
    if($DvtSvgShadowUtils$$ != $DvtSvgFilterUtils$$) {
      return $DvtSvgImageFillUtils$$
    }
    for(var $dvt$$9$$ = [], $DvtSvgFilterContext$$ = 0, $DvtSvgImplFactory$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgShadowUtils$$ && $DvtSvgImplFactory$$ < $DvtSvgFilterUtils$$;) {
      var $DvtHtmlRichTooltipManager$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$], $DvtDomXmlParser$$ = $DvtSvgImageFillUtils$$[$DvtSvgImplFactory$$], $DvtContextMenuTooltipItem$$ = !isNaN($DvtHtmlRichTooltipManager$$), $DvtCustomTooltipItem$$ = !isNaN($DvtDomXmlParser$$);
      !$DvtContextMenuTooltipItem$$ && !$DvtCustomTooltipItem$$ ? $DvtHtmlRichTooltipManager$$ === $DvtDomXmlParser$$ && $dvt$$9$$.push($DvtHtmlRichTooltipManager$$) : $DvtContextMenuTooltipItem$$ && $DvtCustomTooltipItem$$ && $dvt$$9$$.push($DvtInterpolator$$.$InterpolateNumber$(0, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtSvgGradientUtils$$));
      $DvtSvgFilterContext$$++;
      $DvtSvgImplFactory$$++
    }
    return $dvt$$9$$
  };
  $DvtInterpolator$$.$InterpolateFill$ = function $$DvtInterpolator$$$$InterpolateFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$SolidFill$ && $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$SolidFill$ ? ($DvtSvgShadowUtils$$ = $DvtInterpolator$$.$InterpolateColor$(0, $DvtSvgPatternFillUtils$$.$getColor$(), $DvtSvgImageFillUtils$$.$getColor$(), $DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$ = $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$getAlpha$(), $DvtSvgImageFillUtils$$.$getAlpha$(), $DvtSvgGradientUtils$$), new $dvt$$9$$.$SolidFill$($DvtSvgShadowUtils$$, 
    $DvtSvgPatternFillUtils$$)) : $DvtSvgImageFillUtils$$
  };
  $DvtInterpolator$$.$InterpolateStroke$ = function $$DvtInterpolator$$$$InterpolateStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if($DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$SolidStroke$ && $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$SolidStroke$) {
      $DvtSvgShadowUtils$$ = $DvtInterpolator$$.$InterpolateColor$(0, $DvtSvgPatternFillUtils$$.$getColor$(), $DvtSvgImageFillUtils$$.$getColor$(), $DvtSvgGradientUtils$$);
      var $DvtSvgFilterUtils$$ = $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$getAlpha$(), $DvtSvgImageFillUtils$$.$getAlpha$(), $DvtSvgGradientUtils$$);
      $DvtSvgPatternFillUtils$$ = $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.getWidth(), $DvtSvgImageFillUtils$$.getWidth(), $DvtSvgGradientUtils$$);
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.$clone$();
      $DvtSvgImageFillUtils$$.$setColor$($DvtSvgShadowUtils$$);
      $DvtSvgImageFillUtils$$.$setAlpha$($DvtSvgFilterUtils$$);
      $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgPatternFillUtils$$)
    }
    return $DvtSvgImageFillUtils$$
  };
  $DvtInterpolator$$.$InterpolatePolyline$ = function $$DvtInterpolator$$$$InterpolatePolyline$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.length, $dvt$$9$$ = $DvtSvgImageFillUtils$$.length;
    $DvtSvgShadowUtils$$ = [];
    for(var $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < Math.max($DvtSvgFilterUtils$$, $dvt$$9$$);$DvtSvgFilterContext$$++) {
      var $DvtSvgImplFactory$$ = 2;
      1 == $DvtSvgFilterContext$$ % 2 && ($DvtSvgImplFactory$$ = 1);
      $DvtSvgShadowUtils$$.push($DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgFilterContext$$ < $DvtSvgFilterUtils$$ ? $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$] : $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$ - $DvtSvgImplFactory$$], $DvtSvgFilterContext$$ < $dvt$$9$$ ? $DvtSvgImageFillUtils$$[$DvtSvgFilterContext$$] : $DvtSvgImageFillUtils$$[$dvt$$9$$ - $DvtSvgImplFactory$$], $DvtSvgGradientUtils$$))
    }
    if($dvt$$9$$ < $DvtSvgFilterUtils$$) {
      $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.length;
      $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$ - 2];
      $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$ - 1];
      for($DvtSvgFilterContext$$ -= 4;0 <= $DvtSvgFilterContext$$;$DvtSvgFilterContext$$ -= 2) {
        if($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$ + 1], $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$] == $DvtSvgPatternFillUtils$$ && $DvtSvgGradientUtils$$ == $DvtSvgImageFillUtils$$) {
          $DvtSvgShadowUtils$$.splice($DvtSvgFilterContext$$, 2)
        }else {
          break
        }
      }
    }
    return $DvtSvgShadowUtils$$
  };
  $DvtInterpolator$$.prototype.Init = $JSCompiler_emptyFn$$();
  $DvtInterpolator$$.$_map$ = {};
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_NUMBER$] = $DvtInterpolator$$.$InterpolateNumber$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_MATRIX$] = $DvtInterpolator$$.$InterpolateMatrix$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_NUMBER_ARRAY$] = $DvtInterpolator$$.$InterpolateNumberArray$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_COLOR$] = $DvtInterpolator$$.$InterpolateColor$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_COLOR_ARRAY$] = $DvtInterpolator$$.$InterpolateColorArray$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_GROW_POLYLINE$] = $DvtInterpolator$$.$InterpolateGrowPolyline$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_RECTANGLE$] = $DvtInterpolator$$.$InterpolateRectangle$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_POINT$] = $DvtInterpolator$$.$InterpolatePoint$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_PATH$] = $DvtInterpolator$$.$InterpolatePath$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_GROW_PATH$] = $DvtInterpolator$$.$InterpolateGrowPath$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_FILL$] = $DvtInterpolator$$.$InterpolateFill$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_STROKE$] = $DvtInterpolator$$.$InterpolateStroke$;
  $DvtInterpolator$$.$_map$[$dvt$$9$$.$Animator$.$TYPE_POLYLINE$] = $DvtInterpolator$$.$InterpolatePolyline$;
  $dvt$$9$$.$Timer$ = function $$dvt$$9$$$$Timer$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Timer$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Timer$.prototype.Init = function $$dvt$$9$$$$Timer$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_interval$ = $DvtSvgPatternFillUtils$$;
    this.$_callback$ = $DvtSvgImageFillUtils$$;
    this.$_callbackObj$ = $DvtSvgGradientUtils$$;
    this.$_repeatCount$ = $DvtSvgFilterUtils$$;
    this.$_bRunning$ = $JSCompiler_alias_FALSE$$;
    this.$_numIterations$ = 0
  };
  $dvt$$9$$.$Timer$.prototype.start = function $$dvt$$9$$$$Timer$$$start$() {
    this.$_bRunning$ || (this.$_bRunning$ = $JSCompiler_alias_TRUE$$, this.$StartTimer$())
  };
  $dvt$$9$$.$Timer$.prototype.stop = function $$dvt$$9$$$$Timer$$$stop$() {
    this.$_bRunning$ && (this.$_bRunning$ = $JSCompiler_alias_FALSE$$, this.$StopTimer$())
  };
  $dvt$$9$$.$Timer$.prototype.reset = function $$dvt$$9$$$$Timer$$$reset$() {
    this.$_bRunning$ && this.stop();
    this.$_numIterations$ = 0
  };
  $dvt$$9$$.$Timer$.prototype.$isRunning$ = $JSCompiler_get$$("$_bRunning$");
  $dvt$$9$$.$Timer$.prototype.$HandleTimer$ = function $$dvt$$9$$$$Timer$$$$HandleTimer$$() {
    this.$_callback$ && (this.$_callback$.call(this.$_callbackObj$), this.$_repeatCount$ && (this.$_numIterations$++, this.$_numIterations$ >= this.$_repeatCount$ && this.stop()))
  };
  $dvt$$9$$.$Timer$.prototype.setInterval = function $$dvt$$9$$$$Timer$$$setInterval$($DvtSvgShadowUtils$$) {
    0 > $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = 0);
    var $DvtSvgPatternFillUtils$$ = this.$_bRunning$;
    $DvtSvgPatternFillUtils$$ && this.stop();
    this.$_interval$ = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$ && this.start()
  };
  $dvt$$9$$.$Timer$.prototype.$StartTimer$ = function $$dvt$$9$$$$Timer$$$$StartTimer$$() {
    var $DvtSvgShadowUtils$$ = this, $DvtSvgPatternFillUtils$$ = this.$HandleTimer$;
    this.$_timerId$ = window.setInterval(function() {
      $DvtSvgPatternFillUtils$$.call($DvtSvgShadowUtils$$)
    }, this.$_interval$)
  };
  $dvt$$9$$.$Timer$.prototype.$StopTimer$ = function $$dvt$$9$$$$Timer$$$$StopTimer$$() {
    this.$_timerId$ && (window.clearInterval(this.$_timerId$), this.$_timerId$ = $JSCompiler_alias_NULL$$)
  };
  $dvt$$9$$.$BaseAnimation$ = function $$dvt$$9$$$$BaseAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$BaseAnimation$, $dvt$$9$$.$Playable$);
  $dvt$$9$$.$BaseAnimation$.$EASING_LINEAR$ = 1;
  $dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_IN_OUT$ = 2;
  $dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_IN$ = 3;
  $dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_OUT$ = 4;
  $dvt$$9$$.$BaseAnimation$.$EASING_QUADRATIC_IN_OUT$ = 5;
  $dvt$$9$$.$BaseAnimation$.$EASING_QUADRATIC_IN$ = 6;
  $dvt$$9$$.$BaseAnimation$.$EASING_QUADRATIC_OUT$ = 7;
  $dvt$$9$$.$BaseAnimation$.$EASING_BOUNCE_IN$ = 8;
  $dvt$$9$$.$BaseAnimation$.$EASING_BOUNCE_OUT$ = 9;
  $dvt$$9$$.$BaseAnimation$.$EASING_ELASTIC_IN$ = 10;
  $dvt$$9$$.$BaseAnimation$.$EASING_ELASTIC_OUT$ = 11;
  $dvt$$9$$.$BaseAnimation$.$DIR_C$ = 1;
  $dvt$$9$$.$BaseAnimation$.$DIR_N$ = 2;
  $dvt$$9$$.$BaseAnimation$.$DIR_NE$ = 3;
  $dvt$$9$$.$BaseAnimation$.$DIR_E$ = 4;
  $dvt$$9$$.$BaseAnimation$.$DIR_SE$ = 5;
  $dvt$$9$$.$BaseAnimation$.$DIR_S$ = 6;
  $dvt$$9$$.$BaseAnimation$.$DIR_SW$ = 7;
  $dvt$$9$$.$BaseAnimation$.$DIR_W$ = 8;
  $dvt$$9$$.$BaseAnimation$.$DIR_NW$ = 9;
  $dvt$$9$$.$BaseAnimation$.$AXIS_X$ = 1;
  $dvt$$9$$.$BaseAnimation$.$AXIS_Y$ = 2;
  $dvt$$9$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$ = 1;
  $dvt$$9$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$ = 2;
  $dvt$$9$$.$BaseAnimation$.$GetEasingFunction$ = function $$dvt$$9$$$$BaseAnimation$$$GetEasingFunction$$($DvtSvgShadowUtils$$) {
    switch($DvtSvgShadowUtils$$) {
      case $dvt$$9$$.$BaseAnimation$.$EASING_LINEAR$:
        return $dvt$$9$$.$Easing$.$linear$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_IN$:
        return $dvt$$9$$.$Easing$.$cubicIn$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_OUT$:
        return $dvt$$9$$.$Easing$.$cubicOut$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_QUADRATIC_IN_OUT$:
        return $dvt$$9$$.$Easing$.$quadraticInOut$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_QUADRATIC_IN$:
        return $dvt$$9$$.$Easing$.$quadraticIn$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_QUADRATIC_OUT$:
        return $dvt$$9$$.$Easing$.$quadraticOut$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_BOUNCE_IN$:
        return $dvt$$9$$.$Easing$.$backIn$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_BOUNCE_OUT$:
        return $dvt$$9$$.$Easing$.$backOut$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_ELASTIC_IN$:
        return $dvt$$9$$.$Easing$.$elasticIn$;
      case $dvt$$9$$.$BaseAnimation$.$EASING_ELASTIC_OUT$:
        return $dvt$$9$$.$Easing$.$elasticOut$;
      default:
        return $dvt$$9$$.$Easing$.$cubicInOut$
    }
  };
  $dvt$$9$$.$BaseAnimation$.$GetCompassPoint$ = function $$dvt$$9$$$$BaseAnimation$$$GetCompassPoint$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    switch($DvtSvgPatternFillUtils$$) {
      case $dvt$$9$$.$BaseAnimation$.$DIR_N$:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x + 0.5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y);
      case $dvt$$9$$.$BaseAnimation$.$DIR_NE$:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y);
      case $dvt$$9$$.$BaseAnimation$.$DIR_E$:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + 0.5 * $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_SE$:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_S$:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x + 0.5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_SW$:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_W$:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y + 0.5 * $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_NW$:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y);
      default:
        return new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x + 0.5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + 0.5 * $DvtSvgShadowUtils$$.$h$)
    }
  };
  $dvt$$9$$.$BaseAnimation$.$GetAlignCompassPoint$ = function $$dvt$$9$$$$BaseAnimation$$$GetAlignCompassPoint$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$BaseAnimation$.$GetCompassPoint$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    switch($DvtSvgImageFillUtils$$) {
      case $dvt$$9$$.$BaseAnimation$.$DIR_N$:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x - 0.5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y);
      case $dvt$$9$$.$BaseAnimation$.$DIR_NE$:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x - $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y);
      case $dvt$$9$$.$BaseAnimation$.$DIR_E$:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x - $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y - 0.5 * $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_SE$:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x - $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y - $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_S$:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x - 0.5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y - $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_SW$:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y - $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_W$:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y - 0.5 * $DvtSvgShadowUtils$$.$h$);
      case $dvt$$9$$.$BaseAnimation$.$DIR_NW$:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y);
      default:
        return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.x - 0.5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y - 0.5 * $DvtSvgShadowUtils$$.$h$)
    }
  };
  $dvt$$9$$.$BaseAnimation$.prototype.Init = function $$dvt$$9$$$$BaseAnimation$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$9$$.$BaseAnimation$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_arObjects$ = $DvtSvgPatternFillUtils$$ instanceof Array ? $DvtSvgPatternFillUtils$$ : [$DvtSvgPatternFillUtils$$];
    this.$_duration$ = $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : 0.5;
    this.$_delay$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : 0;
    this.$_easing$ = $dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_IN_OUT$;
    this.$_bSaveAndRestoreOriginalMatrices$ = this.$_bInitialized$ = $JSCompiler_alias_FALSE$$;
    this.$_origMatrixArray$ = $JSCompiler_alias_NULL$$;
    this.$_bHideObjectsOnEnd$ = $JSCompiler_alias_FALSE$$;
    this.$CreateAnimator$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$isRunning$ = function $$dvt$$9$$$$BaseAnimation$$$$isRunning$$() {
    return this.$_animator$ ? this.$_animator$.$isRunning$() : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$initialize$ = function $$dvt$$9$$$$BaseAnimation$$$$initialize$$() {
    this.$_bInitialized$ || (this.$_initializeEndStates$(this.$_arObjects$), this.$_initializeStartStates$(this.$_arObjects$), this.$InitializePlay$(), this.$_bInitialized$ = $JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.play = function $$dvt$$9$$$$BaseAnimation$$$play$($DvtSvgShadowUtils$$) {
    this.$initialize$();
    this.$_animator$ && this.$_animator$.play($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.stop = function $$dvt$$9$$$$BaseAnimation$$$stop$($DvtSvgShadowUtils$$) {
    this.$_animator$ && this.$_animator$.stop($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.pause = function $$dvt$$9$$$$BaseAnimation$$$pause$() {
    this.$_animator$ && this.$_animator$.pause()
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$getDuration$ = $JSCompiler_get$$("$_duration$");
  $dvt$$9$$.$BaseAnimation$.prototype.$setDuration$ = function $$dvt$$9$$$$BaseAnimation$$$$setDuration$$($DvtSvgShadowUtils$$) {
    this.$_duration$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0;
    this.$_animator$ && this.$_animator$.$setDuration$(this.$_duration$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$setDelay$ = function $$dvt$$9$$$$BaseAnimation$$$$setDelay$$($DvtSvgShadowUtils$$) {
    this.$_delay$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0;
    this.$_animator$ && this.$_animator$.$setDelay$(this.$_delay$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$setEasing$ = function $$dvt$$9$$$$BaseAnimation$$$$setEasing$$($DvtSvgShadowUtils$$) {
    this.$_easing$ = $DvtSvgShadowUtils$$;
    this.$_animator$ && this.$_animator$.$setEasing$($dvt$$9$$.$BaseAnimation$.$GetEasingFunction$(this.$_easing$))
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$CreateAnimator$ = function $$dvt$$9$$$$BaseAnimation$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    this.$_animator$ = new $dvt$$9$$.$Animator$($DvtSvgShadowUtils$$, this.$_duration$, this.$_delay$, $dvt$$9$$.$BaseAnimation$.$GetEasingFunction$(this.$_easing$));
    this.$_animator$.$setOnEnd$(this.$OnAnimEnd$, this)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$OnAnimEnd$ = function $$dvt$$9$$$$BaseAnimation$$$$OnAnimEnd$$() {
    this.$_bHideObjectsOnEnd$ && this.$HideObjects$();
    this.$_bSaveAndRestoreOriginalMatrices$ && this.$RestoreOriginalMatrices$();
    this.$_onEnd$ && this.$_onEnd$.call(this.$_onEndObj$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$InitializePlay$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$BaseAnimation$.prototype.$_initializeStartStates$ = function $$dvt$$9$$$$BaseAnimation$$$$_initializeStartStates$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      for(var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        if($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]) {
          this.$_bSaveAndRestoreOriginalMatrices$ && (this.$_origMatrixArray$ || (this.$_origMatrixArray$ = []), this.$_origMatrixArray$.push($DvtSvgPatternFillUtils$$.$getMatrix$())), this.$InitStartState$($DvtSvgPatternFillUtils$$)
        }
      }
    }
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$_initializeEndStates$ = function $$dvt$$9$$$$BaseAnimation$$$$_initializeEndStates$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      for(var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]) && this.$InitEndState$($DvtSvgPatternFillUtils$$)
      }
    }
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$InitStartState$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$BaseAnimation$.prototype.$InitEndState$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$BaseAnimation$.prototype.$ShowObjects$ = function $$dvt$$9$$$$BaseAnimation$$$$ShowObjects$$() {
    this.$SetObjectsVisible$($JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$HideObjects$ = function $$dvt$$9$$$$BaseAnimation$$$$HideObjects$$() {
    this.$SetObjectsVisible$($JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$SetObjectsVisible$ = function $$dvt$$9$$$$BaseAnimation$$$$SetObjectsVisible$$($DvtSvgShadowUtils$$) {
    if(this.$_arObjects$) {
      for(var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = this.$_arObjects$.length - 1;0 <= $DvtSvgImageFillUtils$$;$DvtSvgImageFillUtils$$--) {
        ($DvtSvgPatternFillUtils$$ = this.$_arObjects$[$DvtSvgImageFillUtils$$]) && $DvtSvgPatternFillUtils$$.$setVisible$($DvtSvgShadowUtils$$)
      }
    }
  };
  $dvt$$9$$.$BaseAnimation$.prototype.$RestoreOriginalMatrices$ = function $$dvt$$9$$$$BaseAnimation$$$$RestoreOriginalMatrices$$() {
    if(this.$_arObjects$) {
      for(var $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ = this.$_arObjects$.length - 1;0 <= $DvtSvgPatternFillUtils$$;$DvtSvgPatternFillUtils$$--) {
        ($DvtSvgShadowUtils$$ = this.$_arObjects$[$DvtSvgPatternFillUtils$$]) && this.$_origMatrixArray$ && $DvtSvgShadowUtils$$.$setMatrix$(this.$_origMatrixArray$.pop())
      }
    }
  };
  $dvt$$9$$.$CustomAnimation$ = function $$dvt$$9$$$$CustomAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CustomAnimation$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$Obj$.$createSubclass$($DvtAnimConveyorIn$$, $dvt$$9$$.$BaseAnimation$);
  $DvtAnimConveyorIn$$.prototype.Init = function $$DvtAnimConveyorIn$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtAnimConveyorIn$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_direction$ = $DvtSvgImageFillUtils$$;
    this.$_SCALE$ = 0.2;
    this.$_SKEW_ANGLE$ = Math.PI / 12;
    this.$_bSaveAndRestoreOriginalMatrices$ = $JSCompiler_alias_TRUE$$
  };
  $DvtAnimConveyorIn$$.prototype.$CreateAnimator$ = function $$DvtAnimConveyorIn$$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorIn$$.$superclass$.$CreateAnimator$.call(this, $DvtSvgShadowUtils$$);
    this.$setEasing$($dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_IN$);
    this.$_animator$.$setDuration$(this.$getDuration$() / 2);
    this.$_animator$.$setOnEnd$(this.$PlayEndAnim$, this);
    this.$_endAnim$ = new $dvt$$9$$.$Animator$($DvtSvgShadowUtils$$, this.$getDuration$() / 2, 0, $dvt$$9$$.$BaseAnimation$.$GetEasingFunction$($dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_OUT$));
    this.$_endAnim$.$setOnEnd$(this.$OnAnimEnd$, this)
  };
  $DvtAnimConveyorIn$$.prototype.$InitializePlay$ = function $$DvtAnimConveyorIn$$$$$InitializePlay$$() {
    $DvtAnimConveyorIn$$.$superclass$.$InitializePlay$.call(this);
    this.$ShowObjects$()
  };
  $DvtAnimConveyorIn$$.prototype.$InitStartState$ = function $$DvtAnimConveyorIn$$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorIn$$.$superclass$.$InitStartState$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$setVisible$($JSCompiler_alias_FALSE$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgImageFillUtils$$ = this.$GetConcatenatedRotationMatrix$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Matrix$;
    this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_E$ ? this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ ? $DvtSvgGradientUtils$$.translate($DvtSvgPatternFillUtils$$.$w$, 0) : $DvtSvgGradientUtils$$.translate(-$DvtSvgPatternFillUtils$$.$w$, 0) : this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_N$ ? $DvtSvgGradientUtils$$.translate(0, $DvtSvgPatternFillUtils$$.$h$) : $DvtSvgGradientUtils$$.translate(0, -$DvtSvgPatternFillUtils$$.$h$);
    $DvtSvgGradientUtils$$.concat($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$.$setMatrix$($DvtSvgGradientUtils$$);
    $DvtSvgShadowUtils$$.$setAlpha$(0)
  };
  $DvtAnimConveyorIn$$.prototype.$InitEndState$ = function $$DvtAnimConveyorIn$$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorIn$$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgPatternFillUtils$$ = this.$GetConcatenatedRotationMatrix$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgPatternFillUtils$$);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 1);
    $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getMatrix$();
    this.$_endAnim$.$addProp$($dvt$$9$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgPatternFillUtils$$)
  };
  $DvtAnimConveyorIn$$.prototype.$PlayEndAnim$ = function $$DvtAnimConveyorIn$$$$$PlayEndAnim$$() {
    this.$_endAnim$.play($JSCompiler_alias_TRUE$$)
  };
  $DvtAnimConveyorIn$$.prototype.$GetConcatenatedRotationMatrix$ = function $$DvtAnimConveyorIn$$$$$GetConcatenatedRotationMatrix$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_SCALE$, $DvtSvgGradientUtils$$ = 1 - $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$w$ * $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$h$ * $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ = this.$_SKEW_ANGLE$;
    if(this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_S$) {
      $DvtSvgFilterContext$$ = -$DvtSvgFilterContext$$
    }
    var $DvtSvgImplFactory$$ = Math.tan($DvtSvgFilterContext$$), $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$getMatrix$(), $DvtDomXmlParser$$ = new $dvt$$9$$.$Matrix$;
    this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_E$ ? ($DvtDomXmlParser$$.$skew$(0, $DvtSvgFilterContext$$), $DvtDomXmlParser$$.scale($DvtSvgImageFillUtils$$, 1), this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ ? $DvtDomXmlParser$$.translate(0, 0) : $DvtDomXmlParser$$.translate($DvtSvgFilterUtils$$, -$DvtSvgPatternFillUtils$$.$w$ * $DvtSvgImplFactory$$)) : ($DvtDomXmlParser$$.$skew$($DvtSvgFilterContext$$, 0), $DvtDomXmlParser$$.scale(1, 
    $DvtSvgImageFillUtils$$), this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_N$ ? $DvtDomXmlParser$$.translate(0, 0) : $DvtDomXmlParser$$.translate(-$DvtSvgPatternFillUtils$$.$h$ * $DvtSvgImplFactory$$, $DvtSvgGradientUtils$$));
    $DvtDomXmlParser$$.concat($DvtHtmlRichTooltipManager$$);
    return $DvtDomXmlParser$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtAnimConveyorOut$$, $dvt$$9$$.$BaseAnimation$);
  $DvtAnimConveyorOut$$.prototype.Init = function $$DvtAnimConveyorOut$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtAnimConveyorOut$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_direction$ = $DvtSvgImageFillUtils$$;
    this.$_bHideObjectsOnEnd$ = this.$_bSaveAndRestoreOriginalMatrices$ = $JSCompiler_alias_TRUE$$
  };
  $DvtAnimConveyorOut$$.prototype.$CreateAnimator$ = function $$DvtAnimConveyorOut$$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorOut$$.$superclass$.$CreateAnimator$.call(this, $DvtSvgShadowUtils$$);
    this.$setEasing$($dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_IN$);
    this.$_animator$.$setDuration$(this.$getDuration$() / 2);
    this.$_animator$.$setOnEnd$(this.$PlayEndAnim$, this);
    this.$_endAnim$ = new $dvt$$9$$.$Animator$($DvtSvgShadowUtils$$, this.$getDuration$() / 2, 0, $dvt$$9$$.$BaseAnimation$.$GetEasingFunction$($dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_OUT$));
    this.$_endAnim$.$setOnEnd$(this.$OnAnimEnd$, this)
  };
  $DvtAnimConveyorOut$$.prototype.$InitEndState$ = function $$DvtAnimConveyorOut$$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorOut$$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgImageFillUtils$$ = 0.8 * $DvtSvgPatternFillUtils$$.$w$, $DvtSvgGradientUtils$$ = 0.8 * $DvtSvgPatternFillUtils$$.$h$, $DvtSvgFilterUtils$$ = Math.PI / 12;
    if(this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_S$) {
      $DvtSvgFilterUtils$$ = -$DvtSvgFilterUtils$$
    }
    var $DvtSvgFilterContext$$ = Math.tan($DvtSvgFilterUtils$$), $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$getMatrix$(), $DvtHtmlRichTooltipManager$$ = new $dvt$$9$$.$Matrix$;
    this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_E$ ? ($DvtHtmlRichTooltipManager$$.$skew$(0, $DvtSvgFilterUtils$$), $DvtHtmlRichTooltipManager$$.scale(0.2, 1), this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ ? $DvtHtmlRichTooltipManager$$.translate(0, 0) : $DvtHtmlRichTooltipManager$$.translate($DvtSvgImageFillUtils$$, -$DvtSvgPatternFillUtils$$.$w$ * $DvtSvgFilterContext$$)) : ($DvtHtmlRichTooltipManager$$.$skew$($DvtSvgFilterUtils$$, 
    0), $DvtHtmlRichTooltipManager$$.scale(1, 0.2), this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_N$ ? $DvtHtmlRichTooltipManager$$.translate(0, 0) : $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgPatternFillUtils$$.$h$ * $DvtSvgFilterContext$$, $DvtSvgGradientUtils$$));
    $DvtHtmlRichTooltipManager$$.concat($DvtSvgImplFactory$$);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtHtmlRichTooltipManager$$);
    $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Matrix$;
    this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_E$ ? this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_W$ ? $DvtSvgImageFillUtils$$.translate($DvtSvgPatternFillUtils$$.$w$, 0) : $DvtSvgImageFillUtils$$.translate(-$DvtSvgPatternFillUtils$$.$w$, 0) : this.$_direction$ === $dvt$$9$$.$BaseAnimation$.$DIR_N$ ? $DvtSvgImageFillUtils$$.translate(0, $DvtSvgPatternFillUtils$$.$h$) : $DvtSvgImageFillUtils$$.translate(0, -$DvtSvgPatternFillUtils$$.$h$);
    $DvtSvgImageFillUtils$$.concat($DvtHtmlRichTooltipManager$$);
    this.$_endAnim$.$addProp$($dvt$$9$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgImageFillUtils$$);
    this.$_endAnim$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 0)
  };
  $DvtAnimConveyorOut$$.prototype.$PlayEndAnim$ = function $$DvtAnimConveyorOut$$$$$PlayEndAnim$$() {
    this.$_endAnim$.play($JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtAnimFlipIn$$, $dvt$$9$$.$BaseAnimation$);
  $DvtAnimFlipIn$$.prototype.Init = function $$DvtAnimFlipIn$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    $DvtAnimFlipIn$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$);
    this.$_axis$ = $DvtSvgImageFillUtils$$;
    this.$_rotationDir$ = $DvtSvgGradientUtils$$;
    this.$_bSaveAndRestoreOriginalMatrices$ = $JSCompiler_alias_TRUE$$;
    this.$_cubeEffect$ = $JSCompiler_alias_FALSE$$
  };
  $DvtAnimFlipIn$$.prototype.$InitStartState$ = function $$DvtAnimFlipIn$$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    $DvtAnimFlipIn$$.$superclass$.$InitStartState$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$setVisible$($JSCompiler_alias_FALSE$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$w$ / 2, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$h$ / 2, $DvtSvgFilterUtils$$ = Math.PI / 6;
    this.$_rotationDir$ === $dvt$$9$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$ && ($DvtSvgFilterUtils$$ = -$DvtSvgFilterUtils$$);
    var $DvtSvgFilterContext$$ = Math.tan($DvtSvgFilterUtils$$), $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$getMatrix$(), $DvtHtmlRichTooltipManager$$ = new $dvt$$9$$.$Matrix$;
    this.$_axis$ === $dvt$$9$$.$BaseAnimation$.$AXIS_Y$ ? ($DvtHtmlRichTooltipManager$$.$skew$(0, $DvtSvgFilterUtils$$), $DvtHtmlRichTooltipManager$$.scale(0, 1), this.$_cubeEffect$ ? this.$_rotationDir$ === $dvt$$9$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$ ? $DvtHtmlRichTooltipManager$$.translate($DvtSvgPatternFillUtils$$.$w$, 0) : $DvtHtmlRichTooltipManager$$.translate(0, -$DvtSvgPatternFillUtils$$.$w$ * $DvtSvgFilterContext$$) : $DvtHtmlRichTooltipManager$$.translate($DvtSvgImageFillUtils$$, 
    -$DvtSvgImageFillUtils$$ * $DvtSvgFilterContext$$)) : ($DvtHtmlRichTooltipManager$$.$skew$($DvtSvgFilterUtils$$, 0), $DvtHtmlRichTooltipManager$$.scale(1, 0), this.$_cubeEffect$ ? this.$_rotationDir$ === $dvt$$9$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$ ? $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgPatternFillUtils$$.$h$ * $DvtSvgFilterContext$$, 0) : $DvtHtmlRichTooltipManager$$.translate(0, $DvtSvgPatternFillUtils$$.$h$) : $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgGradientUtils$$ * 
    $DvtSvgFilterContext$$, $DvtSvgGradientUtils$$));
    $DvtHtmlRichTooltipManager$$.concat($DvtSvgImplFactory$$);
    $DvtSvgShadowUtils$$.$setMatrix$($DvtHtmlRichTooltipManager$$);
    this.$_cubeEffect$ && $DvtSvgShadowUtils$$.$setAlpha$(0)
  };
  $DvtAnimFlipIn$$.prototype.$InitEndState$ = function $$DvtAnimFlipIn$$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $DvtAnimFlipIn$$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getMatrix$();
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgPatternFillUtils$$);
    this.$_cubeEffect$ && this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 1)
  };
  $DvtAnimFlipIn$$.prototype.$InitializePlay$ = function $$DvtAnimFlipIn$$$$$InitializePlay$$() {
    $DvtAnimFlipIn$$.$superclass$.$InitializePlay$.call(this);
    this.$ShowObjects$()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtAnimFlipOut$$, $dvt$$9$$.$BaseAnimation$);
  $DvtAnimFlipOut$$.prototype.Init = function $$DvtAnimFlipOut$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    $DvtAnimFlipOut$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$);
    this.$_axis$ = $DvtSvgImageFillUtils$$;
    this.$_rotationDir$ = $DvtSvgGradientUtils$$;
    this.$_bHideObjectsOnEnd$ = this.$_bSaveAndRestoreOriginalMatrices$ = $JSCompiler_alias_TRUE$$;
    this.$_cubeEffect$ = $JSCompiler_alias_FALSE$$
  };
  $DvtAnimFlipOut$$.prototype.$InitEndState$ = function $$DvtAnimFlipOut$$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $DvtAnimFlipOut$$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$w$ / 2, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$h$ / 2, $DvtSvgFilterUtils$$ = Math.PI / 6;
    this.$_rotationDir$ === $dvt$$9$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$ && ($DvtSvgFilterUtils$$ = -$DvtSvgFilterUtils$$);
    var $DvtSvgFilterContext$$ = Math.tan($DvtSvgFilterUtils$$), $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$getMatrix$(), $DvtHtmlRichTooltipManager$$ = new $dvt$$9$$.$Matrix$;
    this.$_axis$ === $dvt$$9$$.$BaseAnimation$.$AXIS_Y$ ? ($DvtHtmlRichTooltipManager$$.$skew$(0, $DvtSvgFilterUtils$$), $DvtHtmlRichTooltipManager$$.scale(0, 1), this.$_cubeEffect$ ? this.$_rotationDir$ === $dvt$$9$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$ ? $DvtHtmlRichTooltipManager$$.translate($DvtSvgPatternFillUtils$$.$w$, 0) : $DvtHtmlRichTooltipManager$$.translate(0, -$DvtSvgPatternFillUtils$$.$w$ * $DvtSvgFilterContext$$) : $DvtHtmlRichTooltipManager$$.translate($DvtSvgImageFillUtils$$, -$DvtSvgImageFillUtils$$ * 
    $DvtSvgFilterContext$$)) : ($DvtHtmlRichTooltipManager$$.$skew$($DvtSvgFilterUtils$$, 0), $DvtHtmlRichTooltipManager$$.scale(1, 0), this.$_cubeEffect$ ? this.$_rotationDir$ === $dvt$$9$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$ ? $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgPatternFillUtils$$.$h$ * $DvtSvgFilterContext$$, 0) : $DvtHtmlRichTooltipManager$$.translate(0, $DvtSvgPatternFillUtils$$.$h$) : $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgGradientUtils$$ * $DvtSvgFilterContext$$, $DvtSvgGradientUtils$$));
    $DvtHtmlRichTooltipManager$$.concat($DvtSvgImplFactory$$);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtHtmlRichTooltipManager$$);
    this.$_cubeEffect$ && this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 0)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtAnimCubeIn$$, $DvtAnimFlipIn$$);
  $DvtAnimCubeIn$$.prototype.Init = function $$DvtAnimCubeIn$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    $DvtAnimCubeIn$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$);
    this.$_cubeEffect$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtAnimCubeOut$$, $DvtAnimFlipOut$$);
  $DvtAnimCubeOut$$.prototype.Init = function $$DvtAnimCubeOut$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    $DvtAnimCubeOut$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$);
    this.$_cubeEffect$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$AnimFadeIn$ = function $$dvt$$9$$$$AnimFadeIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimFadeIn$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$AnimFadeIn$.prototype.Init = function $$dvt$$9$$$$AnimFadeIn$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$9$$.$AnimFadeIn$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$AnimFadeIn$.prototype.$InitStartState$ = function $$dvt$$9$$$$AnimFadeIn$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$setAlpha$(0)
  };
  $dvt$$9$$.$AnimFadeIn$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimFadeIn$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 1)
  };
  $dvt$$9$$.$AnimFadeOut$ = function $$dvt$$9$$$$AnimFadeOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimFadeOut$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$AnimFadeOut$.prototype.Init = function $$dvt$$9$$$$AnimFadeOut$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$9$$.$AnimFadeOut$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$AnimFadeOut$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimFadeOut$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 0)
  };
  $dvt$$9$$.$AnimMoveBy$ = function $$dvt$$9$$$$AnimMoveBy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimMoveBy$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$AnimMoveBy$.prototype.Init = function $$dvt$$9$$$$AnimMoveBy$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_arOffsets$ = $DvtSvgImageFillUtils$$ instanceof Array ? $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Point$ ? [$DvtSvgImageFillUtils$$] : [new $dvt$$9$$.$Point$(0, 0)];
    this.$_currIndex$ = 0;
    $dvt$$9$$.$AnimMoveBy$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$AnimMoveBy$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimMoveBy$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ = this.$_currIndex$ < this.$_arOffsets$.length ? this.$_arOffsets$[this.$_currIndex$] : this.$_arOffsets$[this.$_arOffsets$.length - 1];
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateX$, $DvtSvgShadowUtils$$.$setTranslateX$, $DvtSvgShadowUtils$$.$getTranslateX$() + $DvtSvgPatternFillUtils$$.x);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateY$, $DvtSvgShadowUtils$$.$setTranslateY$, $DvtSvgShadowUtils$$.$getTranslateY$() + $DvtSvgPatternFillUtils$$.y);
    this.$_currIndex$++
  };
  $dvt$$9$$.$AnimMoveTo$ = function $$dvt$$9$$$$AnimMoveTo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimMoveTo$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$AnimMoveTo$.prototype.Init = function $$dvt$$9$$$$AnimMoveTo$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_arPoints$ = $DvtSvgImageFillUtils$$ instanceof Array ? $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Point$ ? [$DvtSvgImageFillUtils$$] : [new $dvt$$9$$.$Point$(0, 0)];
    this.$_currIndex$ = 0;
    $dvt$$9$$.$AnimMoveTo$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$AnimMoveTo$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimMoveTo$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ = this.$_currIndex$ < this.$_arPoints$.length ? this.$_arPoints$[this.$_currIndex$] : this.$_arPoints$[this.$_arPoints$.length - 1];
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateX$, $DvtSvgShadowUtils$$.$setTranslateX$, $DvtSvgPatternFillUtils$$.x);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateY$, $DvtSvgShadowUtils$$.$setTranslateY$, $DvtSvgPatternFillUtils$$.y);
    this.$_currIndex$++
  };
  $dvt$$9$$.$AnimScaleBy$ = function $$dvt$$9$$$$AnimScaleBy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimScaleBy$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$AnimScaleBy$.prototype.Init = function $$dvt$$9$$$$AnimScaleBy$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_arScales$ = $DvtSvgImageFillUtils$$ instanceof Array ? $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Point$ ? [$DvtSvgImageFillUtils$$] : [new $dvt$$9$$.$Point$(1, 1)];
    this.$_currIndex$ = 0;
    $dvt$$9$$.$AnimScaleBy$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$AnimScaleBy$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimScaleBy$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ = this.$_currIndex$ < this.$_arScales$.length ? this.$_arScales$[this.$_currIndex$] : this.$_arScales$[this.$_arScales$.length - 1];
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, $DvtSvgShadowUtils$$.$getScaleX$() * $DvtSvgPatternFillUtils$$.x);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, $DvtSvgShadowUtils$$.$getScaleY$() * $DvtSvgPatternFillUtils$$.y);
    this.$_currIndex$++
  };
  $dvt$$9$$.$AnimScaleFadeIn$ = function $$dvt$$9$$$$AnimScaleFadeIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimScaleFadeIn$, $dvt$$9$$.$AnimFadeIn$);
  $dvt$$9$$.$AnimScaleFadeIn$.prototype.Init = function $$dvt$$9$$$$AnimScaleFadeIn$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    this.$_boundsRect$ = $DvtSvgImageFillUtils$$;
    this.$_direction$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $dvt$$9$$.$BaseAnimation$.$DIR_NW$;
    this.$_minScale$ = $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$ : 0.5;
    $dvt$$9$$.$AnimScaleFadeIn$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    this.$_bSaveAndRestoreOriginalMatrices$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$AnimScaleFadeIn$.prototype.$InitStartState$ = function $$dvt$$9$$$$AnimScaleFadeIn$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$AnimScaleFadeIn$.$superclass$.$InitStartState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$_minScale$ * $DvtSvgShadowUtils$$.$getScaleX$(), $DvtSvgImageFillUtils$$ = this.$_minScale$ * $DvtSvgShadowUtils$$.$getScaleY$(), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgGradientUtils$$ = $dvt$$9$$.$BaseAnimation$.$GetAlignCompassPoint$(new $dvt$$9$$.$Rectangle$(0, 0, $DvtSvgPatternFillUtils$$ * $DvtSvgGradientUtils$$.$w$, $DvtSvgImageFillUtils$$ * $DvtSvgGradientUtils$$.$h$), this.$_boundsRect$, this.$_direction$);
    $DvtSvgShadowUtils$$.$setTranslate$($DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y);
    $DvtSvgShadowUtils$$.$setScale$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$AnimScaleFadeIn$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimScaleFadeIn$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$AnimScaleFadeIn$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getMatrix$();
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$AnimScaleFadeOut$ = function $$dvt$$9$$$$AnimScaleFadeOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimScaleFadeOut$, $dvt$$9$$.$AnimFadeOut$);
  $dvt$$9$$.$AnimScaleFadeOut$.prototype.Init = function $$dvt$$9$$$$AnimScaleFadeOut$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    this.$_boundsRect$ = $DvtSvgImageFillUtils$$;
    this.$_direction$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $dvt$$9$$.$BaseAnimation$.$DIR_NE$;
    this.$_minScale$ = $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$ : 0.5;
    $dvt$$9$$.$AnimScaleFadeOut$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    this.$_bSaveAndRestoreOriginalMatrices$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$AnimScaleFadeOut$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimScaleFadeOut$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$AnimScaleFadeOut$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$_minScale$ * $DvtSvgShadowUtils$$.$getScaleX$(), $DvtSvgImageFillUtils$$ = this.$_minScale$ * $DvtSvgShadowUtils$$.$getScaleY$(), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgGradientUtils$$ = $dvt$$9$$.$BaseAnimation$.$GetAlignCompassPoint$(new $dvt$$9$$.$Rectangle$(0, 0, $DvtSvgPatternFillUtils$$ * $DvtSvgGradientUtils$$.$w$, $DvtSvgImageFillUtils$$ * $DvtSvgGradientUtils$$.$h$), this.$_boundsRect$, this.$_direction$);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, $DvtSvgPatternFillUtils$$);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, $DvtSvgImageFillUtils$$);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateX$, $DvtSvgShadowUtils$$.$setTranslateX$, $DvtSvgGradientUtils$$.x);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateY$, $DvtSvgShadowUtils$$.$setTranslateY$, $DvtSvgGradientUtils$$.y)
  };
  $dvt$$9$$.$AnimScaleTo$ = function $$dvt$$9$$$$AnimScaleTo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimScaleTo$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$AnimScaleTo$.prototype.Init = function $$dvt$$9$$$$AnimScaleTo$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_arScales$ = $DvtSvgImageFillUtils$$ instanceof Array ? $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Point$ ? [$DvtSvgImageFillUtils$$] : [new $dvt$$9$$.$Point$(1, 1)];
    this.$_currIndex$ = 0;
    $dvt$$9$$.$AnimScaleTo$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$AnimScaleTo$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimScaleTo$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ = this.$_currIndex$ < this.$_arScales$.length ? this.$_arScales$[this.$_currIndex$] : this.$_arScales$[this.$_arScales$.length - 1];
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, $DvtSvgPatternFillUtils$$.x);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, $DvtSvgPatternFillUtils$$.y);
    this.$_currIndex$++
  };
  $dvt$$9$$.$AnimPopIn$ = function $$dvt$$9$$$$AnimPopIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimPopIn$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$AnimPopIn$.$BackOut$ = function $$dvt$$9$$$$AnimPopIn$$$BackOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Easing$.$backOut$($DvtSvgShadowUtils$$, 2.5)
  };
  $dvt$$9$$.$AnimPopIn$.prototype.Init = function $$dvt$$9$$$$AnimPopIn$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    if(this.$_bCenter$ = $DvtSvgImageFillUtils$$) {
      this.$_tempContainers$ = [], this.$_currIndex$ = 0
    }
    $dvt$$9$$.$AnimPopIn$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$AnimPopIn$.prototype.$setEasing$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$AnimPopIn$.prototype.$CreateAnimator$ = function $$dvt$$9$$$$AnimPopIn$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$AnimPopIn$.$superclass$.$CreateAnimator$.call(this, $DvtSvgShadowUtils$$);
    this.$_animator$.$setEasing$($dvt$$9$$.$AnimPopIn$.$BackOut$);
    this.$_bCenter$ && $dvt$$9$$.$Playable$.$appendOnEnd$(this.$_animator$, this.$RemoveTempContainers$, this)
  };
  $dvt$$9$$.$AnimPopIn$.prototype.$InitStartState$ = function $$dvt$$9$$$$AnimPopIn$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    if(this.$_bCenter$) {
      var $DvtSvgPatternFillUtils$$ = this.$_tempContainers$[this.$_currIndex$], $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$();
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$ = $DvtSvgShadowUtils$$.$getTranslateX$();
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$ = $DvtSvgShadowUtils$$.$getTranslateY$();
      var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.x + 0.5 * $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.y + 0.5 * $DvtSvgImageFillUtils$$.$h$;
      $DvtSvgPatternFillUtils$$.$setTranslate$($DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$ + $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$ + $DvtSvgImageFillUtils$$);
      $DvtSvgShadowUtils$$.$setTranslate$(-$DvtSvgGradientUtils$$, -$DvtSvgImageFillUtils$$);
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.getParent().$getChildIndex$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInChildIndex$ = $DvtSvgGradientUtils$$;
      $DvtSvgShadowUtils$$.getParent().$addChildAt$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
      $DvtSvgPatternFillUtils$$.$addChild$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$setScale$(0.01, 0.01);
      this.$_currIndex$++
    }else {
      $DvtSvgShadowUtils$$.$setScale$(0.01, 0.01)
    }
    $DvtSvgShadowUtils$$.$setVisible$($JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$AnimPopIn$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimPopIn$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    this.$_bCenter$ && ($DvtSvgShadowUtils$$ = new $dvt$$9$$.$Container$(this.$_context$), this.$_tempContainers$.push($DvtSvgShadowUtils$$));
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, 1);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, 1)
  };
  $dvt$$9$$.$AnimPopIn$.prototype.$RemoveTempContainers$ = function $$dvt$$9$$$$AnimPopIn$$$$RemoveTempContainers$$() {
    if(this.$_tempContainers$) {
      for(var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_tempContainers$.length;$DvtSvgShadowUtils$$++) {
        var $DvtSvgPatternFillUtils$$ = this.$_tempContainers$[$DvtSvgShadowUtils$$];
        this.$_tempContainers$[$DvtSvgShadowUtils$$] = $JSCompiler_alias_NULL$$;
        if(0 < $DvtSvgPatternFillUtils$$.$getNumChildren$()) {
          var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getChildAt$(0);
          $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$), $DvtSvgPatternFillUtils$$.getParent().$addChildAt$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInChildIndex$))
        }
        $DvtSvgPatternFillUtils$$.getParent().removeChild($DvtSvgPatternFillUtils$$)
      }
      this.$_tempContainers$ = $JSCompiler_alias_NULL$$
    }
  };
  $dvt$$9$$.$AnimPopOut$ = function $$dvt$$9$$$$AnimPopOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$AnimPopOut$, $dvt$$9$$.$BaseAnimation$);
  $dvt$$9$$.$AnimPopOut$.$BackIn$ = function $$dvt$$9$$$$AnimPopOut$$$BackIn$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Easing$.$backIn$($DvtSvgShadowUtils$$, 2.5)
  };
  $dvt$$9$$.$AnimPopOut$.prototype.Init = function $$dvt$$9$$$$AnimPopOut$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    if(this.$_bCenter$ = $DvtSvgImageFillUtils$$) {
      this.$_tempContainers$ = [], this.$_currIndex$ = 0
    }
    $dvt$$9$$.$AnimPopOut$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_bSaveAndRestoreOriginalMatrices$ = !this.$_bCenter$;
    this.$_bHideObjectsOnEnd$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$AnimPopOut$.prototype.$setEasing$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$AnimPopOut$.prototype.$CreateAnimator$ = function $$dvt$$9$$$$AnimPopOut$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$AnimPopOut$.$superclass$.$CreateAnimator$.call(this, $DvtSvgShadowUtils$$);
    this.$_animator$.$setEasing$($dvt$$9$$.$AnimPopOut$.$BackIn$);
    this.$_bCenter$ && $dvt$$9$$.$Playable$.$appendOnEnd$(this.$_animator$, this.$RemoveTempContainers$, this)
  };
  $dvt$$9$$.$AnimPopOut$.prototype.$InitStartState$ = function $$dvt$$9$$$$AnimPopOut$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    if(this.$_bCenter$) {
      var $DvtSvgPatternFillUtils$$ = this.$_tempContainers$[this.$_currIndex$], $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$();
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$ = $DvtSvgShadowUtils$$.$getTranslateX$();
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$ = $DvtSvgShadowUtils$$.$getTranslateY$();
      var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.x + 0.5 * $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.y + 0.5 * $DvtSvgImageFillUtils$$.$h$;
      $DvtSvgPatternFillUtils$$.$setTranslate$($DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$ + $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$ + $DvtSvgImageFillUtils$$);
      $DvtSvgShadowUtils$$.$setTranslate$(-$DvtSvgGradientUtils$$, -$DvtSvgImageFillUtils$$);
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.getParent().$getChildIndex$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInChildIndex$ = $DvtSvgGradientUtils$$;
      $DvtSvgShadowUtils$$.getParent().$addChildAt$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
      $DvtSvgPatternFillUtils$$.$addChild$($DvtSvgShadowUtils$$);
      this.$_currIndex$++
    }
  };
  $dvt$$9$$.$AnimPopOut$.prototype.$InitEndState$ = function $$dvt$$9$$$$AnimPopOut$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    this.$_bCenter$ && ($DvtSvgShadowUtils$$ = new $dvt$$9$$.$Container$(this.$_context$), this.$_tempContainers$.push($DvtSvgShadowUtils$$));
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, 0.01);
    this.$_animator$.$addProp$($dvt$$9$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, 0.01)
  };
  $dvt$$9$$.$AnimPopOut$.prototype.$RemoveTempContainers$ = function $$dvt$$9$$$$AnimPopOut$$$$RemoveTempContainers$$() {
    if(this.$_tempContainers$) {
      for(var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_tempContainers$.length;$DvtSvgShadowUtils$$++) {
        var $DvtSvgPatternFillUtils$$ = this.$_tempContainers$[$DvtSvgShadowUtils$$];
        this.$_tempContainers$[$DvtSvgShadowUtils$$] = $JSCompiler_alias_NULL$$;
        if(0 < $DvtSvgPatternFillUtils$$.$getNumChildren$()) {
          var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getChildAt$(0);
          $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$), $DvtSvgPatternFillUtils$$.getParent().$addChildAt$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInChildIndex$))
        }
        $DvtSvgPatternFillUtils$$.getParent().removeChild($DvtSvgPatternFillUtils$$)
      }
      this.$_tempContainers$ = $JSCompiler_alias_NULL$$
    }
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCombinedAnimConveyor$$, $dvt$$9$$.$ParallelPlayable$);
  $DvtCombinedAnimConveyor$$.prototype.Init = function $$DvtCombinedAnimConveyor$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    $dvt$$9$$ || ($dvt$$9$$ = 0.5);
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $DvtAnimConveyorOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$);
    $DvtSvgImageFillUtils$$ = new $DvtAnimConveyorIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $dvt$$9$$ / 3 + $DvtSvgFilterContext$$);
    $DvtCombinedAnimConveyor$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$])
  };
  $dvt$$9$$.$CombinedAnimCube$ = function $$dvt$$9$$$$CombinedAnimCube$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CombinedAnimCube$, $dvt$$9$$.$ParallelPlayable$);
  $dvt$$9$$.$CombinedAnimCube$.prototype.Init = function $$dvt$$9$$$$CombinedAnimCube$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = 0.5);
    $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $DvtAnimCubeOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgImageFillUtils$$ = new $DvtAnimCubeIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $dvt$$9$$.$CombinedAnimCube$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$])
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCombinedAnimFade$$, $dvt$$9$$.$ParallelPlayable$);
  $DvtCombinedAnimFade$$.prototype.Init = function $$DvtCombinedAnimFade$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgGradientUtils$$ || ($DvtSvgGradientUtils$$ = 0.5);
    $DvtSvgFilterUtils$$ || ($DvtSvgFilterUtils$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$AnimFadeOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$AnimFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, 0.5 * $DvtSvgPatternFillUtils$$.$getDuration$() + $DvtSvgFilterUtils$$);
    $DvtCombinedAnimFade$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$])
  };
  $dvt$$9$$.$CombinedAnimFlip$ = function $$dvt$$9$$$$CombinedAnimFlip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CombinedAnimFlip$, $dvt$$9$$.$SequentialPlayable$);
  $dvt$$9$$.$CombinedAnimFlip$.prototype.Init = function $$dvt$$9$$$$CombinedAnimFlip$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = 0.5);
    $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $DvtAnimFlipOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgPatternFillUtils$$.$setEasing$($dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_IN$);
    $DvtSvgImageFillUtils$$ = new $DvtAnimFlipIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgImageFillUtils$$.$setEasing$($dvt$$9$$.$BaseAnimation$.$EASING_CUBIC_OUT$);
    $DvtSvgImageFillUtils$$.$HideObjects$();
    $dvt$$9$$.$CombinedAnimFlip$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$])
  };
  $dvt$$9$$.$CombinedAnimMoveBy$ = function $$dvt$$9$$$$CombinedAnimMoveBy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CombinedAnimMoveBy$, $dvt$$9$$.$ParallelPlayable$);
  $dvt$$9$$.$CombinedAnimMoveBy$.prototype.Init = function $$dvt$$9$$$$CombinedAnimMoveBy$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = 0.5);
    $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$AnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$AnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $dvt$$9$$.$CombinedAnimMoveBy$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$])
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCombinedAnimScaleFade$$, $dvt$$9$$.$ParallelPlayable$);
  $DvtCombinedAnimScaleFade$$.prototype.Init = function $$DvtCombinedAnimScaleFade$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    $DvtSvgFilterUtils$$ || ($DvtSvgFilterUtils$$ = $dvt$$9$$.$BaseAnimation$.$DIR_NE$);
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = $dvt$$9$$.$BaseAnimation$.$DIR_NW$);
    $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = 0.5);
    $DvtHtmlRichTooltipManager$$ || ($DvtHtmlRichTooltipManager$$ = 0.5);
    $DvtDomXmlParser$$ || ($DvtDomXmlParser$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$AnimScaleFadeOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$);
    $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$AnimScaleFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, 0.3 * $DvtSvgPatternFillUtils$$.$getDuration$() + $DvtDomXmlParser$$);
    $DvtCombinedAnimScaleFade$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$])
  };
  $dvt$$9$$.$CombinedAnimPopIn$ = function $$dvt$$9$$$$CombinedAnimPopIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CombinedAnimPopIn$, $dvt$$9$$.$ParallelPlayable$);
  $dvt$$9$$.$CombinedAnimPopIn$.prototype.Init = function $$dvt$$9$$$$CombinedAnimPopIn$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$ = [];
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ instanceof Array ? $DvtSvgPatternFillUtils$$ : [$DvtSvgPatternFillUtils$$];
    $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgFilterContext$$) ? 0 : $DvtSvgFilterContext$$;
    for(var $DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgPatternFillUtils$$.length;$DvtHtmlRichTooltipManager$$++) {
      var $DvtDomXmlParser$$ = new $dvt$$9$$.$AnimPopIn$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ + Math.random() * ($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$));
      $DvtSvgImplFactory$$.push($DvtDomXmlParser$$)
    }
    $dvt$$9$$.$CombinedAnimPopIn$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgImplFactory$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCombinedAnimPopOut$$, $dvt$$9$$.$ParallelPlayable$);
  $DvtCombinedAnimPopOut$$.prototype.Init = function $$DvtCombinedAnimPopOut$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$ = [];
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ instanceof Array ? $DvtSvgPatternFillUtils$$ : [$DvtSvgPatternFillUtils$$];
    $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgFilterContext$$) ? 0 : $DvtSvgFilterContext$$;
    for(var $DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgPatternFillUtils$$.length;$DvtHtmlRichTooltipManager$$++) {
      var $DvtDomXmlParser$$ = new $dvt$$9$$.$AnimPopOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ + Math.random() * ($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$));
      $DvtSvgImplFactory$$.push($DvtDomXmlParser$$)
    }
    $DvtCombinedAnimPopOut$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgImplFactory$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtBaseDrawEffect$$, $DvtLockable$$);
  $DvtBaseDrawEffect$$.prototype.$_Init$ = function $$DvtBaseDrawEffect$$$$$_Init$$() {
    $DvtBaseDrawEffect$$.$superclass$.$_Init$.call(this)
  };
  $DvtBaseDrawEffect$$.prototype.getId = $JSCompiler_get$$("$_id$");
  $DvtBaseDrawEffect$$.prototype.setId = $JSCompiler_set$$("$_id$");
  $DvtBaseDrawEffect$$.prototype.$mergeProps$ = function $$DvtBaseDrawEffect$$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.setId(this.$_id$)
  };
  $dvt$$9$$.$ColorUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ColorUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ColorUtils$.$_RED$ = 0;
  $dvt$$9$$.$ColorUtils$.$_GREEN$ = 1;
  $dvt$$9$$.$ColorUtils$.$_BLUE$ = 2;
  $dvt$$9$$.$ColorUtils$.$_ALPHA$ = 3;
  $dvt$$9$$.$ColorUtils$.$_RGBA$ = "rgba(";
  $dvt$$9$$.$ColorUtils$.$_RGB$ = "rgb(";
  $dvt$$9$$.$ColorUtils$.$_POUND$ = "#";
  $dvt$$9$$.$ColorUtils$.$_FACTOR$ = 0.15;
  $dvt$$9$$.$ColorUtils$.$getColorFromName$ = function $$dvt$$9$$$$ColorUtils$$$getColorFromName$$($DvtSvgShadowUtils$$) {
    if(!$dvt$$9$$.$ColorUtils$.$_names$) {
      var $DvtSvgPatternFillUtils$$ = [];
      $DvtSvgPatternFillUtils$$.aliceblue = "#f0f8ff";
      $DvtSvgPatternFillUtils$$.antiquewhite = "#faEbd7";
      $DvtSvgPatternFillUtils$$.aqua = "#00ffff";
      $DvtSvgPatternFillUtils$$.aquamarine = "#7fffd4";
      $DvtSvgPatternFillUtils$$.azure = "#f0ffff";
      $DvtSvgPatternFillUtils$$.beige = "#f5f5dc";
      $DvtSvgPatternFillUtils$$.bisque = "#ffE4c4";
      $DvtSvgPatternFillUtils$$.black = "#000000";
      $DvtSvgPatternFillUtils$$.blanchedalmond = "#ffEbcd";
      $DvtSvgPatternFillUtils$$.blue = "#0000ff";
      $DvtSvgPatternFillUtils$$.blueviolet = "#8a2bE2";
      $DvtSvgPatternFillUtils$$.brown = "#a52a2a";
      $DvtSvgPatternFillUtils$$.burlywood = "#dEb887";
      $DvtSvgPatternFillUtils$$.cadetblue = "#5f9Ea0";
      $DvtSvgPatternFillUtils$$.chartreuse = "#7fff00";
      $DvtSvgPatternFillUtils$$.chocolate = "#d2691E";
      $DvtSvgPatternFillUtils$$.coral = "#ff7f50";
      $DvtSvgPatternFillUtils$$.cornflowerblue = "#6495Ed";
      $DvtSvgPatternFillUtils$$.cornsilk = "#fff8dc";
      $DvtSvgPatternFillUtils$$.crimson = "#dc143c";
      $DvtSvgPatternFillUtils$$.cyan = "#00ffff";
      $DvtSvgPatternFillUtils$$.darkblue = "#00008b";
      $DvtSvgPatternFillUtils$$.darkcyan = "#008b8b";
      $DvtSvgPatternFillUtils$$.darkgoldenrod = "#b8860b";
      $DvtSvgPatternFillUtils$$.darkgray = "#a9a9a9";
      $DvtSvgPatternFillUtils$$.darkgreen = "#006400";
      $DvtSvgPatternFillUtils$$.darkkhaki = "#bdb76b";
      $DvtSvgPatternFillUtils$$.darkmagenta = "#8b008b";
      $DvtSvgPatternFillUtils$$.darkolivegreen = "#556b2f";
      $DvtSvgPatternFillUtils$$.darkorange = "#ff8c00";
      $DvtSvgPatternFillUtils$$.darkorchid = "#9932cc";
      $DvtSvgPatternFillUtils$$.darkred = "#8b0000";
      $DvtSvgPatternFillUtils$$.darksalmon = "#E9967a";
      $DvtSvgPatternFillUtils$$.darkseagreen = "#8fbc8f";
      $DvtSvgPatternFillUtils$$.darkslateblue = "#483d8b";
      $DvtSvgPatternFillUtils$$.darkslategray = "#2f4f4f";
      $DvtSvgPatternFillUtils$$.darkturquoise = "#00cEd1";
      $DvtSvgPatternFillUtils$$.darkviolet = "#9400d3";
      $DvtSvgPatternFillUtils$$.deeppink = "#ff1493";
      $DvtSvgPatternFillUtils$$.deepskyblue = "#00bfff";
      $DvtSvgPatternFillUtils$$.dimgray = "#696969";
      $DvtSvgPatternFillUtils$$.dodgerblue = "#1E90ff";
      $DvtSvgPatternFillUtils$$.firebrick = "#b22222";
      $DvtSvgPatternFillUtils$$.floralwhite = "#fffaf0";
      $DvtSvgPatternFillUtils$$.forestgreen = "#228b22";
      $DvtSvgPatternFillUtils$$.fuchsia = "#ff00ff";
      $DvtSvgPatternFillUtils$$.gainsboro = "#dcdcdc";
      $DvtSvgPatternFillUtils$$.ghostwhite = "#f8f8ff";
      $DvtSvgPatternFillUtils$$.gold = "#ffd700";
      $DvtSvgPatternFillUtils$$.goldenrod = "#daa520";
      $DvtSvgPatternFillUtils$$.gray = "#808080";
      $DvtSvgPatternFillUtils$$.green = "#008000";
      $DvtSvgPatternFillUtils$$.greenyellow = "#adff2f";
      $DvtSvgPatternFillUtils$$.honeydew = "#f0fff0";
      $DvtSvgPatternFillUtils$$.hotpink = "#ff69b4";
      $DvtSvgPatternFillUtils$$["indianred "] = "#cd5c5c";
      $DvtSvgPatternFillUtils$$["indigo "] = "#4b0082";
      $DvtSvgPatternFillUtils$$.ivory = "#fffff0";
      $DvtSvgPatternFillUtils$$.khaki = "#f0E68c";
      $DvtSvgPatternFillUtils$$.lavender = "#E6E6fa";
      $DvtSvgPatternFillUtils$$.lavenderblush = "#fff0f5";
      $DvtSvgPatternFillUtils$$.lawngreen = "#7cfc00";
      $DvtSvgPatternFillUtils$$.lemonchiffon = "#fffacd";
      $DvtSvgPatternFillUtils$$.lightblue = "#add8E6";
      $DvtSvgPatternFillUtils$$.lightcoral = "#f08080";
      $DvtSvgPatternFillUtils$$.lightcyan = "#E0ffff";
      $DvtSvgPatternFillUtils$$.lightgoldenrodyellow = "#fafad2";
      $DvtSvgPatternFillUtils$$.lightgray = "#d3d3d3";
      $DvtSvgPatternFillUtils$$.lightgreen = "#90EE90";
      $DvtSvgPatternFillUtils$$.lightpink = "#ffb6c1";
      $DvtSvgPatternFillUtils$$.lightsalmon = "#ffa07a";
      $DvtSvgPatternFillUtils$$.lightseagreen = "#20b2aa";
      $DvtSvgPatternFillUtils$$.lightskyblue = "#87cEfa";
      $DvtSvgPatternFillUtils$$.lightslategray = "#778899";
      $DvtSvgPatternFillUtils$$.lightsteelblue = "#b0c4dE";
      $DvtSvgPatternFillUtils$$.lightyellow = "#ffffE0";
      $DvtSvgPatternFillUtils$$.lime = "#00ff00";
      $DvtSvgPatternFillUtils$$.limegreen = "#32cd32";
      $DvtSvgPatternFillUtils$$.linen = "#faf0E6";
      $DvtSvgPatternFillUtils$$.magenta = "#ff00ff";
      $DvtSvgPatternFillUtils$$.maroon = "#800000";
      $DvtSvgPatternFillUtils$$.mediumaquamarine = "#66cdaa";
      $DvtSvgPatternFillUtils$$.mediumblue = "#0000cd";
      $DvtSvgPatternFillUtils$$.mediumorchid = "#ba55d3";
      $DvtSvgPatternFillUtils$$.mediumpurple = "#9370db";
      $DvtSvgPatternFillUtils$$.mediumseagreen = "#3cb371";
      $DvtSvgPatternFillUtils$$.mediumslateblue = "#7b68EE";
      $DvtSvgPatternFillUtils$$.mediumspringgreen = "#00fa9a";
      $DvtSvgPatternFillUtils$$.mediumturquoise = "#48d1cc";
      $DvtSvgPatternFillUtils$$.mediumvioletred = "#c71585";
      $DvtSvgPatternFillUtils$$.midnightblue = "#191970";
      $DvtSvgPatternFillUtils$$.mintcream = "#f5fffa";
      $DvtSvgPatternFillUtils$$.mistyrose = "#ffE4E1";
      $DvtSvgPatternFillUtils$$.moccasin = "#ffE4b5";
      $DvtSvgPatternFillUtils$$.navajowhite = "#ffdEad";
      $DvtSvgPatternFillUtils$$.navy = "#000080";
      $DvtSvgPatternFillUtils$$.oldlace = "#fdf5E6";
      $DvtSvgPatternFillUtils$$.olive = "#808000";
      $DvtSvgPatternFillUtils$$.olivedrab = "#6b8E23";
      $DvtSvgPatternFillUtils$$.orange = "#ffa500";
      $DvtSvgPatternFillUtils$$.orangered = "#ff4500";
      $DvtSvgPatternFillUtils$$.orchid = "#da70d6";
      $DvtSvgPatternFillUtils$$.palegoldenrod = "#EEE8aa";
      $DvtSvgPatternFillUtils$$.palegreen = "#98fb98";
      $DvtSvgPatternFillUtils$$.paleturquoise = "#afEEEE";
      $DvtSvgPatternFillUtils$$.palevioletred = "#db7093";
      $DvtSvgPatternFillUtils$$.papayawhip = "#ffEfd5";
      $DvtSvgPatternFillUtils$$.peachpuff = "#ffdab9";
      $DvtSvgPatternFillUtils$$.peru = "#cd853f";
      $DvtSvgPatternFillUtils$$.pink = "#ffc0cb";
      $DvtSvgPatternFillUtils$$.plum = "#dda0dd";
      $DvtSvgPatternFillUtils$$.powderblue = "#b0E0E6";
      $DvtSvgPatternFillUtils$$.purple = "#800080";
      $DvtSvgPatternFillUtils$$.rebeccapurple = "#663399";
      $DvtSvgPatternFillUtils$$.red = "#ff0000";
      $DvtSvgPatternFillUtils$$.rosybrown = "#bc8f8f";
      $DvtSvgPatternFillUtils$$.royalblue = "#4169E1";
      $DvtSvgPatternFillUtils$$.saddlebrown = "#8b4513";
      $DvtSvgPatternFillUtils$$.salmon = "#fa8072";
      $DvtSvgPatternFillUtils$$.sandybrown = "#f4a460";
      $DvtSvgPatternFillUtils$$.seagreen = "#2E8b57";
      $DvtSvgPatternFillUtils$$.seashell = "#fff5EE";
      $DvtSvgPatternFillUtils$$.sienna = "#a0522d";
      $DvtSvgPatternFillUtils$$.silver = "#c0c0c0";
      $DvtSvgPatternFillUtils$$.skyblue = "#87cEEb";
      $DvtSvgPatternFillUtils$$.slateblue = "#6a5acd";
      $DvtSvgPatternFillUtils$$.slategray = "#708090";
      $DvtSvgPatternFillUtils$$.snow = "#fffafa";
      $DvtSvgPatternFillUtils$$.springgreen = "#00ff7f";
      $DvtSvgPatternFillUtils$$.steelblue = "#4682b4";
      $DvtSvgPatternFillUtils$$.tan = "#d2b48c";
      $DvtSvgPatternFillUtils$$.teal = "#008080";
      $DvtSvgPatternFillUtils$$.thistle = "#d8bfd8";
      $DvtSvgPatternFillUtils$$.tomato = "#ff6347";
      $DvtSvgPatternFillUtils$$.turquoise = "#40E0d0";
      $DvtSvgPatternFillUtils$$.violet = "#EE82EE";
      $DvtSvgPatternFillUtils$$.wheat = "#f5dEb3";
      $DvtSvgPatternFillUtils$$.white = "#ffffff";
      $DvtSvgPatternFillUtils$$.whitesmoke = "#f5f5f5";
      $DvtSvgPatternFillUtils$$.yellow = "#ffff00";
      $DvtSvgPatternFillUtils$$.yellowgreen = "#9acd32";
      $DvtSvgPatternFillUtils$$.transparent = "rgba(255,255,255,0)";
      $dvt$$9$$.$ColorUtils$.$_names$ = $DvtSvgPatternFillUtils$$
    }
    return $dvt$$9$$.$ColorUtils$.$_names$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$ColorUtils$.$isColor$ = function $$dvt$$9$$$$ColorUtils$$$isColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!$DvtSvgPatternFillUtils$$) {
      return $DvtSvgShadowUtils$$.charAt(0) === $dvt$$9$$.$ColorUtils$.$_POUND$ || 0 === $DvtSvgShadowUtils$$.indexOf($dvt$$9$$.$ColorUtils$.$_RGBA$) || 0 === $DvtSvgShadowUtils$$.indexOf($dvt$$9$$.$ColorUtils$.$_RGB$)
    }
    var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$;
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.toLowerCase();
    if($DvtSvgShadowUtils$$.charAt(0) === $dvt$$9$$.$ColorUtils$.$_POUND$) {
      7 === $DvtSvgShadowUtils$$.length && ($DvtSvgImageFillUtils$$ = RegExp(/^#[0-9a-f]{6}$/i).test($DvtSvgShadowUtils$$))
    }else {
      var $DvtSvgGradientUtils$$ = 0 === $DvtSvgShadowUtils$$.indexOf($dvt$$9$$.$ColorUtils$.$_RGBA$), $DvtSvgFilterUtils$$;
      $DvtSvgGradientUtils$$ || ($DvtSvgFilterUtils$$ = 0 === $DvtSvgShadowUtils$$.indexOf($dvt$$9$$.$ColorUtils$.$_RGB$));
      if($DvtSvgGradientUtils$$ || $DvtSvgFilterUtils$$) {
        if($DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.indexOf(")"), 0 <= $DvtSvgFilterUtils$$) {
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.substring($DvtSvgGradientUtils$$ ? 5 : 4, $DvtSvgFilterUtils$$).split(",");
          for(var $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.length, $DvtSvgImplFactory$$ = $JSCompiler_alias_TRUE$$, $DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgFilterContext$$;$DvtHtmlRichTooltipManager$$++) {
            var $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$[$DvtHtmlRichTooltipManager$$];
            if(0 > $DvtDomXmlParser$$ || 255 < $DvtDomXmlParser$$ || 3 < $DvtHtmlRichTooltipManager$$ && (0 > $DvtDomXmlParser$$ || 1 < $DvtDomXmlParser$$)) {
              $DvtSvgImplFactory$$ = $JSCompiler_alias_FALSE$$;
              break
            }
          }
          $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$ ? 4 === $DvtSvgFilterContext$$ : 3 === $DvtSvgFilterContext$$)
        }
      }
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ColorUtils$.$getAlpha$ = function $$dvt$$9$$$$ColorUtils$$$getAlpha$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_ALPHA$)
  };
  $dvt$$9$$.$ColorUtils$.$setAlpha$ = function $$dvt$$9$$$$ColorUtils$$$setAlpha$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$_setChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_ALPHA$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ColorUtils$.$getRed$ = function $$dvt$$9$$$$ColorUtils$$$getRed$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_RED$)
  };
  $dvt$$9$$.$ColorUtils$.$setRed$ = function $$dvt$$9$$$$ColorUtils$$$setRed$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$_setChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_RED$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ColorUtils$.$getBlue$ = function $$dvt$$9$$$$ColorUtils$$$getBlue$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_BLUE$)
  };
  $dvt$$9$$.$ColorUtils$.$setBlue$ = function $$dvt$$9$$$$ColorUtils$$$setBlue$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$_setChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_BLUE$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ColorUtils$.$getGreen$ = function $$dvt$$9$$$$ColorUtils$$$getGreen$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_GREEN$)
  };
  $dvt$$9$$.$ColorUtils$.$setGreen$ = function $$dvt$$9$$$$ColorUtils$$$setGreen$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$_setChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_GREEN$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ColorUtils$.$_getChannel$ = function $$dvt$$9$$$$ColorUtils$$$_getChannel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$;
    ($DvtSvgGradientUtils$$ = $dvt$$9$$.$ColorUtils$.$getColorFromName$($DvtSvgImageFillUtils$$)) && ($DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$);
    if($DvtSvgPatternFillUtils$$ === $dvt$$9$$.$ColorUtils$.$_ALPHA$) {
      if("#" === $DvtSvgImageFillUtils$$.charAt(0)) {
        return 7 < $DvtSvgImageFillUtils$$.length ? parseInt($DvtSvgImageFillUtils$$.substring(1, 3), 16) / 255 : 1
      }
      if("none" === $DvtSvgImageFillUtils$$) {
        return 0
      }
    }
    $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.indexOf("(");
    0 > $DvtSvgGradientUtils$$ ? ($DvtSvgGradientUtils$$ = [], 7 < $DvtSvgImageFillUtils$$.length ? ($DvtSvgGradientUtils$$[0] = parseInt($DvtSvgImageFillUtils$$.substr(3, 2), 16), $DvtSvgGradientUtils$$[1] = parseInt($DvtSvgImageFillUtils$$.substr(5, 2), 16), $DvtSvgGradientUtils$$[2] = parseInt($DvtSvgImageFillUtils$$.substr(7, 2), 16), $DvtSvgGradientUtils$$[3] = parseInt($DvtSvgImageFillUtils$$.substr(1, 2), 16) / 255) : ($DvtSvgGradientUtils$$[0] = parseInt($DvtSvgImageFillUtils$$.substr(1, 
    2), 16), $DvtSvgGradientUtils$$[1] = parseInt($DvtSvgImageFillUtils$$.substr(3, 2), 16), $DvtSvgGradientUtils$$[2] = parseInt($DvtSvgImageFillUtils$$.substr(5, 2), 16), $DvtSvgGradientUtils$$[3] = 1), $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$]) : ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.substring($DvtSvgGradientUtils$$ + 1, $DvtSvgImageFillUtils$$.indexOf(")")).split(","), 3 === $DvtSvgGradientUtils$$.length && $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$ColorUtils$.$_ALPHA$ ? 
    $DvtSvgGradientUtils$$ = 1 : ($DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$], $DvtSvgGradientUtils$$ = parseFloat($DvtSvgGradientUtils$$)));
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$ColorUtils$.$getDarker$ = function $$dvt$$9$$$$ColorUtils$$$getDarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_RED$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_GREEN$), $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_BLUE$), $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_ALPHA$);
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_FACTOR$);
    $DvtSvgImageFillUtils$$ = Math.max(parseInt($DvtSvgImageFillUtils$$ * $DvtSvgPatternFillUtils$$), 0);
    $DvtSvgGradientUtils$$ = Math.max(parseInt($DvtSvgGradientUtils$$ * $DvtSvgPatternFillUtils$$), 0);
    $DvtSvgFilterUtils$$ = Math.max(parseInt($DvtSvgFilterUtils$$ * $DvtSvgPatternFillUtils$$), 0);
    return $dvt$$9$$.$ColorUtils$.$makeRGBA$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$ColorUtils$.$getGrey$ = function $$dvt$$9$$$$ColorUtils$$$getGrey$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_RED$), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_BLUE$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_GREEN$), $DvtSvgPatternFillUtils$$ = Math.round(0.3 * $DvtSvgPatternFillUtils$$ + 0.59 * $DvtSvgImageFillUtils$$ + 0.11 * $DvtSvgGradientUtils$$);
    return this.$setRGB$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ColorUtils$.$invert$ = function $$dvt$$9$$$$ColorUtils$$$invert$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = 255 - $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_RED$), $DvtSvgImageFillUtils$$ = 255 - $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_BLUE$), $DvtSvgGradientUtils$$ = 255 - $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_GREEN$);
    return"#" === $DvtSvgShadowUtils$$.charAt(0) ? $dvt$$9$$.$ColorUtils$.$makePound$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $DvtSvgShadowUtils$$.substr(0, 4) === $dvt$$9$$.$ColorUtils$.$_RGB$ ? $dvt$$9$$.$ColorUtils$.$makeRGB$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $dvt$$9$$.$ColorUtils$.$makeRGBA$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, 
    $dvt$$9$$.$ColorUtils$.$_ALPHA$))
  };
  $dvt$$9$$.$ColorUtils$.$isRGBA$ = function $$dvt$$9$$$$ColorUtils$$$isRGBA$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.substr(0, 5) === $dvt$$9$$.$ColorUtils$.$_RGBA$
  };
  $dvt$$9$$.$ColorUtils$.$makeRGB$ = function $$dvt$$9$$$$ColorUtils$$$makeRGB$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgImageFillUtils$$) ? 0 : $DvtSvgImageFillUtils$$;
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    return $dvt$$9$$.$ColorUtils$.$_RGB$ + $DvtSvgShadowUtils$$ + "," + $DvtSvgPatternFillUtils$$ + "," + $DvtSvgImageFillUtils$$ + ")"
  };
  $dvt$$9$$.$ColorUtils$.$makeRGBA$ = function $$dvt$$9$$$$ColorUtils$$$makeRGBA$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgImageFillUtils$$) ? 0 : Math.round($DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : Math.round($DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : Math.round($DvtSvgShadowUtils$$);
    $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgGradientUtils$$) ? 1 : $DvtSvgGradientUtils$$;
    return $dvt$$9$$.$ColorUtils$.$_RGBA$ + $DvtSvgShadowUtils$$ + "," + $DvtSvgPatternFillUtils$$ + "," + $DvtSvgImageFillUtils$$ + "," + $DvtSvgGradientUtils$$ + ")"
  };
  $dvt$$9$$.$ColorUtils$.$makePound$ = function $$dvt$$9$$$$ColorUtils$$$makePound$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = Math.round($DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$ = Math.round($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$ = Math.round($DvtSvgShadowUtils$$).toString(16);
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.toString(16);
    $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.toString(16);
    return"#" + (1 === $DvtSvgShadowUtils$$.length ? "0" : "") + $DvtSvgShadowUtils$$ + (1 === $DvtSvgPatternFillUtils$$.length ? "0" : "") + $DvtSvgPatternFillUtils$$ + (1 === $DvtSvgImageFillUtils$$.length ? "0" : "") + $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ColorUtils$.$getPound$ = function $$dvt$$9$$$$ColorUtils$$$getPound$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    if("#" === $DvtSvgShadowUtils$$.charAt(0)) {
      if(7 >= $DvtSvgShadowUtils$$.length) {
        return $DvtSvgShadowUtils$$
      }
      $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_POUND$;
      $DvtSvgPatternFillUtils$$ += $DvtSvgShadowUtils$$.substring(3, 5) + $DvtSvgShadowUtils$$.substring(5, 7) + $DvtSvgShadowUtils$$.substring(7, 9)
    }else {
      $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgShadowUtils$$);
      var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgShadowUtils$$);
      $DvtSvgShadowUtils$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$makePound$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ColorUtils$.$getRGB$ = function $$dvt$$9$$$$ColorUtils$$$getRGB$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$getColorFromName$($DvtSvgShadowUtils$$)) && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$);
    if("#" === $DvtSvgShadowUtils$$.charAt(0)) {
      $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_RGB$;
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length;
      if(7 < $DvtSvgImageFillUtils$$) {
        $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(5, 7), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(7, 9), 16)
      }else {
        if(7 === $DvtSvgImageFillUtils$$) {
          $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + "," + parseInt($DvtSvgShadowUtils$$.substr(5), 16)
        }else {
          if(4 === $DvtSvgImageFillUtils$$) {
            var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.substring(1, 2), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.substring(2, 3);
            $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(3);
            $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgImageFillUtils$$ + $DvtSvgImageFillUtils$$, 16) + "," + parseInt($DvtSvgGradientUtils$$ + $DvtSvgGradientUtils$$, 16) + "," + parseInt($DvtSvgShadowUtils$$ + $DvtSvgShadowUtils$$, 16)
          }else {
            5 === $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + ",0,1" : 3 === $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + ",0,0,1")
          }
        }
      }
      $DvtSvgPatternFillUtils$$ += ")"
    }else {
      $DvtSvgShadowUtils$$.substr(0, 5) === $dvt$$9$$.$ColorUtils$.$_RGBA$ ? ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf(","), $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_RGB$, $DvtSvgPatternFillUtils$$ += $DvtSvgShadowUtils$$.substring(5, $DvtSvgImageFillUtils$$), $DvtSvgPatternFillUtils$$ += ")") : $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ColorUtils$.$getRGBA$ = function $$dvt$$9$$$$ColorUtils$$$getRGBA$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$getColorFromName$($DvtSvgShadowUtils$$)) && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$);
    if("#" === $DvtSvgShadowUtils$$.charAt(0)) {
      $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_RGBA$;
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length;
      if(7 < $DvtSvgImageFillUtils$$) {
        $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(5, 7), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(7, 9), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) / 255
      }else {
        if(7 === $DvtSvgImageFillUtils$$) {
          $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + "," + parseInt($DvtSvgShadowUtils$$.substr(5), 16) + ",1"
        }else {
          if(5 === $DvtSvgImageFillUtils$$) {
            $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + ",0,1"
          }else {
            if(4 === $DvtSvgImageFillUtils$$) {
              var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.substring(1, 2), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.substring(2, 3);
              $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(3);
              $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgImageFillUtils$$ + $DvtSvgImageFillUtils$$, 16) + "," + parseInt($DvtSvgGradientUtils$$ + $DvtSvgGradientUtils$$, 16) + "," + parseInt($DvtSvgShadowUtils$$ + $DvtSvgShadowUtils$$, 16) + ",1"
            }else {
              3 === $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + ",0,0,1")
            }
          }
        }
      }
      $DvtSvgPatternFillUtils$$ += ")"
    }else {
      $DvtSvgShadowUtils$$.substr(0, 4) === $dvt$$9$$.$ColorUtils$.$_RGB$ ? ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_RGBA$, $DvtSvgPatternFillUtils$$ += $DvtSvgShadowUtils$$.substring(4, $DvtSvgShadowUtils$$.length - 1) + ",1)") : $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ColorUtils$.$_setChannel$ = function $$dvt$$9$$$$ColorUtils$$$_setChannel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgPatternFillUtils$$ === $JSCompiler_alias_VOID$$ || $DvtSvgImageFillUtils$$ === $JSCompiler_alias_VOID$$ || $DvtSvgPatternFillUtils$$ < $dvt$$9$$.$ColorUtils$.$_RED$ || $DvtSvgPatternFillUtils$$ > $dvt$$9$$.$ColorUtils$.$_ALPHA$) {
      return $DvtSvgShadowUtils$$
    }
    var $DvtSvgGradientUtils$$ = $dvt$$9$$.$ColorUtils$.$getColorFromName$($DvtSvgShadowUtils$$);
    $DvtSvgGradientUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgGradientUtils$$);
    var $DvtSvgFilterUtils$$ = "#" === $DvtSvgShadowUtils$$.charAt(0), $DvtSvgFilterContext$$;
    $DvtSvgFilterUtils$$ ? ($DvtSvgGradientUtils$$ = [], $DvtSvgGradientUtils$$.push(parseInt($DvtSvgShadowUtils$$.substr(1, 2), 16)), $DvtSvgGradientUtils$$.push(parseInt($DvtSvgShadowUtils$$.substr(3, 2), 16)), $DvtSvgGradientUtils$$.push(parseInt($DvtSvgShadowUtils$$.substr(5, 2), 16)), $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$ColorUtils$.$_ALPHA$ && ($DvtSvgGradientUtils$$.push($DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = $JSCompiler_alias_FALSE$$, $DvtSvgFilterContext$$ = $JSCompiler_alias_TRUE$$)) : 
    ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.substr(0, 5) === $dvt$$9$$.$ColorUtils$.$_RGBA$, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.substring($DvtSvgShadowUtils$$.indexOf("(") + 1, $DvtSvgShadowUtils$$.indexOf(")")).split(","), !$DvtSvgFilterContext$$ && $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$ColorUtils$.$_ALPHA$ && ($DvtSvgGradientUtils$$.push($DvtSvgImageFillUtils$$), $DvtSvgFilterContext$$ = $JSCompiler_alias_TRUE$$));
    $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
    return $DvtSvgFilterUtils$$ ? $dvt$$9$$.$ColorUtils$.$makePound$($DvtSvgGradientUtils$$[0], $DvtSvgGradientUtils$$[1], $DvtSvgGradientUtils$$[2]) : $DvtSvgFilterContext$$ ? $dvt$$9$$.$ColorUtils$.$makeRGBA$($DvtSvgGradientUtils$$[0], $DvtSvgGradientUtils$$[1], $DvtSvgGradientUtils$$[2], $DvtSvgGradientUtils$$[3]) : $dvt$$9$$.$ColorUtils$.$makeRGB$($DvtSvgGradientUtils$$[0], $DvtSvgGradientUtils$$[1], $DvtSvgGradientUtils$$[2])
  };
  $dvt$$9$$.$ColorUtils$.$setRGB$ = function $$dvt$$9$$$$ColorUtils$$$setRGB$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgGradientUtils$$) ? 0 : $DvtSvgGradientUtils$$;
    $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgImageFillUtils$$) ? 0 : $DvtSvgImageFillUtils$$;
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$;
    if("#" === $DvtSvgShadowUtils$$.charAt(0)) {
      return $dvt$$9$$.$ColorUtils$.$makePound$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
    }
    var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.substr(0, 5) === $dvt$$9$$.$ColorUtils$.$_RGBA$;
    $DvtSvgPatternFillUtils$$ = ($DvtSvgFilterUtils$$ ? $dvt$$9$$.$ColorUtils$.$_RGBA$ : $dvt$$9$$.$ColorUtils$.$_RGB$) + $DvtSvgPatternFillUtils$$ + "," + $DvtSvgImageFillUtils$$ + "," + $DvtSvgGradientUtils$$;
    $DvtSvgFilterUtils$$ && ($DvtSvgPatternFillUtils$$ += "," + $DvtSvgShadowUtils$$.substring($DvtSvgShadowUtils$$.lastIndexOf(5, ",") + 1, $DvtSvgShadowUtils$$.indexOf(")")));
    return $DvtSvgPatternFillUtils$$ + ")"
  };
  $dvt$$9$$.$ColorUtils$.$getBrighter$ = function $$dvt$$9$$$$ColorUtils$$$getBrighter$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = 0.7, $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_RED$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_GREEN$), $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_BLUE$);
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_ALPHA$);
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_FACTOR$);
    var $DvtSvgFilterContext$$ = parseInt(1 / (1 - $DvtSvgPatternFillUtils$$));
    if(0 === $DvtSvgImageFillUtils$$ && 0 === $DvtSvgGradientUtils$$ && 0 === $DvtSvgFilterUtils$$) {
      return $DvtSvgPatternFillUtils$$ = parseInt(255 * $DvtSvgPatternFillUtils$$), $dvt$$9$$.$ColorUtils$.$makeRGBA$($DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
    }
    0 < $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$ < $DvtSvgFilterContext$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgFilterContext$$);
    0 < $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$ < $DvtSvgFilterContext$$ && ($DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$);
    0 < $DvtSvgFilterUtils$$ && $DvtSvgFilterUtils$$ < $DvtSvgFilterContext$$ && ($DvtSvgFilterUtils$$ = $DvtSvgFilterContext$$);
    $DvtSvgImageFillUtils$$ = Math.min(parseInt($DvtSvgImageFillUtils$$ / $DvtSvgPatternFillUtils$$), 255);
    $DvtSvgGradientUtils$$ = Math.min(parseInt($DvtSvgGradientUtils$$ / $DvtSvgPatternFillUtils$$), 255);
    $DvtSvgFilterUtils$$ = Math.min(parseInt($DvtSvgFilterUtils$$ / $DvtSvgPatternFillUtils$$), 255);
    return $dvt$$9$$.$ColorUtils$.$makeRGBA$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$ColorUtils$.$rgb2hsl$ = function $$dvt$$9$$$$ColorUtils$$$rgb2hsl$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ /= 255;
    $DvtSvgPatternFillUtils$$ /= 255;
    $DvtSvgImageFillUtils$$ /= 255;
    var $DvtSvgGradientUtils$$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = Math.min($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), $dvt$$9$$ = $DvtSvgGradientUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = $dvt$$9$$ / 2;
    $DvtSvgGradientUtils$$ == $DvtSvgFilterUtils$$ ? $dvt$$9$$ = $DvtSvgFilterContext$$ = 0 : ($DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$ - $DvtSvgFilterUtils$$, $dvt$$9$$ = 0.5 < $DvtSvgImplFactory$$ ? $DvtSvgFilterUtils$$ / (2 - $dvt$$9$$) : $DvtSvgFilterUtils$$ / $dvt$$9$$, $DvtSvgGradientUtils$$ == $DvtSvgShadowUtils$$ ? $DvtSvgFilterContext$$ = ($DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$) / $DvtSvgFilterUtils$$ + ($DvtSvgPatternFillUtils$$ < $DvtSvgImageFillUtils$$ ? 6 : 0) : $DvtSvgGradientUtils$$ == 
    $DvtSvgPatternFillUtils$$ ? $DvtSvgFilterContext$$ = ($DvtSvgImageFillUtils$$ - $DvtSvgShadowUtils$$) / $DvtSvgFilterUtils$$ + 2 : $DvtSvgGradientUtils$$ == $DvtSvgImageFillUtils$$ && ($DvtSvgFilterContext$$ = ($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$) / $DvtSvgFilterUtils$$ + 4), $DvtSvgFilterContext$$ /= 6);
    return{$h$:360 * $DvtSvgFilterContext$$, $s$:$dvt$$9$$, $l$:$DvtSvgImplFactory$$}
  };
  $dvt$$9$$.$ColorUtils$.$hsl2rgb$ = function $$dvt$$9$$$$ColorUtils$$$hsl2rgb$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ /= 360;
    if(0 == $DvtSvgPatternFillUtils$$) {
      $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$
    }else {
      var $DvtSvgGradientUtils$$ = 0.5 > $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ * (1 + $DvtSvgPatternFillUtils$$) : $DvtSvgImageFillUtils$$ + $DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$ * $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$ = 2 * $DvtSvgImageFillUtils$$ - $DvtSvgGradientUtils$$;
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_hue2rgb$($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$ + 1 / 3);
      $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_hue2rgb$($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$);
      $DvtSvgShadowUtils$$ = $dvt$$9$$.$ColorUtils$.$_hue2rgb$($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$ - 1 / 3)
    }
    return{$r$:255 * $DvtSvgImageFillUtils$$, $g$:255 * $DvtSvgPatternFillUtils$$, $b$:255 * $DvtSvgShadowUtils$$}
  };
  $dvt$$9$$.$ColorUtils$.$_hue2rgb$ = function $$dvt$$9$$$$ColorUtils$$$_hue2rgb$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    0 > $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ += 1 : 1 < $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ -= 1);
    return $DvtSvgImageFillUtils$$ < 1 / 6 ? $DvtSvgShadowUtils$$ + 6 * ($DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$) * $DvtSvgImageFillUtils$$ : 0.5 > $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgImageFillUtils$$ < 2 / 3 ? $DvtSvgShadowUtils$$ + 6 * ($DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$) * (2 / 3 - $DvtSvgImageFillUtils$$) : $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$ColorUtils$.$hsv2rgb$ = function $$dvt$$9$$$$ColorUtils$$$hsv2rgb$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$;
    if(0 == $DvtSvgImageFillUtils$$) {
      return{$r$:0, $g$:0, $v$:0}
    }
    $DvtSvgPatternFillUtils$$ /= 100;
    $DvtSvgImageFillUtils$$ /= 100;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ % 360 / 60;
    $DvtSvgFilterContext$$ = Math.floor($DvtSvgShadowUtils$$);
    $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$ - $DvtSvgFilterContext$$;
    $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$ * (1 - $DvtSvgPatternFillUtils$$);
    $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$ * (1 - $DvtSvgPatternFillUtils$$ * $DvtSvgImplFactory$$);
    $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$ * (1 - $DvtSvgPatternFillUtils$$ * (1 - $DvtSvgImplFactory$$));
    0 == $DvtSvgFilterContext$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$, $dvt$$9$$ = $DvtSvgShadowUtils$$) : 1 == $DvtSvgFilterContext$$ ? ($DvtSvgGradientUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$, $dvt$$9$$ = $DvtSvgShadowUtils$$) : 2 == $DvtSvgFilterContext$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$, $dvt$$9$$ = $DvtSvgPatternFillUtils$$) : 
    3 == $DvtSvgFilterContext$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $dvt$$9$$ = $DvtSvgImageFillUtils$$) : 4 == $DvtSvgFilterContext$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$, $dvt$$9$$ = $DvtSvgImageFillUtils$$) : 5 == $DvtSvgFilterContext$$ && ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$, $dvt$$9$$ = $DvtHtmlRichTooltipManager$$);
    $DvtSvgGradientUtils$$ = Math.floor(255 * $DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ = Math.floor(255 * $DvtSvgFilterUtils$$);
    $dvt$$9$$ = Math.floor(255 * $dvt$$9$$);
    return{$r$:$DvtSvgGradientUtils$$, $g$:$DvtSvgFilterUtils$$, $b$:$dvt$$9$$}
  };
  $dvt$$9$$.$ColorUtils$.$rgb2hsv$ = function $$dvt$$9$$$$ColorUtils$$$rgb2hsv$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$;
    $DvtSvgShadowUtils$$ /= 255;
    $DvtSvgPatternFillUtils$$ /= 255;
    $DvtSvgImageFillUtils$$ /= 255;
    $DvtSvgGradientUtils$$ = Math.min($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    if($DvtSvgGradientUtils$$ == $DvtSvgFilterUtils$$) {
      return{$h$:$JSCompiler_alias_VOID$$, $s$:0, $v$:100 * $DvtSvgFilterUtils$$}
    }
    $DvtSvgShadowUtils$$ = Math.floor(60 * (($DvtSvgShadowUtils$$ == $DvtSvgGradientUtils$$ ? 3 : $DvtSvgPatternFillUtils$$ == $DvtSvgGradientUtils$$ ? 5 : 1) - ($DvtSvgShadowUtils$$ == $DvtSvgGradientUtils$$ ? $DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$ : $DvtSvgPatternFillUtils$$ == $DvtSvgGradientUtils$$ ? $DvtSvgImageFillUtils$$ - $DvtSvgShadowUtils$$ : $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$) / ($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$))) % 360;
    $DvtSvgGradientUtils$$ = Math.floor(100 * (($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$) / $DvtSvgFilterUtils$$));
    $DvtSvgFilterUtils$$ = Math.floor(100 * $DvtSvgFilterUtils$$);
    return{$h$:$DvtSvgShadowUtils$$, $s$:$DvtSvgGradientUtils$$, $v$:$DvtSvgFilterUtils$$}
  };
  $dvt$$9$$.$ColorUtils$.$getPastel$ = function $$dvt$$9$$$$ColorUtils$$$getPastel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_ALPHA$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_RED$), $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_GREEN$), $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_BLUE$), $DvtSvgGradientUtils$$ = 
    Math.min($DvtSvgGradientUtils$$ + parseInt((255 - $DvtSvgGradientUtils$$) * $DvtSvgPatternFillUtils$$), 255), $DvtSvgFilterUtils$$ = Math.min($DvtSvgFilterUtils$$ + parseInt((255 - $DvtSvgFilterUtils$$) * $DvtSvgPatternFillUtils$$), 255), $DvtSvgFilterContext$$ = Math.min($DvtSvgFilterContext$$ + parseInt((255 - $DvtSvgFilterContext$$) * $DvtSvgPatternFillUtils$$), 255);
    return $dvt$$9$$.$ColorUtils$.$makeRGBA$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$ColorUtils$.$adjustHSL$ = function $$dvt$$9$$$$ColorUtils$$$adjustHSL$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$ColorUtils$.$_hslCache$ || ($dvt$$9$$.$ColorUtils$.$_hslCache$ = new $dvt$$9$$.$Cache$(100));
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$ + ":0:" + $DvtSvgPatternFillUtils$$ + ":" + $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$_hslCache$.get($DvtSvgGradientUtils$$);
    if($DvtSvgFilterUtils$$ != $JSCompiler_alias_NULL$$) {
      return $DvtSvgFilterUtils$$
    }
    var $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_RED$), $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_GREEN$), $DvtSvgImplFactory$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_BLUE$);
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$_ALPHA$);
    $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$rgb2hsl$($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgFilterUtils$$ = Math.min(Math.max(0, $DvtSvgFilterContext$$.$h$ + 0), 360);
    $DvtSvgPatternFillUtils$$ = Math.min(Math.max(0, $DvtSvgFilterContext$$.$s$ + $DvtSvgPatternFillUtils$$), 1);
    $DvtSvgImageFillUtils$$ = Math.min(Math.max(0, $DvtSvgFilterContext$$.$l$ + $DvtSvgImageFillUtils$$), 1);
    $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$hsl2rgb$($DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$ = 1 == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$ColorUtils$.$makePound$($DvtSvgImageFillUtils$$.$r$, $DvtSvgImageFillUtils$$.$g$, $DvtSvgImageFillUtils$$.$b$) : $dvt$$9$$.$ColorUtils$.$makeRGBA$($DvtSvgImageFillUtils$$.$r$, $DvtSvgImageFillUtils$$.$g$, $DvtSvgImageFillUtils$$.$b$, $DvtSvgShadowUtils$$);
    $dvt$$9$$.$ColorUtils$.$_hslCache$.put($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    return $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$ColorUtils$.$interpolateColor$ = function $$dvt$$9$$$$ColorUtils$$$interpolateColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgShadowUtils$$), $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgShadowUtils$$), $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgShadowUtils$$);
    var $DvtSvgImplFactory$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgPatternFillUtils$$), $DvtHtmlRichTooltipManager$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgPatternFillUtils$$), $DvtDomXmlParser$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgPatternFillUtils$$);
    $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgPatternFillUtils$$);
    return $dvt$$9$$.$ColorUtils$.$makeRGBA$(Math.round($dvt$$9$$.$Math$.$interpolateNumber$($DvtSvgGradientUtils$$, $DvtSvgImplFactory$$, $DvtSvgImageFillUtils$$)), Math.round($dvt$$9$$.$Math$.$interpolateNumber$($DvtSvgFilterUtils$$, $DvtHtmlRichTooltipManager$$, $DvtSvgImageFillUtils$$)), Math.round($dvt$$9$$.$Math$.$interpolateNumber$($DvtSvgFilterContext$$, $DvtDomXmlParser$$, $DvtSvgImageFillUtils$$)), $dvt$$9$$.$Math$.$interpolateNumber$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$))
  };
  $dvt$$9$$.$ColorUtils$.$inferColor$ = function $$dvt$$9$$$$ColorUtils$$$inferColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$ == $DvtSvgPatternFillUtils$$) {
      return $DvtSvgImageFillUtils$$
    }
    if($DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$) {
      return $DvtSvgPatternFillUtils$$
    }
    var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgShadowUtils$$), $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$ == $DvtSvgFilterContext$$ ? $DvtSvgGradientUtils$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgImageFillUtils$$) : (0 == $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = 1), $DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$ / $DvtSvgFilterUtils$$ * $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgImageFillUtils$$));
    var $DvtSvgImplFactory$$, $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgShadowUtils$$), $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$ == $DvtSvgFilterContext$$ ? $DvtSvgImplFactory$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgImageFillUtils$$) : (0 == $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = 1), $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ / $DvtSvgFilterUtils$$ * $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgImageFillUtils$$));
    $DvtSvgFilterUtils$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgShadowUtils$$);
    $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$ == $DvtSvgFilterContext$$ ? $DvtSvgShadowUtils$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgImageFillUtils$$) : (0 == $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = 1), $DvtSvgShadowUtils$$ = $DvtSvgFilterContext$$ / $DvtSvgFilterUtils$$ * $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgImageFillUtils$$));
    return $dvt$$9$$.$ColorUtils$.$makePound$($DvtSvgGradientUtils$$, $DvtSvgImplFactory$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$ColorUtils$.$getContrastingTextColor$ = function $$dvt$$9$$$$ColorUtils$$$getContrastingTextColor$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgShadowUtils$$);
    return 128 <= (299 * $DvtSvgPatternFillUtils$$ + 587 * $DvtSvgImageFillUtils$$ + 114 * $DvtSvgShadowUtils$$) / 1E3 ? "#000000" : "#FFFFFF"
  };
  $dvt$$9$$.$ColorUtils$.$fixColorForPlatform$ = function $$dvt$$9$$$$ColorUtils$$$fixColorForPlatform$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!$DvtSvgShadowUtils$$) {
      return $JSCompiler_alias_NULL$$
    }
    "#" == $DvtSvgShadowUtils$$.charAt(0) && 8 < $DvtSvgShadowUtils$$.length && ($DvtSvgShadowUtils$$ = $dvt$$9$$.$ColorUtils$.$getRGBA$($DvtSvgShadowUtils$$));
    var $DvtSvgImageFillUtils$$ = {};
    $dvt$$9$$.$Agent$.$isEnvironmentBatik$() && -1 !== $DvtSvgShadowUtils$$.indexOf("rgba") ? ($DvtSvgImageFillUtils$$.color = $dvt$$9$$.$ColorUtils$.$getRGB$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.alpha = $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ ? $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgShadowUtils$$) * $DvtSvgPatternFillUtils$$ : $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgShadowUtils$$)) : ($DvtSvgImageFillUtils$$.color = $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ && 
    ($DvtSvgImageFillUtils$$.alpha = $DvtSvgPatternFillUtils$$));
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ClipPath$ = function $$dvt$$9$$$$ClipPath$$($DvtSvgShadowUtils$$) {
    this.$_id$ = ($DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ + "$" : "") + "cp" + $dvt$$9$$.$ClipPath$.$_uniqueSeed$++;
    this.$_regions$ = []
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ClipPath$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ClipPath$.$_uniqueSeed$ = 0;
  $dvt$$9$$.$ClipPath$.NONE = 0;
  $dvt$$9$$.$ClipPath$.$RECT$ = 1;
  $dvt$$9$$.$ClipPath$.$PATH$ = 2;
  $dvt$$9$$.$ClipPath$.$POLYGON$ = 3;
  $dvt$$9$$.$ClipPath$.$ELLIPSE$ = 4;
  $dvt$$9$$.$ClipPath$.$CIRCLE$ = 5;
  $dvt$$9$$.$ClipPath$.prototype.$_addRegion$ = function $$dvt$$9$$$$ClipPath$$$$_addRegion$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && this.$_regions$.push($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$ClipPath$.prototype.getId = $JSCompiler_get$$("$_id$");
  $dvt$$9$$.$ClipPath$.prototype.$addRect$ = function $$dvt$$9$$$$ClipPath$$$$addRect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$ = {};
    $DvtSvgImplFactory$$.type = $dvt$$9$$.$ClipPath$.$RECT$;
    $DvtSvgImplFactory$$.x = $DvtSvgShadowUtils$$;
    $DvtSvgImplFactory$$.y = $DvtSvgPatternFillUtils$$;
    $DvtSvgImplFactory$$.$w$ = $DvtSvgImageFillUtils$$;
    $DvtSvgImplFactory$$.$h$ = $DvtSvgGradientUtils$$;
    $DvtSvgImplFactory$$.$rx$ = $DvtSvgFilterUtils$$;
    $DvtSvgImplFactory$$.$ry$ = $DvtSvgFilterContext$$;
    this.$_addRegion$($DvtSvgImplFactory$$)
  };
  $dvt$$9$$.$ClipPath$.prototype.$addCircle$ = function $$dvt$$9$$$$ClipPath$$$$addCircle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = {};
    $DvtSvgGradientUtils$$.type = $dvt$$9$$.$ClipPath$.$CIRCLE$;
    $DvtSvgGradientUtils$$.$cx$ = $DvtSvgShadowUtils$$;
    $DvtSvgGradientUtils$$.$cy$ = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.$r$ = $DvtSvgImageFillUtils$$;
    this.$_addRegion$($DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$ClipPath$.prototype.$addPolygon$ = function $$dvt$$9$$$$ClipPath$$$$addPolygon$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = {};
    $DvtSvgPatternFillUtils$$.type = $dvt$$9$$.$ClipPath$.$POLYGON$;
    $DvtSvgPatternFillUtils$$.$points$ = $DvtSvgShadowUtils$$;
    this.$_addRegion$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ClipPath$.prototype.$addPath$ = function $$dvt$$9$$$$ClipPath$$$$addPath$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = {};
    $DvtSvgPatternFillUtils$$.type = $dvt$$9$$.$ClipPath$.$PATH$;
    $DvtSvgPatternFillUtils$$.$d$ = $DvtSvgShadowUtils$$;
    this.$_addRegion$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Mask$ = function $$dvt$$9$$$$Mask$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_id$ = "mask" + $dvt$$9$$.$Mask$.$_uniqueSeed$++;
    this.$_gradient$ = $DvtSvgShadowUtils$$;
    this.$_bounds$ = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Mask$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Mask$.$_uniqueSeed$ = 0;
  $dvt$$9$$.$Mask$.prototype.getId = $JSCompiler_get$$("$_id$");
  $dvt$$9$$.$Mask$.prototype.$getBounds$ = $JSCompiler_get$$("$_bounds$");
  $dvt$$9$$.$Fill$ = function $$dvt$$9$$$$Fill$$() {
    this.$_Init$()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Fill$, $DvtLockable$$);
  $dvt$$9$$.$Fill$.NONE = 0;
  $dvt$$9$$.$Fill$.$COLOR$ = 1;
  $dvt$$9$$.$Fill$.$GRADIENT$ = 2;
  $dvt$$9$$.$Fill$.$PATTERN$ = 3;
  $dvt$$9$$.$Fill$.$IMAGE$ = 4;
  $dvt$$9$$.$Fill$.prototype.$_Init$ = function $$dvt$$9$$$$Fill$$$$_Init$$() {
    $dvt$$9$$.$Fill$.$superclass$.$_Init$.call(this)
  };
  $dvt$$9$$.$Fill$.prototype.getId = $JSCompiler_get$$("$_id$");
  $dvt$$9$$.$Fill$.prototype.setId = $JSCompiler_set$$("$_id$");
  $dvt$$9$$.$Fill$.prototype.$equals$ = $JSCompiler_returnArg$$($JSCompiler_alias_TRUE$$);
  $dvt$$9$$.$SolidFill$ = function $$dvt$$9$$$$SolidFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SolidFill$, $dvt$$9$$.$Fill$);
  $dvt$$9$$.$SolidFill$.prototype.$clone$ = function $$dvt$$9$$$$SolidFill$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$SolidFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$SolidFill$.prototype.$_Init$ = function $$dvt$$9$$$$SolidFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$9$$.$SolidFill$.$superclass$.$_Init$.call(this);
    this.$_fc$ = $DvtSvgShadowUtils$$;
    this.$_fa$ = $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgPatternFillUtils$$ : 1
  };
  $dvt$$9$$.$SolidFill$.prototype.$getColor$ = $JSCompiler_get$$("$_fc$");
  $dvt$$9$$.$SolidFill$.prototype.$setColor$ = function $$dvt$$9$$$$SolidFill$$$$setColor$$($DvtSvgShadowUtils$$) {
    this.$_bLocked$ || (this.$_fc$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$SolidFill$.prototype.$getAlpha$ = $JSCompiler_get$$("$_fa$");
  $dvt$$9$$.$SolidFill$.prototype.$setAlpha$ = function $$dvt$$9$$$$SolidFill$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    this.$_bLocked$ || (this.$_fa$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$SolidFill$.prototype.$mergeProps$ = function $$dvt$$9$$$$SolidFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$SolidFill$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_fc$ = this.$_fc$;
    $DvtSvgShadowUtils$$.$_fa$ = this.$_fa$
  };
  $dvt$$9$$.$SolidFill$.$invisibleFill$ = function $$dvt$$9$$$$SolidFill$$$invisibleFill$$() {
    $dvt$$9$$.$SolidFill$.$_INVISIBLE_FILL$ || ($dvt$$9$$.$SolidFill$.$_INVISIBLE_FILL$ = new $dvt$$9$$.$SolidFill$("rgba(0,0,0,0)"));
    return $dvt$$9$$.$SolidFill$.$_INVISIBLE_FILL$
  };
  $dvt$$9$$.$SolidFill$.prototype.$equals$ = function $$dvt$$9$$$$SolidFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$SolidFill$ && $DvtSvgShadowUtils$$.$_fc$ == this.$_fc$ && $DvtSvgShadowUtils$$.$_fa$ == this.$_fa$ ? $dvt$$9$$.$SolidFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Stroke$ = function $$dvt$$9$$$$Stroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Stroke$, $DvtLockable$$);
  $dvt$$9$$.$Stroke$.$SOLID$ = 0;
  $dvt$$9$$.$Stroke$.$DASHED$ = 1;
  $dvt$$9$$.$Stroke$.$DOTTED$ = 2;
  $dvt$$9$$.$Stroke$.$DASHED_DOTTED$ = 3;
  $dvt$$9$$.$Stroke$.$SQUARE$ = "square";
  $dvt$$9$$.$Stroke$.$ROUND$ = "round";
  $dvt$$9$$.$Stroke$.$BEVEL$ = "bevel";
  $dvt$$9$$.$Stroke$.$MITER$ = "miter";
  $dvt$$9$$.$Stroke$.$BUTT$ = "butt";
  $dvt$$9$$.$Stroke$.$convertTypeString$ = function $$dvt$$9$$$$Stroke$$$convertTypeString$$($DvtSvgShadowUtils$$) {
    return"solid" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Stroke$.$SOLID$ : "dashed" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Stroke$.$DASHED$ : "dotted" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Stroke$.$DOTTED$ : $dvt$$9$$.$Stroke$.$SOLID$
  };
  $dvt$$9$$.$Stroke$.prototype.$_Init$ = function $$dvt$$9$$$$Stroke$$$$_Init$$($DvtSvgShadowUtils$$) {
    this.$_sw$ = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 1 : $DvtSvgShadowUtils$$;
    $dvt$$9$$.$Stroke$.$superclass$.$_Init$.call(this);
    this.$_bFixedWidth$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Stroke$.prototype.getId = $JSCompiler_get$$("$_id$");
  $dvt$$9$$.$Stroke$.prototype.setId = $JSCompiler_set$$("$_id$");
  $dvt$$9$$.$Stroke$.prototype.$mergeProps$ = function $$dvt$$9$$$$Stroke$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_sw$ = this.$_sw$;
    $DvtSvgShadowUtils$$.$_st$ = this.$_st$;
    $DvtSvgShadowUtils$$.$_sd$ = this.$_sd$;
    $DvtSvgShadowUtils$$.$_sdo$ = this.$_sdo$;
    $DvtSvgShadowUtils$$.$_sj$ = this.$_sj$;
    $DvtSvgShadowUtils$$.$_se$ = this.$_se$;
    $DvtSvgShadowUtils$$.$_sm$ = this.$_sm$;
    $DvtSvgShadowUtils$$.$_bFixedWidth$ = this.$_bFixedWidth$;
    $dvt$$9$$.$Stroke$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Stroke$.prototype.$setStyle$ = function $$dvt$$9$$$$Stroke$$$$setStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_bLocked$ || ($DvtSvgShadowUtils$$ && !$DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Stroke$.$getDefaultDash$($DvtSvgShadowUtils$$, this.$_sw$)), this.$_st$ = $DvtSvgShadowUtils$$, this.$_sd$ = $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ && (this.$_sj$ = $DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$ && (this.$_se$ = $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$ && (this.$_sm$ = $DvtSvgFilterUtils$$))
  };
  $dvt$$9$$.$Stroke$.prototype.$setMiterLimit$ = function $$dvt$$9$$$$Stroke$$$$setMiterLimit$$() {
    this.$_bLocked$ || (this.$_sm$ = 1)
  };
  $dvt$$9$$.$Stroke$.prototype.$getType$ = $JSCompiler_get$$("$_st$");
  $dvt$$9$$.$Stroke$.prototype.$setType$ = function $$dvt$$9$$$$Stroke$$$$setType$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_bLocked$ || ($DvtSvgShadowUtils$$ === $dvt$$9$$.$Stroke$.$SOLID$ ? $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_NULL$$ : $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Stroke$.$getDefaultDash$($DvtSvgShadowUtils$$, this.$_sw$)), this.$_st$ = $DvtSvgShadowUtils$$, this.$_sd$ = $DvtSvgPatternFillUtils$$, this.$_sdo$ = $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Stroke$.prototype.getWidth = $JSCompiler_get$$("$_sw$");
  $dvt$$9$$.$Stroke$.prototype.$setWidth$ = function $$dvt$$9$$$$Stroke$$$$setWidth$$($DvtSvgShadowUtils$$) {
    this.$_bLocked$ || (this.$_sw$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Stroke$.prototype.$setFixedWidth$ = $JSCompiler_set$$("$_bFixedWidth$");
  $dvt$$9$$.$Stroke$.$getDefaultDash$ = function $$dvt$$9$$$$Stroke$$$getDefaultDash$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = Math.ceil($DvtSvgPatternFillUtils$$);
    var $DvtSvgImageFillUtils$$ = Math.max(6, 2 * $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = Math.max(2, $DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$ = Math.floor(($DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$) / 2);
    return $DvtSvgShadowUtils$$ == $dvt$$9$$.$Stroke$.$DASHED$ ? "" + $DvtSvgImageFillUtils$$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$Stroke$.$DOTTED$ ? "" + $DvtSvgGradientUtils$$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$Stroke$.$DASHED_DOTTED$ ? "" + $DvtSvgImageFillUtils$$ + "," + $DvtSvgFilterUtils$$ + "," + $DvtSvgGradientUtils$$ + "," + $DvtSvgFilterUtils$$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$GradientStroke$ = function $$dvt$$9$$$$GradientStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$GradientStroke$, $dvt$$9$$.$Stroke$);
  $dvt$$9$$.$GradientStroke$.prototype.$getAlpha$ = $JSCompiler_returnArg$$(1);
  $dvt$$9$$.$GradientStroke$.prototype.$getBounds$ = $JSCompiler_get$$("$_arBounds$");
  $dvt$$9$$.$GradientStroke$.prototype.$_Init$ = function $$dvt$$9$$$$GradientStroke$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$9$$.$GradientStroke$.$superclass$.$_Init$.call(this, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$_arColors$ = $DvtSvgShadowUtils$$;
    this.$_arBounds$ = $DvtSvgGradientUtils$$;
    $DvtSvgGradientUtils$$ = 0;
    $DvtSvgShadowUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.length - 1);
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$GradientStroke$.$createDefaultAlphas$($DvtSvgGradientUtils$$));
    this.$_arAlphas$ = $DvtSvgPatternFillUtils$$;
    $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$GradientStroke$.$createDefaultStops$($DvtSvgGradientUtils$$));
    this.$_arStops$ = $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$GradientStroke$.$createDefaultAlphas$ = function $$dvt$$9$$$$GradientStroke$$$createDefaultAlphas$$($DvtSvgShadowUtils$$) {
    if(0 > $DvtSvgShadowUtils$$) {
      return $JSCompiler_alias_NULL$$
    }
    for(var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push(1)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$GradientStroke$.$createDefaultStops$ = function $$dvt$$9$$$$GradientStroke$$$createDefaultStops$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 1 / $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$ = 0;
    do {
      $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ += $DvtSvgImageFillUtils$$
    }while(0 < --$DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$.push(1);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$GradientStroke$.prototype.$mergeProps$ = function $$dvt$$9$$$$GradientStroke$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_arColors$ = this.$_arColors$;
    $DvtSvgShadowUtils$$.$_arStops$ = this.$_arStops$;
    $DvtSvgShadowUtils$$.$_arAlphas$ = this.$_arAlphas$;
    $DvtSvgShadowUtils$$.$_arBounds$ = this.$_arBounds$;
    $dvt$$9$$.$GradientStroke$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$LinearGradientStroke$ = function $$dvt$$9$$$$LinearGradientStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$LinearGradientStroke$, $dvt$$9$$.$GradientStroke$);
  $dvt$$9$$.$LinearGradientStroke$.prototype.$clone$ = function $$dvt$$9$$$$LinearGradientStroke$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$LinearGradientStroke$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$LinearGradientStroke$.prototype.$_Init$ = function $$dvt$$9$$$$LinearGradientStroke$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $dvt$$9$$.$LinearGradientStroke$.$superclass$.$_Init$.call(this, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    this.$_angle$ = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$LinearGradientStroke$.prototype.$getAngle$ = $JSCompiler_get$$("$_angle$");
  $dvt$$9$$.$LinearGradientStroke$.prototype.$mergeProps$ = function $$dvt$$9$$$$LinearGradientStroke$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$LinearGradientStroke$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_angle$ = this.$_angle$
  };
  $dvt$$9$$.$LinearGradientStroke$.prototype.$setAngle$ = function $$dvt$$9$$$$LinearGradientStroke$$$$setAngle$$($DvtSvgShadowUtils$$) {
    !this.$_bLocked$ && 0 !== $DvtSvgShadowUtils$$ && (360 < Math.abs($DvtSvgShadowUtils$$) && ($DvtSvgShadowUtils$$ %= 360), this.$_angle$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$SolidStroke$ = function $$dvt$$9$$$$SolidStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SolidStroke$, $dvt$$9$$.$Stroke$);
  $dvt$$9$$.$SolidStroke$.prototype.$clone$ = function $$dvt$$9$$$$SolidStroke$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$SolidStroke$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$SolidStroke$.prototype.$_Init$ = function $$dvt$$9$$$$SolidStroke$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_sc$ = $DvtSvgShadowUtils$$;
    this.$_sa$ = $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgPatternFillUtils$$ : 1;
    this.$_st$ = $dvt$$9$$.$Stroke$.$SOLID$;
    $dvt$$9$$.$SolidStroke$.$superclass$.$_Init$.call(this, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$SolidStroke$.prototype.$getAlpha$ = $JSCompiler_get$$("$_sa$");
  $dvt$$9$$.$SolidStroke$.prototype.$setAlpha$ = function $$dvt$$9$$$$SolidStroke$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    this.$bLocked$ || (this.$_sa$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$SolidStroke$.prototype.$getColor$ = $JSCompiler_get$$("$_sc$");
  $dvt$$9$$.$SolidStroke$.prototype.$setColor$ = function $$dvt$$9$$$$SolidStroke$$$$setColor$$($DvtSvgShadowUtils$$) {
    this.$bLocked$ || (this.$_sc$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$SolidStroke$.prototype.$mergeProps$ = function $$dvt$$9$$$$SolidStroke$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$SolidStroke$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_sc$ = this.$_sc$;
    $DvtSvgShadowUtils$$.$_sa$ = this.$_sa$
  };
  $dvt$$9$$.$Shadow$ = function $$dvt$$9$$$$Shadow$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Shadow$, $DvtBaseDrawEffect$$);
  $dvt$$9$$.$Shadow$.$_uniqueId$ = 1;
  $dvt$$9$$.$Shadow$.prototype.$_Init$ = function $$dvt$$9$$$$Shadow$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    $dvt$$9$$.$Shadow$.$superclass$.$_Init$.call(this);
    this.$__type$ = "shadow";
    this.$_rgba$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : "rgba(48,48,48,0.35)";
    this.$_distance$ = $DvtSvgPatternFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgPatternFillUtils$$) ? 4 : $DvtSvgPatternFillUtils$$;
    this.$_strength$ = $DvtSvgFilterContext$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgFilterContext$$) ? 1 : $DvtSvgFilterContext$$;
    this.$_blurX$ = $DvtSvgImageFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgImageFillUtils$$) ? 4 : $DvtSvgImageFillUtils$$;
    this.$_blurY$ = $DvtSvgGradientUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgGradientUtils$$) ? 4 : $DvtSvgGradientUtils$$;
    this.$_angle$ = $DvtSvgFilterUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgFilterUtils$$) ? 45 : $DvtSvgFilterUtils$$;
    this.$_quality$ = $DvtSvgImplFactory$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgImplFactory$$) ? 1 : $DvtSvgImplFactory$$;
    this.$_bInner$ = $DvtHtmlRichTooltipManager$$ ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$;
    this.$_bHide$ = this.$_bKnockout$ = $JSCompiler_alias_FALSE$$;
    this.$_Id$ = "ds" + $dvt$$9$$.$Shadow$.$_uniqueId$++
  };
  $dvt$$9$$.$Shadow$.prototype.$clone$ = function $$dvt$$9$$$$Shadow$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Shadow$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Shadow$.prototype.$mergeProps$ = function $$dvt$$9$$$$Shadow$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Shadow$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_rgba$ = this.$_rgba$;
    $DvtSvgShadowUtils$$.$_distance$ = this.$_distance$;
    $DvtSvgShadowUtils$$.$_strength$ = this.$_strength$;
    $DvtSvgShadowUtils$$.$_blurX$ = this.$_blurX$;
    $DvtSvgShadowUtils$$.$_blurY$ = this.$_blurY$;
    $DvtSvgShadowUtils$$.$_angle$ = this.$_angle$;
    $DvtSvgShadowUtils$$.$_quality$ = this.$_quality$;
    $DvtSvgShadowUtils$$.$_bInner$ = this.$_bInner$;
    $DvtSvgShadowUtils$$.$_bKnockout$ = this.$_bKnockout$;
    $DvtSvgShadowUtils$$.$_bHide$ = this.$_bHide$;
    $DvtSvgShadowUtils$$.$_Id$ = this.$_Id$
  };
  $dvt$$9$$.$GradientFill$ = function $$dvt$$9$$$$GradientFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$GradientFill$, $dvt$$9$$.$Fill$);
  $dvt$$9$$.$GradientFill$.prototype.$getBounds$ = $JSCompiler_get$$("$_arBounds$");
  $dvt$$9$$.$GradientFill$.prototype.$_Init$ = function $$dvt$$9$$$$GradientFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$9$$.$GradientFill$.$superclass$.$_Init$.call(this);
    this.$_arColors$ = $DvtSvgShadowUtils$$;
    this.$_arBounds$ = $DvtSvgGradientUtils$$;
    if(!$DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = [], $DvtSvgShadowUtils$$)) {
      for($DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
        $DvtSvgPatternFillUtils$$.push(1)
      }
    }
    this.$_arAlphas$ = $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.length - 1 : 0;
    if(!$DvtSvgImageFillUtils$$) {
      $DvtSvgImageFillUtils$$ = [];
      $DvtSvgPatternFillUtils$$ = 0 < $DvtSvgShadowUtils$$ ? 1 / $DvtSvgShadowUtils$$ : 0;
      $DvtSvgGradientUtils$$ = 0;
      do {
        $DvtSvgImageFillUtils$$.push($DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ += $DvtSvgPatternFillUtils$$
      }while(0 < --$DvtSvgShadowUtils$$);
      $DvtSvgImageFillUtils$$.push(1)
    }
    this.$_arStops$ = $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$GradientFill$.prototype.$mergeProps$ = function $$dvt$$9$$$$GradientFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_arColors$ = this.$_arColors$;
    $DvtSvgShadowUtils$$.$_arStops$ = this.$_arStops$;
    $DvtSvgShadowUtils$$.$_arAlphas$ = this.$_arAlphas$;
    $DvtSvgShadowUtils$$.$_arBounds$ = this.$_arBounds$;
    $dvt$$9$$.$GradientFill$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$GradientFill$.prototype.$equals$ = function $$dvt$$9$$$$GradientFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$GradientFill$ && $dvt$$9$$.$ArrayUtils$.$equals$(this.$_arColors$, $DvtSvgShadowUtils$$.$_arColors$) && $dvt$$9$$.$ArrayUtils$.$equals$(this.$_arStops$, $DvtSvgShadowUtils$$.$_arStops$) && $dvt$$9$$.$ArrayUtils$.$equals$(this.$_arAlphas$, $DvtSvgShadowUtils$$.$_arAlphas$) && $dvt$$9$$.$ArrayUtils$.$equals$(this.$_arBounds$, $DvtSvgShadowUtils$$.$_arBounds$) ? $dvt$$9$$.$GradientFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$LinearGradientFill$ = function $$dvt$$9$$$$LinearGradientFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$LinearGradientFill$, $dvt$$9$$.$GradientFill$);
  $dvt$$9$$.$LinearGradientFill$.prototype.$clone$ = function $$dvt$$9$$$$LinearGradientFill$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$LinearGradientFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$LinearGradientFill$.prototype.$_Init$ = function $$dvt$$9$$$$LinearGradientFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$9$$.$LinearGradientFill$.$superclass$.$_Init$.call(this, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_angle$ = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$LinearGradientFill$.prototype.$getAngle$ = $JSCompiler_get$$("$_angle$");
  $dvt$$9$$.$LinearGradientFill$.prototype.$clone$ = function $$dvt$$9$$$$LinearGradientFill$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$LinearGradientFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$LinearGradientFill$.prototype.$mergeProps$ = function $$dvt$$9$$$$LinearGradientFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$LinearGradientFill$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_angle$ = this.$_angle$
  };
  $dvt$$9$$.$LinearGradientFill$.prototype.$setAngle$ = function $$dvt$$9$$$$LinearGradientFill$$$$setAngle$$($DvtSvgShadowUtils$$) {
    !this.$_bLocked$ && 0 !== $DvtSvgShadowUtils$$ && (360 < Math.abs($DvtSvgShadowUtils$$) && ($DvtSvgShadowUtils$$ %= 360), this.$_angle$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$LinearGradientFill$.prototype.$equals$ = function $$dvt$$9$$$$LinearGradientFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$LinearGradientFill$ && $DvtSvgShadowUtils$$.$_angle$ == this.$_angle$ ? $dvt$$9$$.$LinearGradientFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$ImageFill$ = function $$dvt$$9$$$$ImageFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ImageFill$, $dvt$$9$$.$Fill$);
  $dvt$$9$$.$ImageFill$.prototype.$getSrc$ = $JSCompiler_get$$("$_src$");
  $dvt$$9$$.$ImageFill$.prototype.$_Init$ = function $$dvt$$9$$$$ImageFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$ImageFill$.$superclass$.$_Init$.call(this);
    this.$_src$ = $DvtSvgShadowUtils$$;
    this.$_bound$ = $DvtSvgPatternFillUtils$$;
    this.$_repeat$ = $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ImageFill$.prototype.$clone$ = function $$dvt$$9$$$$ImageFill$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$ImageFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$ImageFill$.prototype.$mergeProps$ = function $$dvt$$9$$$$ImageFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_src$ = this.$_src$;
    $DvtSvgShadowUtils$$.$_bound$ = this.$_bound$;
    $DvtSvgShadowUtils$$.$_repeat$ = this.$_repeat$;
    $dvt$$9$$.$ImageFill$.$superclass$.$mergeProps$.call(this)
  };
  $dvt$$9$$.$ImageFill$.prototype.$equals$ = function $$dvt$$9$$$$ImageFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ImageFill$ && ($DvtSvgShadowUtils$$.$_src$ == this.$_src$ && $DvtSvgShadowUtils$$.$_repeat$ == this.$_repeat$) && (this.$_bound$ && $DvtSvgShadowUtils$$.$_bound$ && this.$_bound$.x == $DvtSvgShadowUtils$$.bound.x && this.$_bound$.y == $DvtSvgShadowUtils$$.bound.y && this.$_bound$.$w$ == $DvtSvgShadowUtils$$.bound.$w$ && this.$_bound$.$h$ == $DvtSvgShadowUtils$$.bound.$h$ || !this.$_bound$ && !$DvtSvgShadowUtils$$.$_bound$) ? $dvt$$9$$.$ImageFill$.$superclass$.$equals$.call(this, 
    $DvtSvgShadowUtils$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$PatternFill$ = function $$dvt$$9$$$$PatternFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$PatternFill$, $dvt$$9$$.$Fill$);
  $dvt$$9$$.$PatternFill$.$SM_DIAG_UP_LT$ = "sDUL";
  $dvt$$9$$.$PatternFill$.$LG_DIAG_UP_LT$ = "lDUL";
  $dvt$$9$$.$PatternFill$.$SM_DIAG_UP_RT$ = "sDUR";
  $dvt$$9$$.$PatternFill$.$LG_DIAG_UP_RT$ = "lDUR";
  $dvt$$9$$.$PatternFill$.$SM_CROSSHATCH$ = "sC";
  $dvt$$9$$.$PatternFill$.$LG_CROSSHATCH$ = "lC";
  $dvt$$9$$.$PatternFill$.$SM_CHECK$ = "sCh";
  $dvt$$9$$.$PatternFill$.$LG_CHECK$ = "lCh";
  $dvt$$9$$.$PatternFill$.$SM_TRIANGLE_CHECK$ = "sTCh";
  $dvt$$9$$.$PatternFill$.$LG_TRIANGLE_CHECK$ = "lTCh";
  $dvt$$9$$.$PatternFill$.$SM_DIAMOND_CHECK$ = "sDCh";
  $dvt$$9$$.$PatternFill$.$LG_DIAMOND_CHECK$ = "lDCh";
  $dvt$$9$$.$PatternFill$.prototype.Init = function $$dvt$$9$$$$PatternFill$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$PatternFill$.$superclass$.$_Init$.call(this);
    this.$_pattern$ = $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$_convertPatternValue$($DvtSvgShadowUtils$$) : $dvt$$9$$.$PatternFill$.$SM_DIAG_UP_LT$;
    this.$_fillColor$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : "#000000";
    this.$_backgroundColor$ = $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : "#ffffff"
  };
  $dvt$$9$$.$PatternFill$.prototype.$getPattern$ = $JSCompiler_get$$("$_pattern$");
  $dvt$$9$$.$PatternFill$.prototype.$getColor$ = $JSCompiler_get$$("$_fillColor$");
  $dvt$$9$$.$PatternFill$.prototype.$getBackgroundColor$ = $JSCompiler_get$$("$_backgroundColor$");
  $dvt$$9$$.$PatternFill$.prototype.$clone$ = function $$dvt$$9$$$$PatternFill$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$PatternFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$PatternFill$.prototype.$mergeProps$ = function $$dvt$$9$$$$PatternFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_pattern$ = this.$_pattern$;
    $DvtSvgShadowUtils$$.$_fillColor$ = this.$_fillColor$;
    $DvtSvgShadowUtils$$.$_backgroundColor$ = this.$_backgroundColor$;
    $dvt$$9$$.$PatternFill$.$superclass$.$mergeProps$.call(this)
  };
  $dvt$$9$$.$PatternFill$.prototype.$equals$ = function $$dvt$$9$$$$PatternFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$PatternFill$ && $DvtSvgShadowUtils$$.$_pattern$ == this.$_pattern$ && $DvtSvgShadowUtils$$.$_fillColor$ == this.$_fillColor$ && $DvtSvgShadowUtils$$.$_backgroundColor$ == this.$_backgroundColor$ ? $dvt$$9$$.$PatternFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$PatternFill$.prototype.$getMatrix$ = function $$dvt$$9$$$$PatternFill$$$$getMatrix$$() {
    return this.$_matrix$ ? this.$_matrix$ : new $dvt$$9$$.$Matrix$
  };
  $dvt$$9$$.$PatternFill$.prototype.$setMatrix$ = function $$dvt$$9$$$$PatternFill$$$$setMatrix$$($DvtSvgShadowUtils$$) {
    (this.$_matrix$ = $DvtSvgShadowUtils$$) && !this.$_matrix$.$_bLocked$ && this.$_matrix$.$__lock$()
  };
  $dvt$$9$$.$PatternFill$.$_convertPatternValue$ = function $$dvt$$9$$$$PatternFill$$$_convertPatternValue$$($DvtSvgShadowUtils$$) {
    return"smallDiagonalLeft" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$SM_DIAG_UP_LT$ : "largeDiagonalLeft" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$LG_DIAG_UP_LT$ : "smallDiagonalRight" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$SM_DIAG_UP_RT$ : "largeDiagonalRight" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$LG_DIAG_UP_RT$ : "smallCrosshatch" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$SM_CROSSHATCH$ : "largeCrosshatch" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$LG_CROSSHATCH$ : 
    "smallChecker" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$SM_CHECK$ : "largeChecker" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$LG_CHECK$ : "smallTriangle" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$SM_TRIANGLE_CHECK$ : "largeTriangle" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$LG_TRIANGLE_CHECK$ : "smallDiamond" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$SM_DIAMOND_CHECK$ : "largeDiamond" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$PatternFill$.$LG_DIAMOND_CHECK$ : 
    $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$RadialGradientFill$ = function $$dvt$$9$$$$RadialGradientFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$RadialGradientFill$, $dvt$$9$$.$GradientFill$);
  $dvt$$9$$.$RadialGradientFill$.prototype.$clone$ = function $$dvt$$9$$$$RadialGradientFill$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$RadialGradientFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$RadialGradientFill$.prototype.$getRadius$ = $JSCompiler_get$$("$_r$");
  $dvt$$9$$.$RadialGradientFill$.prototype.$getCx$ = $JSCompiler_get$$("$_cx$");
  $dvt$$9$$.$RadialGradientFill$.prototype.$getCy$ = $JSCompiler_get$$("$_cy$");
  $dvt$$9$$.$RadialGradientFill$.prototype.$_Init$ = function $$dvt$$9$$$$RadialGradientFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $dvt$$9$$.$RadialGradientFill$.$superclass$.$_Init$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImplFactory$$);
    this.$_cx$ = $DvtSvgGradientUtils$$;
    this.$_cy$ = $DvtSvgFilterUtils$$;
    this.$_r$ = $DvtSvgFilterContext$$
  };
  $dvt$$9$$.$RadialGradientFill$.prototype.$clone$ = function $$dvt$$9$$$$RadialGradientFill$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$RadialGradientFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$RadialGradientFill$.prototype.$mergeProps$ = function $$dvt$$9$$$$RadialGradientFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$RadialGradientFill$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_cx$ = this.$_cx$;
    $DvtSvgShadowUtils$$.$_cy$ = this.$_cy$;
    $DvtSvgShadowUtils$$.$_r$ = this.$_r$
  };
  $dvt$$9$$.$RadialGradientFill$.prototype.$equals$ = function $$dvt$$9$$$$RadialGradientFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$RadialGradientFill$ && $DvtSvgShadowUtils$$.$_cx$ == this.$_cx$ && $DvtSvgShadowUtils$$.$_cy$ == this.$_cy$ && $DvtSvgShadowUtils$$.$_r$ == this.$_r$ ? $dvt$$9$$.$RadialGradientFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$SelectionEffectUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SelectionEffectUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$SelectionEffectUtils$.$getHoverBorderColor$ = function $$dvt$$9$$$$SelectionEffectUtils$$$getHoverBorderColor$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$ColorUtils$.$adjustHSL$($DvtSvgShadowUtils$$, 0, 0.15)
  };
  $dvt$$9$$.$SelectionEffectUtils$.$applyDrawEffect$ = function $$dvt$$9$$$$SelectionEffectUtils$$$applyDrawEffect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(0 == $DvtSvgShadowUtils$$.$getNumDrawEffects$()) {
      $DvtSvgShadowUtils$$.$addDrawEffect$($DvtSvgPatternFillUtils$$)
    }else {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDrawEffectIndex$($DvtSvgPatternFillUtils$$);
      -1 < $DvtSvgImageFillUtils$$ ? ($DvtSvgShadowUtils$$.$removeDrawEffectAt$($DvtSvgImageFillUtils$$), $DvtSvgShadowUtils$$.$addDrawEffectAt$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)) : $DvtSvgShadowUtils$$.$addDrawEffect$($DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$SelectionEffectUtils$.$createSelectingStroke$ = function $$dvt$$9$$$$SelectionEffectUtils$$$createSelectingStroke$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = new $dvt$$9$$.$SolidStroke$($dvt$$9$$.$SelectionEffectUtils$.$getHoverBorderColor$($DvtSvgShadowUtils$$), 1, 2);
    $DvtSvgShadowUtils$$.$setMiterLimit$();
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$SelectionEffectUtils$.$getSelectingCursor$ = $JSCompiler_returnArg$$("pointer");
  $dvt$$9$$.$KeyboardFocusEffect$ = function $$dvt$$9$$$$KeyboardFocusEffect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$KeyboardFocusEffect$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_BORDER_RADIUS$ = 1;
  $dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_STROKE_WIDTH$ = 1;
  $dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_STROKE_ALPHA$ = 1;
  $dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_STROKE_TYPE$ = $dvt$$9$$.$Stroke$.$DOTTED$;
  $dvt$$9$$.$KeyboardFocusEffect$.prototype.Init = function $$dvt$$9$$$$KeyboardFocusEffect$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.$_container$ = $DvtSvgPatternFillUtils$$;
    this.$_focusEffect$ = new $dvt$$9$$.$Rect$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$.$h$, $DvtSvgFilterUtils$$);
    $DvtSvgShadowUtils$$ = this.$CreateStroke$();
    this.$_focusEffect$.$setStroke$($DvtSvgShadowUtils$$);
    this.$_focusEffect$.$setRx$($dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_BORDER_RADIUS$);
    this.$_focusEffect$.$setRy$($dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_BORDER_RADIUS$);
    $DvtSvgGradientUtils$$ && this.$_focusEffect$.$setMatrix$($DvtSvgGradientUtils$$);
    this.$_focusEffect$.$setFill$($JSCompiler_alias_NULL$$);
    this.$_appendLast$ = $DvtSvgFilterContext$$
  };
  $dvt$$9$$.$KeyboardFocusEffect$.prototype.$CreateStroke$ = function $$dvt$$9$$$$KeyboardFocusEffect$$$$CreateStroke$$() {
    var $DvtSvgShadowUtils$$ = $dvt$$9$$.$Agent$.$getFocusColor$(), $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_STROKE_WIDTH$, $DvtSvgImageFillUtils$$ = $dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_STROKE_ALPHA$, $DvtSvgGradientUtils$$ = $dvt$$9$$.$KeyboardFocusEffect$.$FOCUS_STROKE_TYPE$;
    $dvt$$9$$.$Agent$.$isPlatformWebkit$() && ($DvtSvgPatternFillUtils$$ = 2, $DvtSvgGradientUtils$$ = $dvt$$9$$.$Stroke$.$SOLID$);
    $DvtSvgShadowUtils$$ = new $dvt$$9$$.$SolidStroke$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$.$setType$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$KeyboardFocusEffect$.prototype.$getEffect$ = $JSCompiler_get$$("$_focusEffect$");
  $dvt$$9$$.$KeyboardFocusEffect$.prototype.show = function $$dvt$$9$$$$KeyboardFocusEffect$$$show$() {
    this.$_focusEffect$ instanceof $dvt$$9$$.$Shape$ && (this.$_appendLast$ ? this.$_container$.$addChild$(this.$_focusEffect$) : this.$_container$.$addChildAt$(this.$_focusEffect$, 0))
  };
  $dvt$$9$$.$KeyboardFocusEffect$.prototype.$hide$ = function $$dvt$$9$$$$KeyboardFocusEffect$$$$hide$$() {
    this.$_focusEffect$ instanceof $dvt$$9$$.$Shape$ && this.$_container$.removeChild(this.$_focusEffect$)
  };
  $dvt$$9$$.$Dimension$ = function $$dvt$$9$$$$Dimension$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Dimension$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Dimension$.prototype.Init = function $$dvt$$9$$$$Dimension$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$w$ = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.$h$ = $DvtSvgPatternFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Dimension$.prototype.getWidth = $JSCompiler_get$$("$w$");
  $dvt$$9$$.$Dimension$.prototype.getHeight = $JSCompiler_get$$("$h$");
  $dvt$$9$$.$Matrix$ = function $$dvt$$9$$$$Matrix$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Matrix$, $DvtLockable$$);
  $dvt$$9$$.$Matrix$.$_DECOMP_TX$ = 0;
  $dvt$$9$$.$Matrix$.$_DECOMP_TY$ = 1;
  $dvt$$9$$.$Matrix$.$_DECOMP_R$ = 2;
  $dvt$$9$$.$Matrix$.$_DECOMP_SKEWX$ = 3;
  $dvt$$9$$.$Matrix$.$_DECOMP_SX$ = 4;
  $dvt$$9$$.$Matrix$.$_DECOMP_SY$ = 5;
  $dvt$$9$$.$Matrix$.prototype.Init = function $$dvt$$9$$$$Matrix$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.$_a$ = $DvtSvgShadowUtils$$ == $JSCompiler_alias_NULL$$ ? 1 : $DvtSvgShadowUtils$$;
    this.$_b$ = $DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$ ? 0 : $DvtSvgPatternFillUtils$$;
    this.$_c$ = $DvtSvgImageFillUtils$$ == $JSCompiler_alias_NULL$$ ? 0 : $DvtSvgImageFillUtils$$;
    this.$_d$ = $DvtSvgGradientUtils$$ == $JSCompiler_alias_NULL$$ ? 1 : $DvtSvgGradientUtils$$;
    this.$_tx$ = $DvtSvgFilterUtils$$ == $JSCompiler_alias_NULL$$ ? 0 : $DvtSvgFilterUtils$$;
    this.$_ty$ = $DvtSvgFilterContext$$ == $JSCompiler_alias_NULL$$ ? 0 : $DvtSvgFilterContext$$;
    this.$_v$ = this.$_u$ = 0;
    this.$_w$ = 1;
    $dvt$$9$$.$Matrix$.$superclass$.$_Init$.call(this)
  };
  $dvt$$9$$.$Matrix$.prototype.$Identity$ = function $$dvt$$9$$$$Matrix$$$$Identity$$() {
    this.$_a$ = 1;
    this.$_c$ = this.$_b$ = 0;
    this.$_d$ = 1;
    this.$_ty$ = this.$_tx$ = 0
  };
  $dvt$$9$$.$Matrix$.prototype.$clone$ = function $$dvt$$9$$$$Matrix$$$$clone$$() {
    return new $dvt$$9$$.$Matrix$(this.$_a$, this.$_b$, this.$_c$, this.$_d$, this.$_tx$, this.$_ty$)
  };
  $dvt$$9$$.$Matrix$.prototype.concat = function $$dvt$$9$$$$Matrix$$$concat$($DvtSvgShadowUtils$$) {
    if(!this.$_bLocked$) {
      var $DvtSvgPatternFillUtils$$ = this.$_b$ * $DvtSvgShadowUtils$$.$_a$ + this.$_d$ * $DvtSvgShadowUtils$$.$_b$ + this.$_v$ * $DvtSvgShadowUtils$$.$_tx$, $DvtSvgImageFillUtils$$ = this.$_tx$ * $DvtSvgShadowUtils$$.$_a$ + this.$_ty$ * $DvtSvgShadowUtils$$.$_b$ + this.$_w$ * $DvtSvgShadowUtils$$.$_tx$, $DvtSvgGradientUtils$$ = this.$_a$ * $DvtSvgShadowUtils$$.$_c$ + this.$_c$ * $DvtSvgShadowUtils$$.$_d$ + this.$_u$ * $DvtSvgShadowUtils$$.$_ty$, $DvtSvgFilterUtils$$ = this.$_b$ * $DvtSvgShadowUtils$$.$_c$ + 
      this.$_d$ * $DvtSvgShadowUtils$$.$_d$ + this.$_v$ * $DvtSvgShadowUtils$$.$_ty$, $dvt$$9$$ = this.$_tx$ * $DvtSvgShadowUtils$$.$_c$ + this.$_ty$ * $DvtSvgShadowUtils$$.$_d$ + this.$_w$ * $DvtSvgShadowUtils$$.$_ty$;
      this.$_a$ = this.$_a$ * $DvtSvgShadowUtils$$.$_a$ + this.$_c$ * $DvtSvgShadowUtils$$.$_b$ + this.$_u$ * $DvtSvgShadowUtils$$.$_tx$;
      this.$_b$ = $DvtSvgPatternFillUtils$$;
      this.$_c$ = $DvtSvgGradientUtils$$;
      this.$_d$ = $DvtSvgFilterUtils$$;
      this.$_tx$ = $DvtSvgImageFillUtils$$;
      this.$_ty$ = $dvt$$9$$
    }
  };
  $dvt$$9$$.$Matrix$.prototype.translate = function $$dvt$$9$$$$Matrix$$$translate$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_bLocked$) {
      var $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Matrix$;
      $DvtSvgImageFillUtils$$.$_tx$ = $DvtSvgShadowUtils$$;
      $DvtSvgImageFillUtils$$.$_ty$ = $DvtSvgPatternFillUtils$$;
      this.concat($DvtSvgImageFillUtils$$)
    }
  };
  $dvt$$9$$.$Matrix$.prototype.scale = function $$dvt$$9$$$$Matrix$$$scale$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if(!this.$_bLocked$) {
      ($DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$) && this.translate(-$DvtSvgImageFillUtils$$, -$DvtSvgGradientUtils$$);
      var $DvtSvgFilterUtils$$ = new $dvt$$9$$.$Matrix$;
      $DvtSvgFilterUtils$$.$_a$ = $DvtSvgShadowUtils$$;
      $DvtSvgFilterUtils$$.$_d$ = $DvtSvgPatternFillUtils$$;
      this.concat($DvtSvgFilterUtils$$);
      ($DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$) && this.translate($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
    }
  };
  $dvt$$9$$.$Matrix$.prototype.rotate = function $$dvt$$9$$$$Matrix$$$rotate$($DvtSvgShadowUtils$$) {
    if(!this.$_bLocked$) {
      var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Matrix$;
      $DvtSvgPatternFillUtils$$.$_a$ = Math.cos($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$_d$ = $DvtSvgPatternFillUtils$$.$_a$;
      $DvtSvgPatternFillUtils$$.$_c$ = Math.sin($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$_b$ = -$DvtSvgPatternFillUtils$$.$_c$;
      this.concat($DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Matrix$.prototype.$skew$ = function $$dvt$$9$$$$Matrix$$$$skew$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_bLocked$) {
      var $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Matrix$;
      $DvtSvgImageFillUtils$$.$_b$ = Math.tan($DvtSvgShadowUtils$$);
      $DvtSvgImageFillUtils$$.$_c$ = Math.tan($DvtSvgPatternFillUtils$$);
      this.concat($DvtSvgImageFillUtils$$)
    }
  };
  $dvt$$9$$.$Matrix$.prototype.$Determinant$ = function $$dvt$$9$$$$Matrix$$$$Determinant$$() {
    return this.$_a$ * (this.$_d$ * this.$_w$ - this.$_ty$ * this.$_v$) - this.$_b$ * (this.$_c$ * this.$_w$ - this.$_ty$ * this.$_u$) + this.$_tx$ * (this.$_c$ * this.$_v$ - this.$_d$ * this.$_u$)
  };
  $dvt$$9$$.$Matrix$.prototype.$invert$ = function $$dvt$$9$$$$Matrix$$$$invert$$() {
    if(!this.$_bLocked$) {
      var $DvtSvgShadowUtils$$ = this.$Determinant$(), $DvtSvgPatternFillUtils$$ = this.$_tx$ * this.$_v$ - this.$_b$ * this.$_w$, $DvtSvgImageFillUtils$$ = this.$_b$ * this.$_ty$ - this.$_tx$ * this.$_d$, $DvtSvgGradientUtils$$ = this.$_ty$ * this.$_u$ - this.$_c$ * this.$_w$, $DvtSvgFilterUtils$$ = this.$_a$ * this.$_w$ - this.$_tx$ * this.$_u$, $dvt$$9$$ = this.$_tx$ * this.$_c$ - this.$_a$ * this.$_ty$;
      this.$_a$ = (this.$_d$ * this.$_w$ - this.$_ty$ * this.$_v$) / $DvtSvgShadowUtils$$;
      this.$_b$ = $DvtSvgPatternFillUtils$$ / $DvtSvgShadowUtils$$;
      this.$_tx$ = $DvtSvgImageFillUtils$$ / $DvtSvgShadowUtils$$;
      this.$_c$ = $DvtSvgGradientUtils$$ / $DvtSvgShadowUtils$$;
      this.$_d$ = $DvtSvgFilterUtils$$ / $DvtSvgShadowUtils$$;
      this.$_ty$ = $dvt$$9$$ / $DvtSvgShadowUtils$$
    }
  };
  $dvt$$9$$.$Matrix$.prototype.$_decompose$ = function $$dvt$$9$$$$Matrix$$$$_decompose$$() {
    var $DvtSvgShadowUtils$$ = this.$_a$, $DvtSvgPatternFillUtils$$ = this.$_b$, $DvtSvgImageFillUtils$$ = this.$_c$, $DvtSvgGradientUtils$$ = this.$_d$, $DvtSvgFilterUtils$$ = this.$_tx$, $dvt$$9$$ = this.$_ty$;
    if(0 === $DvtSvgShadowUtils$$ * $DvtSvgGradientUtils$$ - $DvtSvgPatternFillUtils$$ * $DvtSvgImageFillUtils$$) {
      return $JSCompiler_alias_NULL$$
    }
    var $DvtSvgFilterContext$$ = Math.sqrt($DvtSvgShadowUtils$$ * $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ * $DvtSvgImageFillUtils$$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ / $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ / $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$ * $DvtSvgPatternFillUtils$$ + $DvtSvgImageFillUtils$$ * $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$ * $DvtSvgImplFactory$$, 
    $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ - $DvtSvgImageFillUtils$$ * $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = Math.sqrt($DvtSvgPatternFillUtils$$ * $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$), $DvtSvgImplFactory$$ = $DvtSvgImplFactory$$ / $DvtHtmlRichTooltipManager$$;
    -1 === $DvtSvgShadowUtils$$ * ($DvtSvgGradientUtils$$ / $DvtHtmlRichTooltipManager$$) - $DvtSvgPatternFillUtils$$ / $DvtHtmlRichTooltipManager$$ * $DvtSvgImageFillUtils$$ && ($DvtSvgImplFactory$$ = -$DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = -$DvtHtmlRichTooltipManager$$);
    return[$DvtSvgFilterUtils$$, $dvt$$9$$, Math.atan2($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$), Math.atan($DvtSvgImplFactory$$), $DvtSvgFilterContext$$, $DvtHtmlRichTooltipManager$$]
  };
  $dvt$$9$$.$Matrix$.prototype.$_recompose$ = function $$dvt$$9$$$$Matrix$$$$_recompose$$($DvtSvgShadowUtils$$) {
    if(!this.$_bLocked$) {
      this.$Identity$();
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[0], $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[1], $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[2], $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[3];
      this.scale($DvtSvgShadowUtils$$[4], $DvtSvgShadowUtils$$[5]);
      this.$skew$($DvtSvgFilterUtils$$, 0);
      this.rotate($DvtSvgGradientUtils$$);
      this.translate($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
    }
  };
  $dvt$$9$$.$Matrix$.prototype.$equals$ = function $$dvt$$9$$$$Matrix$$$$equals$$($DvtSvgShadowUtils$$) {
    return!this && $DvtSvgShadowUtils$$ ? $JSCompiler_alias_FALSE$$ : this && !$DvtSvgShadowUtils$$ ? $JSCompiler_alias_FALSE$$ : !this && !$DvtSvgShadowUtils$$ ? $JSCompiler_alias_TRUE$$ : this.$_a$ == $DvtSvgShadowUtils$$.$_a$ && this.$_b$ == $DvtSvgShadowUtils$$.$_b$ && this.$_c$ == $DvtSvgShadowUtils$$.$_c$ && this.$_d$ == $DvtSvgShadowUtils$$.$_d$ && this.$_tx$ == $DvtSvgShadowUtils$$.$_tx$ && this.$_ty$ == $DvtSvgShadowUtils$$.$_ty$
  };
  $dvt$$9$$.$Matrix$.prototype.$transformPoint$ = function $$dvt$$9$$$$Matrix$$$$transformPoint$$($DvtSvgShadowUtils$$) {
    return new $dvt$$9$$.$Point$(this.$_a$ * $DvtSvgShadowUtils$$.x + this.$_b$ * $DvtSvgShadowUtils$$.y + 1 * this.$_tx$, this.$_c$ * $DvtSvgShadowUtils$$.x + this.$_d$ * $DvtSvgShadowUtils$$.y + 1 * this.$_ty$)
  };
  $dvt$$9$$.$Matrix$.prototype.$isIdentity$ = function $$dvt$$9$$$$Matrix$$$$isIdentity$$() {
    return 1 == this.$_a$ && 0 == this.$_b$ && 0 == this.$_c$ && 1 == this.$_d$ && 0 == this.$_tx$ && 0 == this.$_ty$
  };
  $dvt$$9$$.$Point$ = function $$dvt$$9$$$$Point$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Point$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Point$.prototype.Init = function $$dvt$$9$$$$Point$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.x = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.y = $DvtSvgPatternFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Point$.prototype.$equals$ = function $$dvt$$9$$$$Point$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$Point$ && this.x === $DvtSvgShadowUtils$$.x && this.y === $DvtSvgShadowUtils$$.y ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Rectangle$ = function $$dvt$$9$$$$Rectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.x = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.y = $DvtSvgPatternFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$;
    this.$w$ = $DvtSvgImageFillUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgImageFillUtils$$) ? 0 : $DvtSvgImageFillUtils$$;
    this.$h$ = $DvtSvgGradientUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgGradientUtils$$) ? 0 : $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Rectangle$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Rectangle$.create = function $$dvt$$9$$$$Rectangle$$create$($DvtSvgShadowUtils$$) {
    return new $dvt$$9$$.$Rectangle$($DvtSvgShadowUtils$$[0], $DvtSvgShadowUtils$$[1], $DvtSvgShadowUtils$$[2], $DvtSvgShadowUtils$$[3])
  };
  $dvt$$9$$.$Rectangle$.prototype.$containsPoint$ = function $$dvt$$9$$$$Rectangle$$$$containsPoint$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$ >= this.x && $DvtSvgShadowUtils$$ <= this.x + this.$w$ && $DvtSvgPatternFillUtils$$ >= this.y && $DvtSvgPatternFillUtils$$ <= this.y + this.$h$
  };
  $dvt$$9$$.$Rectangle$.prototype.$getCenter$ = function $$dvt$$9$$$$Rectangle$$$$getCenter$$() {
    return new $dvt$$9$$.$Point$(this.x + this.$w$ / 2, this.y + this.$h$ / 2)
  };
  $dvt$$9$$.$Rectangle$.prototype.$getUnion$ = function $$dvt$$9$$$$Rectangle$$$$getUnion$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Rectangle$;
    if($DvtSvgShadowUtils$$ && 0 !== $DvtSvgShadowUtils$$.$w$ && 0 !== $DvtSvgShadowUtils$$.$h$) {
      if(0 !== this.$w$ && 0 !== this.$h$) {
        var $DvtSvgImageFillUtils$$ = this.x + this.$w$, $DvtSvgGradientUtils$$ = this.y + this.$h$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$, $DvtSvgImplFactory$$ = Math.min(this.x, $DvtSvgShadowUtils$$.x);
        $DvtSvgShadowUtils$$ = Math.min(this.y, $DvtSvgShadowUtils$$.y);
        $DvtSvgPatternFillUtils$$.$w$ = $DvtSvgImageFillUtils$$ < $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$ - $DvtSvgImplFactory$$ : $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$.$h$ = $DvtSvgGradientUtils$$ > $DvtSvgFilterContext$$ ? $DvtSvgGradientUtils$$ - $DvtSvgShadowUtils$$ : $DvtSvgFilterContext$$ - $DvtSvgShadowUtils$$;
        $DvtSvgPatternFillUtils$$.x = $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$.y = $DvtSvgShadowUtils$$
      }else {
        $DvtSvgPatternFillUtils$$.x = $DvtSvgShadowUtils$$.x, $DvtSvgPatternFillUtils$$.y = $DvtSvgShadowUtils$$.y, $DvtSvgPatternFillUtils$$.$w$ = $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.$h$ = $DvtSvgShadowUtils$$.$h$
      }
    }else {
      $DvtSvgPatternFillUtils$$.x = this.x, $DvtSvgPatternFillUtils$$.y = this.y, $DvtSvgPatternFillUtils$$.$w$ = this.$w$, $DvtSvgPatternFillUtils$$.$h$ = this.$h$
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Rectangle$.prototype.$getIntersection$ = function $$dvt$$9$$$$Rectangle$$$$getIntersection$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Rectangle$;
    if($DvtSvgShadowUtils$$ && 0 !== $DvtSvgShadowUtils$$.$w$ && 0 !== $DvtSvgShadowUtils$$.$h$) {
      if(0 !== this.$w$ && 0 !== this.$h$) {
        var $DvtSvgImageFillUtils$$ = this.x + this.$w$, $DvtSvgGradientUtils$$ = this.y + this.$h$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$, $DvtSvgImplFactory$$ = Math.max(this.x, $DvtSvgShadowUtils$$.x);
        $DvtSvgShadowUtils$$ = Math.max(this.y, $DvtSvgShadowUtils$$.y);
        if($DvtSvgImplFactory$$ >= $DvtSvgImageFillUtils$$ || $DvtSvgImplFactory$$ >= $DvtSvgFilterUtils$$ || $DvtSvgShadowUtils$$ >= $DvtSvgGradientUtils$$ || $DvtSvgShadowUtils$$ >= $DvtSvgFilterContext$$) {
          return $JSCompiler_alias_NULL$$
        }
        $DvtSvgPatternFillUtils$$.$w$ = $DvtSvgImageFillUtils$$ < $DvtSvgFilterUtils$$ ? $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$ : $DvtSvgFilterUtils$$ - $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$.$h$ = $DvtSvgGradientUtils$$ > $DvtSvgFilterContext$$ ? $DvtSvgFilterContext$$ - $DvtSvgShadowUtils$$ : $DvtSvgGradientUtils$$ - $DvtSvgShadowUtils$$;
        $DvtSvgPatternFillUtils$$.x = $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$.y = $DvtSvgShadowUtils$$
      }else {
        return $JSCompiler_alias_NULL$$
      }
    }else {
      return $JSCompiler_alias_NULL$$
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Rectangle$.prototype.$grow$ = function $$dvt$$9$$$$Rectangle$$$$grow$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.x, $DvtSvgGradientUtils$$ = this.y, $DvtSvgFilterUtils$$ = this.x + this.$w$, $dvt$$9$$ = this.y + this.$h$;
    $DvtSvgShadowUtils$$ < $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ > $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ < $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$);
    $DvtSvgPatternFillUtils$$ > $dvt$$9$$ && ($dvt$$9$$ = $DvtSvgPatternFillUtils$$);
    this.x = $DvtSvgImageFillUtils$$;
    this.y = $DvtSvgGradientUtils$$;
    this.$w$ = $DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$;
    this.$h$ = $dvt$$9$$ - $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Rectangle$.prototype.$intersects$ = function $$dvt$$9$$$$Rectangle$$$$intersects$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ && 0 !== $DvtSvgShadowUtils$$.$w$ && 0 !== $DvtSvgShadowUtils$$.$h$ && 0 !== this.$w$ && 0 !== this.$h$) {
      var $DvtSvgPatternFillUtils$$ = this.y + this.$h$, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$;
      return!($DvtSvgShadowUtils$$.x > this.x + this.$w$ || $DvtSvgImageFillUtils$$ < this.x || $DvtSvgShadowUtils$$.y > $DvtSvgPatternFillUtils$$ || $DvtSvgGradientUtils$$ < this.y)
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Rectangle$.prototype.$clone$ = function $$dvt$$9$$$$Rectangle$$$$clone$$() {
    return new $dvt$$9$$.$Rectangle$(this.x, this.y, this.$w$, this.$h$)
  };
  $dvt$$9$$.$Rectangle$.prototype.$equals$ = function $$dvt$$9$$$$Rectangle$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$Rectangle$ && this.x == $DvtSvgShadowUtils$$.x && this.y == $DvtSvgShadowUtils$$.y && this.$w$ == $DvtSvgShadowUtils$$.$w$ && this.$h$ == $DvtSvgShadowUtils$$.$h$
  };
  $dvt$$9$$.$Rectangle$.prototype.toString = function $$dvt$$9$$$$Rectangle$$$toString$() {
    return this.x + ", " + this.y + ", " + this.$w$ + ", " + this.$h$
  };
  $dvt$$9$$.$VectorUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$VectorUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$VectorUtils$.$createVector$ = function $$dvt$$9$$$$VectorUtils$$$createVector$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = {};
    $DvtSvgImageFillUtils$$.x = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.y = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$VectorUtils$.$addVectors$ = function $$dvt$$9$$$$VectorUtils$$$addVectors$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$VectorUtils$.$createVector$($DvtSvgShadowUtils$$.x + $DvtSvgPatternFillUtils$$.x, $DvtSvgShadowUtils$$.y + $DvtSvgPatternFillUtils$$.y)
  };
  $dvt$$9$$.$VectorUtils$.$subtractVectors$ = function $$dvt$$9$$$$VectorUtils$$$subtractVectors$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$VectorUtils$.$createVector$($DvtSvgShadowUtils$$.x - $DvtSvgPatternFillUtils$$.x, $DvtSvgShadowUtils$$.y - $DvtSvgPatternFillUtils$$.y)
  };
  $dvt$$9$$.$VectorUtils$.$scaleVector$ = function $$dvt$$9$$$$VectorUtils$$$scaleVector$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$VectorUtils$.$createVector$($DvtSvgShadowUtils$$.x * $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.y * $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$VectorUtils$.$getMagnitude$ = function $$dvt$$9$$$$VectorUtils$$$getMagnitude$$($DvtSvgShadowUtils$$) {
    return Math.sqrt($DvtSvgShadowUtils$$.x * $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.y * $DvtSvgShadowUtils$$.y)
  };
  $dvt$$9$$.$Array2D$ = function $$dvt$$9$$$$Array2D$$() {
    this.Init()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Array2D$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Array2D$.prototype.Init = function $$dvt$$9$$$$Array2D$$$Init$() {
    this.$_data$ = []
  };
  $dvt$$9$$.$Array2D$.prototype.get = function $$dvt$$9$$$$Array2D$$$get$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_getInner$($DvtSvgShadowUtils$$)[$DvtSvgPatternFillUtils$$]
  };
  $dvt$$9$$.$Array2D$.prototype.put = function $$dvt$$9$$$$Array2D$$$put$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getInner$($DvtSvgShadowUtils$$);
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
    $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Array2D$.prototype.$_getInner$ = function $$dvt$$9$$$$Array2D$$$$_getInner$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_data$[$DvtSvgShadowUtils$$];
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = [], this.$_data$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Cache$ = function $$dvt$$9$$$$Cache$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Cache$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Cache$.$_TARGET_SIZE$ = 1E3;
  $dvt$$9$$.$Cache$.$_BUFFER_SIZE$ = 0.5;
  $dvt$$9$$.$Cache$.prototype.Init = function $$dvt$$9$$$$Cache$$$Init$($DvtSvgShadowUtils$$) {
    this.$_targetSize$ = $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgShadowUtils$$ : $dvt$$9$$.$Cache$.$_TARGET_SIZE$;
    this.$_maxSize$ = Math.ceil(this.$_targetSize$ * (1 + $dvt$$9$$.$Cache$.$_BUFFER_SIZE$));
    this.$_cache$ = {};
    this.$_lruArray$ = [];
    this.$_misses$ = this.$_hits$ = 0
  };
  $dvt$$9$$.$Cache$.prototype.get = function $$dvt$$9$$$$Cache$$$get$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_cache$[$DvtSvgShadowUtils$$];
    if($DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$) {
      return this.$_hits$++, $DvtSvgShadowUtils$$
    }
    this.$_misses$++;
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Cache$.prototype.put = function $$dvt$$9$$$$Cache$$$put$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_cache$[$DvtSvgShadowUtils$$] != $JSCompiler_alias_NULL$$;
    this.$_cache$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$;
    if($DvtSvgImageFillUtils$$) {
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ArrayUtils$.$getIndex$(this.$_lruArray$, $DvtSvgShadowUtils$$), this.$_lruArray$.splice($DvtSvgImageFillUtils$$, 1), this.$_lruArray$.push($DvtSvgShadowUtils$$)
    }else {
      if(this.$_lruArray$.push($DvtSvgShadowUtils$$), this.$_lruArray$.length > this.$_maxSize$) {
        for(var $DvtSvgImageFillUtils$$ = this.$_lruArray$.splice(0, this.$_maxSize$ - this.$_targetSize$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
          delete this.$_cache$[$DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$]]
        }
      }
    }
  };
  $dvt$$9$$.$Cache$.prototype.toString = function $$dvt$$9$$$$Cache$$$toString$() {
    var $DvtSvgShadowUtils$$ = "Cache Size: " + this.$_lruArray$.length, $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ + ("\nHits: " + this.$_hits$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ + ("\nMisses: " + this.$_misses$);
    return $DvtSvgShadowUtils$$ += "\nHit %: " + Math.round(1E4 * this.$_hits$ / (this.$_hits$ + this.$_misses$)) / 100
  };
  $dvt$$9$$.$DragAndDropUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$DragAndDropUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$DragAndDropUtils$.$getDragFeedbackBounds$ = function $$dvt$$9$$$$DragAndDropUtils$$$getDragFeedbackBounds$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!$DvtSvgShadowUtils$$) {
      return $JSCompiler_alias_NULL$$
    }
    var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_NULL$$;
    if($DvtSvgShadowUtils$$ instanceof Array) {
      if(0 < $DvtSvgShadowUtils$$.length) {
        for(var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[0].$getDimensions$($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgShadowUtils$$[0].getParent()), $DvtSvgGradientUtils$$ = 1;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
          var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.$getDimensions$($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgFilterUtils$$.getParent());
          $DvtSvgFilterUtils$$.x < $DvtSvgImageFillUtils$$.x && ($DvtSvgImageFillUtils$$.$w$ += $DvtSvgImageFillUtils$$.x - $DvtSvgFilterUtils$$.x, $DvtSvgImageFillUtils$$.x = $DvtSvgFilterUtils$$.x);
          $DvtSvgFilterUtils$$.y < $DvtSvgImageFillUtils$$.y && ($DvtSvgImageFillUtils$$.$h$ += $DvtSvgImageFillUtils$$.y - $DvtSvgFilterUtils$$.y, $DvtSvgImageFillUtils$$.y = $DvtSvgFilterUtils$$.y);
          $DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ > $DvtSvgImageFillUtils$$.x + $DvtSvgImageFillUtils$$.$w$ && ($DvtSvgImageFillUtils$$.$w$ = $DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ - $DvtSvgImageFillUtils$$.x);
          $DvtSvgFilterUtils$$.y + $DvtSvgFilterUtils$$.$h$ > $DvtSvgImageFillUtils$$.y + $DvtSvgImageFillUtils$$.$h$ && ($DvtSvgImageFillUtils$$.$h$ = $DvtSvgFilterUtils$$.y + $DvtSvgFilterUtils$$.$h$ - $DvtSvgImageFillUtils$$.y)
        }
      }
    }else {
      $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgShadowUtils$$.getParent())
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$LayoutUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$LayoutUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$LayoutUtils$.position = function $$dvt$$9$$$$LayoutUtils$$position$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtSvgImageFillUtils$$ && ($DvtSvgFilterContext$$ = 0 < $DvtSvgGradientUtils$$ * $DvtSvgFilterUtils$$ ? $DvtSvgFilterContext$$ : 0, "start" == $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Agent$.$isRightToLeft$($DvtSvgImageFillUtils$$.$getCtx$()) ? "right" : "left" : "end" == $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Agent$.$isRightToLeft$($DvtSvgImageFillUtils$$.$getCtx$()) ? "left" : "right"), "top" == $DvtSvgPatternFillUtils$$ ? ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgShadowUtils$$.x + 
    $DvtSvgShadowUtils$$.$w$ / 2 - $DvtSvgGradientUtils$$ / 2, $DvtSvgShadowUtils$$.y), $DvtSvgShadowUtils$$.y += $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$, $DvtSvgShadowUtils$$.$h$ -= $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$) : "bottom" == $DvtSvgPatternFillUtils$$ ? ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ / 2 - $DvtSvgGradientUtils$$ / 2, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ - $DvtSvgFilterUtils$$), $DvtSvgShadowUtils$$.$h$ -= 
    $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$) : "left" == $DvtSvgPatternFillUtils$$ ? ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ / 2 - $DvtSvgFilterUtils$$ / 2), $DvtSvgShadowUtils$$.x += $DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$, $DvtSvgShadowUtils$$.$w$ -= $DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$) : "right" == $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ - 
    $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ / 2 - $DvtSvgFilterUtils$$ / 2), $DvtSvgShadowUtils$$.$w$ -= $DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$))
  };
  $dvt$$9$$.$LayoutUtils$.align = function $$dvt$$9$$$$LayoutUtils$$align$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgImageFillUtils$$ && ("start" == $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Agent$.$isRightToLeft$($DvtSvgImageFillUtils$$.$getCtx$()) ? "right" : "left" : "end" == $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Agent$.$isRightToLeft$($DvtSvgImageFillUtils$$.$getCtx$()) ? "left" : "right"), "left" == $DvtSvgPatternFillUtils$$ ? $DvtSvgImageFillUtils$$.$setX$($DvtSvgShadowUtils$$.x) : "center" == $DvtSvgPatternFillUtils$$ ? $DvtSvgImageFillUtils$$.$setX$($DvtSvgShadowUtils$$.x + 
    $DvtSvgShadowUtils$$.$w$ / 2 - $DvtSvgGradientUtils$$ / 2) : "right" == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setX$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ - $DvtSvgGradientUtils$$))
  };
  $dvt$$9$$.$LayoutUtils$.$getBubbleSize$ = function $$dvt$$9$$$$LayoutUtils$$$getBubbleSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    if(0 >= $DvtSvgShadowUtils$$) {
      return 0
    }
    $DvtSvgGradientUtils$$ *= $DvtSvgGradientUtils$$;
    $DvtSvgFilterUtils$$ *= $DvtSvgFilterUtils$$;
    if($DvtSvgImageFillUtils$$ / $DvtSvgPatternFillUtils$$ < $DvtSvgFilterUtils$$ / $DvtSvgGradientUtils$$) {
      $DvtSvgGradientUtils$$ = Math.sqrt($DvtSvgGradientUtils$$ * $DvtSvgFilterUtils$$);
      var $dvt$$9$$ = Math.sqrt($DvtSvgPatternFillUtils$$ * $DvtSvgImageFillUtils$$);
      if($DvtSvgShadowUtils$$ == $dvt$$9$$) {
        return Math.sqrt($DvtSvgGradientUtils$$)
      }
      $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ / $dvt$$9$$ * $DvtSvgGradientUtils$$;
      $DvtSvgGradientUtils$$ *= $DvtSvgPatternFillUtils$$ / $dvt$$9$$
    }
    return Math.sqrt($DvtSvgGradientUtils$$ + ($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$) / ($DvtSvgImageFillUtils$$ - $DvtSvgPatternFillUtils$$) * ($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$))
  };
  $dvt$$9$$.$Math$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Math$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Math$.$RADS_PER_DEGREE$ = Math.PI / 180;
  $dvt$$9$$.$Math$.$DEGREES_PER_RAD$ = 180 / Math.PI;
  $dvt$$9$$.$Math$.$TWO_PI$ = 2 * Math.PI;
  $dvt$$9$$.$Math$.$HALF_PI$ = Math.PI / 2;
  $dvt$$9$$.$Math$.$QUARTER_PI$ = Math.PI / 4;
  $dvt$$9$$.$Math$.$TOLERANCE$ = 0.1;
  $dvt$$9$$.$Math$.$cantorPairing$ = function $$dvt$$9$$$$Math$$$cantorPairing$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 > $DvtSvgShadowUtils$$ || 0 > $DvtSvgPatternFillUtils$$ ? -1 : ($DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$) * ($DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$ + 1) / 2 + $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Math$.$degreesToRads$ = function $$dvt$$9$$$$Math$$$degreesToRads$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ * $dvt$$9$$.$Math$.$RADS_PER_DEGREE$
  };
  $dvt$$9$$.$Math$.$radsToDegrees$ = function $$dvt$$9$$$$Math$$$radsToDegrees$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ * $dvt$$9$$.$Math$.$DEGREES_PER_RAD$
  };
  $dvt$$9$$.$Math$.$interpolateNumber$ = function $$dvt$$9$$$$Math$$$interpolateNumber$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ * ($DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Math$.$log10$ = function $$dvt$$9$$$$Math$$$log10$$($DvtSvgShadowUtils$$) {
    return Math.log($DvtSvgShadowUtils$$) / Math.LN10
  };
  $dvt$$9$$.$Map2D$ = function $$dvt$$9$$$$Map2D$$() {
    this.Init()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Map2D$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Map2D$.prototype.Init = function $$dvt$$9$$$$Map2D$$$Init$() {
    this.$_map$ = {}
  };
  $dvt$$9$$.$Map2D$.prototype.get = function $$dvt$$9$$$$Map2D$$$get$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_getInnerMap$($DvtSvgShadowUtils$$)[$DvtSvgPatternFillUtils$$]
  };
  $dvt$$9$$.$Map2D$.prototype.put = function $$dvt$$9$$$$Map2D$$$put$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getInnerMap$($DvtSvgShadowUtils$$);
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
    $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Map2D$.prototype.$_getInnerMap$ = function $$dvt$$9$$$$Map2D$$$$_getInnerMap$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_map$[$DvtSvgShadowUtils$$];
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = {}, this.$_map$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$PixelMap$ = function $$dvt$$9$$$$PixelMap$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$PixelMap$, $dvt$$9$$.$Array2D$);
  $dvt$$9$$.$PixelMap$.$_INITIAL_SIZE$ = 1500;
  $dvt$$9$$.$PixelMap$.prototype.Init = function $$dvt$$9$$$$PixelMap$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$9$$.$PixelMap$.$superclass$.Init.call(this);
    if(this.$_innerMap$ = $DvtSvgPatternFillUtils$$) {
      this.$_innerMap$.$_outerMap$ = this, this.$_innerMap$.$_bOuterMap$ = $JSCompiler_alias_TRUE$$
    }
    this.$_scale$ = $DvtSvgShadowUtils$$ || 1;
    this.$_capacity$ = this.$_scale$ * this.$_scale$;
    this.$_bInnerMap$ = this.$_innerMap$ != $JSCompiler_alias_NULL$$;
    this.$_bOuterMap$ = $JSCompiler_alias_FALSE$$;
    for(var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$PixelMap$.$_INITIAL_SIZE$ / this.$_scale$, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
      for(var $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgFilterUtils$$++) {
        this.put($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, 0)
      }
    }
  };
  $dvt$$9$$.$PixelMap$.prototype.$isObscured$ = function $$dvt$$9$$$$PixelMap$$$$isObscured$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    for(var $DvtSvgFilterUtils$$ = this.$_adjustForScale$($DvtSvgPatternFillUtils$$), $dvt$$9$$ = this.$_adjustForScale$($DvtSvgImageFillUtils$$), $DvtSvgFilterContext$$ = this.$_adjustForScale$($DvtSvgGradientUtils$$), $DvtSvgImplFactory$$ = this.$_adjustForScale$($DvtSvgShadowUtils$$);$DvtSvgImplFactory$$ <= $dvt$$9$$;$DvtSvgImplFactory$$++) {
      for(var $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterUtils$$;$DvtHtmlRichTooltipManager$$ <= $DvtSvgFilterContext$$;$DvtHtmlRichTooltipManager$$++) {
        if(this.get($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) !== $JSCompiler_alias_TRUE$$) {
          if(this.$_bInnerMap$) {
            var $DvtDomXmlParser$$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgImplFactory$$ * this.$_scale$), $DvtContextMenuTooltipItem$$ = Math.max($DvtSvgPatternFillUtils$$, $DvtHtmlRichTooltipManager$$ * this.$_scale$), $DvtCustomTooltipItem$$ = Math.min($DvtSvgImageFillUtils$$, ($DvtSvgImplFactory$$ + 1) * this.$_scale$ - 1), $DvtCustomTooltip$$ = Math.min($DvtSvgGradientUtils$$, ($DvtHtmlRichTooltipManager$$ + 1) * this.$_scale$ - 1);
            if(!this.$_innerMap$.$isObscured$($DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$, $DvtCustomTooltip$$)) {
              return $JSCompiler_alias_FALSE$$
            }
          }else {
            return $JSCompiler_alias_FALSE$$
          }
        }
      }
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$PixelMap$.prototype.$obscure$ = function $$dvt$$9$$$$PixelMap$$$$obscure$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    for(var $dvt$$9$$ = this.$_adjustForScale$($DvtSvgPatternFillUtils$$), $DvtSvgFilterContext$$ = this.$_adjustForScale$($DvtSvgImageFillUtils$$), $DvtSvgImplFactory$$ = this.$_adjustForScale$($DvtSvgGradientUtils$$), $DvtHtmlRichTooltipManager$$ = this.$_adjustForScale$($DvtSvgShadowUtils$$);$DvtHtmlRichTooltipManager$$ <= $DvtSvgFilterContext$$;$DvtHtmlRichTooltipManager$$++) {
      for(var $DvtDomXmlParser$$ = $dvt$$9$$;$DvtDomXmlParser$$ <= $DvtSvgImplFactory$$;$DvtDomXmlParser$$++) {
        if(this.get($DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) !== $JSCompiler_alias_TRUE$$) {
          if(this.$_bInnerMap$) {
            var $DvtContextMenuTooltipItem$$ = Math.max($DvtSvgShadowUtils$$, $DvtHtmlRichTooltipManager$$ * this.$_scale$), $DvtCustomTooltipItem$$ = Math.max($DvtSvgPatternFillUtils$$, $DvtDomXmlParser$$ * this.$_scale$), $DvtCustomTooltip$$ = Math.min($DvtSvgImageFillUtils$$, ($DvtHtmlRichTooltipManager$$ + 1) * this.$_scale$ - 1), $DvtCircularShape$$ = Math.min($DvtSvgGradientUtils$$, ($DvtDomXmlParser$$ + 1) * this.$_scale$ - 1);
            this.$_innerMap$.$obscure$($DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$, $DvtCustomTooltip$$, $DvtCircularShape$$, $DvtSvgFilterUtils$$)
          }else {
            this.$_increment$($DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtSvgFilterUtils$$)
          }
        }
      }
    }
  };
  $dvt$$9$$.$PixelMap$.prototype.$_increment$ = function $$dvt$$9$$$$PixelMap$$$$_increment$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$_adjustForScale$($DvtSvgShadowUtils$$), $DvtSvgFilterUtils$$ = this.$_adjustForScale$($DvtSvgPatternFillUtils$$), $dvt$$9$$ = this.get($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $dvt$$9$$ = $dvt$$9$$ != $JSCompiler_alias_NULL$$ ? $dvt$$9$$ + $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$;
    $dvt$$9$$ >= this.$_capacity$ && ($dvt$$9$$ = $JSCompiler_alias_TRUE$$);
    this.put($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$);
    $dvt$$9$$ === $JSCompiler_alias_TRUE$$ && this.$_bOuterMap$ && this.$_outerMap$.$_increment$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, this.$_capacity$)
  };
  $dvt$$9$$.$PixelMap$.prototype.$_adjustForScale$ = function $$dvt$$9$$$$PixelMap$$$$_adjustForScale$$($DvtSvgShadowUtils$$) {
    return Math.floor($DvtSvgShadowUtils$$ / this.$_scale$)
  };
  $dvt$$9$$.$PropMap$ = function $$dvt$$9$$$$PropMap$$() {
    this.Init()
  };
  $dvt$$9$$.$PropMap$.$REGEXP$ = RegExp("#\\{([^\\}]*)\\}", "g");
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$PropMap$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$PropMap$.prototype.Init = function $$dvt$$9$$$$PropMap$$$Init$() {
    this.$_props$ = {}
  };
  $dvt$$9$$.$PropMap$.prototype.$getProperty$ = function $$dvt$$9$$$$PropMap$$$$getProperty$$($DvtSvgShadowUtils$$) {
    return this.$_props$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$PropMap$.prototype.setProperty = function $$dvt$$9$$$$PropMap$$$setProperty$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_props$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$PropMap$.prototype.$getStringProp$ = function $$dvt$$9$$$$PropMap$$$$getStringProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$];
    return $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$PropMap$.prototype.$getBooleanProp$ = function $$dvt$$9$$$$PropMap$$$$getBooleanProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$;
    "boolean" === typeof $DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ : 0 === $DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$ = $JSCompiler_alias_FALSE$$ : 1 === $DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$ = $JSCompiler_alias_TRUE$$ : "string" === typeof $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = "true" === $DvtSvgImageFillUtils$$.toLowerCase() || "yes" === $DvtSvgImageFillUtils$$.toLowerCase() || "on" === $DvtSvgImageFillUtils$$.toLowerCase());
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$PropMap$.prototype.$getIntegerProp$ = function $$dvt$$9$$$$PropMap$$$$getIntegerProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = parseInt($DvtSvgImageFillUtils$$));
    return $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$PropMap$.prototype.$getFloatProp$ = function $$dvt$$9$$$$PropMap$$$$getFloatProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = parseFloat($DvtSvgImageFillUtils$$));
    return $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$PropMap$.prototype.getId = function $$dvt$$9$$$$PropMap$$$getId$() {
    return this.$getProperty$("id")
  };
  $dvt$$9$$.$PropMap$.prototype.setId = function $$dvt$$9$$$$PropMap$$$setId$($DvtSvgShadowUtils$$) {
    this.setProperty("id", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$PropMap$.prototype.$setProperties$ = function $$dvt$$9$$$$PropMap$$$$setProperties$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
      $DvtSvgImageFillUtils$$.name && $DvtSvgImageFillUtils$$.value !== $JSCompiler_alias_VOID$$ && this.setProperty($DvtSvgImageFillUtils$$.name, $DvtSvgImageFillUtils$$.value)
    }
  };
  $dvt$$9$$.$PropMap$.prototype.$stamp$ = function $$dvt$$9$$$$PropMap$$$$stamp$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new this.constructor, $DvtSvgImageFillUtils$$ = {}, $DvtSvgGradientUtils$$;
    for($DvtSvgGradientUtils$$ in this.$_props$) {
      $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$] = this.$_props$[$DvtSvgGradientUtils$$] && this.$_props$[$DvtSvgGradientUtils$$].replace ? this.$_props$[$DvtSvgGradientUtils$$].replace($dvt$$9$$.$PropMap$.$REGEXP$, function($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
        return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] !== $JSCompiler_alias_VOID$$ ? $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] : $DvtSvgPatternFillUtils$$
      }) : this.$_props$[$DvtSvgGradientUtils$$]
    }
    $DvtSvgPatternFillUtils$$.$_props$ = $DvtSvgImageFillUtils$$;
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$PropMap$.$toELContext$ = function $$dvt$$9$$$$PropMap$$$toELContext$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getAttributes();
    for(var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = {}, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgImageFillUtils$$[$DvtSvgPatternFillUtils$$.name] = $DvtSvgPatternFillUtils$$.value
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ImageLoader$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ImageLoader$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ImageLoader$.$loadImage$ = function $$dvt$$9$$$$ImageLoader$$$loadImage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$.$_implFactory$.$getImageLoader$().$loadImage$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$JsonUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$JsonUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$JsonUtils$.$clone$ = function $$dvt$$9$$$$JsonUtils$$$clone$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$ == $JSCompiler_alias_NULL$$) {
      return $JSCompiler_alias_NULL$$
    }
    var $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$;
    if($DvtSvgShadowUtils$$ instanceof Array) {
      $DvtSvgGradientUtils$$ = [];
      for($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgGradientUtils$$[$DvtSvgImageFillUtils$$] = $dvt$$9$$.$JsonUtils$.$_isDeepClonable$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]) ? $dvt$$9$$.$JsonUtils$.$clone$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgPatternFillUtils$$) : $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]
      }
    }else {
      if($DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$CSSStyle$) {
        $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$clone$()
      }else {
        if($DvtSvgShadowUtils$$ instanceof Date) {
          $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.getTime()
        }else {
          if($dvt$$9$$.$JsonUtils$.$_isClonableObject$($DvtSvgShadowUtils$$)) {
            var $DvtSvgGradientUtils$$ = {}, $DvtSvgFilterUtils$$;
            for($DvtSvgFilterUtils$$ in $DvtSvgShadowUtils$$) {
              if(!$DvtSvgPatternFillUtils$$ || $DvtSvgPatternFillUtils$$($DvtSvgFilterUtils$$)) {
                var $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$];
                $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$] = !($DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$] == $JSCompiler_alias_TRUE$$) && $dvt$$9$$.$JsonUtils$.$_isDeepClonable$($DvtSvgFilterContext$$) && "_widgetConstructor" != $DvtSvgFilterUtils$$ ? $dvt$$9$$.$JsonUtils$.$clone$($DvtSvgFilterContext$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$] : $JSCompiler_alias_NULL$$) : $DvtSvgFilterContext$$
              }
            }
          }
        }
      }
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$JsonUtils$.$merge$ = function $$dvt$$9$$$$JsonUtils$$$merge$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$JsonUtils$.$clone$($DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$JsonUtils$.$clone$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgImageFillUtils$$);
    if($DvtSvgShadowUtils$$ == $JSCompiler_alias_NULL$$) {
      return $DvtSvgPatternFillUtils$$
    }
    if($DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$) {
      return $DvtSvgShadowUtils$$
    }
    $dvt$$9$$.$JsonUtils$.$_copy$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$JsonUtils$.$_copy$ = function $$dvt$$9$$$$JsonUtils$$$_copy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ in $DvtSvgShadowUtils$$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
      $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$ instanceof Array || "_widgetConstructor" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] = $DvtSvgGradientUtils$$ : $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] && $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] instanceof $dvt$$9$$.$CSSStyle$ ? $DvtSvgGradientUtils$$ instanceof $dvt$$9$$.$CSSStyle$ ? $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].$merge$($DvtSvgGradientUtils$$) : $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].$merge$(new $dvt$$9$$.$CSSStyle$($DvtSvgGradientUtils$$)) : 
      $dvt$$9$$.$JsonUtils$.$_isDeepClonable$($DvtSvgGradientUtils$$) ? $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] ? $dvt$$9$$.$JsonUtils$.$_copy$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]) : $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] = $DvtSvgGradientUtils$$ : $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] = $DvtSvgGradientUtils$$
    }
  };
  $dvt$$9$$.$JsonUtils$.$_isDeepClonable$ = function $$dvt$$9$$$$JsonUtils$$$_isDeepClonable$$($DvtSvgShadowUtils$$) {
    return"undefined" == typeof $DvtSvgShadowUtils$$ ? $JSCompiler_alias_FALSE$$ : $DvtSvgShadowUtils$$ instanceof Object && !($DvtSvgShadowUtils$$ instanceof Boolean) && !($DvtSvgShadowUtils$$ instanceof String) && !($DvtSvgShadowUtils$$ instanceof Number) && !($DvtSvgShadowUtils$$ instanceof Function) && !$DvtSvgShadowUtils$$.then
  };
  $dvt$$9$$.$JsonUtils$.$_isClonableObject$ = function $$dvt$$9$$$$JsonUtils$$$_isClonableObject$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof Object && !$DvtSvgShadowUtils$$.then && !$DvtSvgShadowUtils$$.$jquery$ && !("undefined" != typeof NodeList && $DvtSvgShadowUtils$$ instanceof NodeList) && !("undefined" != typeof Node && $DvtSvgShadowUtils$$ instanceof Node) ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$BaseEvent$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$BaseEvent$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$BaseEvent$.prototype.Init = function $$dvt$$9$$$$BaseEvent$$$Init$($DvtSvgShadowUtils$$) {
    this.type = this.type = $DvtSvgShadowUtils$$.type;
    this.target = $dvt$$9$$.$BaseEvent$.$FindDisplayable$($DvtSvgShadowUtils$$.target);
    this.$_isPropagationStopped$ = $JSCompiler_alias_FALSE$$;
    this.$_event$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$BaseEvent$.prototype.$getNativeEvent$ = $JSCompiler_get$$("$_event$");
  $dvt$$9$$.$BaseEvent$.prototype.preventDefault = function $$dvt$$9$$$$BaseEvent$$$preventDefault$() {
    this.$_event$.cancelable && this.$_event$.preventDefault()
  };
  $dvt$$9$$.$BaseEvent$.prototype.stopPropagation = function $$dvt$$9$$$$BaseEvent$$$stopPropagation$() {
    this.$_event$.stopPropagation && this.$_event$.stopPropagation();
    this.$_event$.cancelBubble = $JSCompiler_alias_TRUE$$;
    this.$_event$.cancel = $JSCompiler_alias_TRUE$$;
    this.$_event$.returnValue = $JSCompiler_alias_FALSE$$;
    this.$_isPropagationStopped$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$BaseEvent$.prototype.$isPropagationStopped$ = $JSCompiler_get$$("$_isPropagationStopped$");
  $dvt$$9$$.$BaseEvent$.prototype.$getType$ = $JSCompiler_get$$("type");
  $dvt$$9$$.$BaseEvent$.$FindDisplayable$ = function $$dvt$$9$$$$BaseEvent$$$FindDisplayable$$($DvtSvgShadowUtils$$) {
    for(;$DvtSvgShadowUtils$$;) {
      if($DvtSvgShadowUtils$$.$_obj$ && $DvtSvgShadowUtils$$.$_obj$.$getObj$ && $DvtSvgShadowUtils$$.$_obj$.$getObj$()) {
        return $DvtSvgShadowUtils$$.$_obj$.$getObj$()
      }
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentNode
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$BaseComponentEvent$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$BaseComponentEvent$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$BaseComponentEvent$.$CLIENT_ROW_KEY$ = "clientRowKey";
  $dvt$$9$$.$BaseComponentEvent$.prototype.Init = function $$dvt$$9$$$$BaseComponentEvent$$$Init$($DvtSvgShadowUtils$$) {
    this.type = this.$_type$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$BaseComponentEvent$.prototype.$getType$ = $JSCompiler_get$$("$_type$");
  $dvt$$9$$.$BaseComponentEvent$.prototype.$addParam$ = function $$dvt$$9$$$$BaseComponentEvent$$$$addParam$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_paramKeys$ || (this.$_paramKeys$ = [], this.$_paramValues$ = []);
    this.$_paramKeys$.push($DvtSvgShadowUtils$$);
    this.$_paramValues$.push($DvtSvgPatternFillUtils$$);
    this[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$BaseComponentEvent$.prototype.$getParamValue$ = function $$dvt$$9$$$$BaseComponentEvent$$$$getParamValue$$($DvtSvgShadowUtils$$) {
    if(!$DvtSvgShadowUtils$$ || !this.$_paramKeys$ || !this.$_paramValues$) {
      return $JSCompiler_alias_NULL$$
    }
    for(var $DvtSvgPatternFillUtils$$ = -1, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$_paramKeys$.length;$DvtSvgImageFillUtils$$++) {
      if(this.$_paramKeys$[$DvtSvgImageFillUtils$$] == $DvtSvgShadowUtils$$) {
        $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$;
        break
      }
    }
    return-1 != $DvtSvgPatternFillUtils$$ ? this.$_paramValues$[$DvtSvgPatternFillUtils$$] : this[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtFocusEvent$$, $dvt$$9$$.$BaseEvent$);
  $DvtFocusEvent$$.$FOCUS$ = $dvt$$9$$.$Obj$.$defineConstant$("focus");
  $DvtFocusEvent$$.$FOCUSIN$ = $dvt$$9$$.$Obj$.$defineConstant$("focusin");
  $DvtFocusEvent$$.$FOCUSOUT$ = $dvt$$9$$.$Obj$.$defineConstant$("focusout");
  $DvtFocusEvent$$.$BLUR$ = $dvt$$9$$.$Obj$.$defineConstant$("blur");
  $DvtFocusEvent$$.prototype.Init = function $$DvtFocusEvent$$$$Init$($DvtSvgShadowUtils$$) {
    $DvtFocusEvent$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.bubbles = $DvtSvgShadowUtils$$.bubbles;
    this.cancelable = $DvtSvgShadowUtils$$.cancelable;
    this.view = $DvtSvgShadowUtils$$.view;
    $DvtSvgShadowUtils$$.relatedTarget != $JSCompiler_alias_NULL$$ && (this.relatedTarget = $dvt$$9$$.$BaseEvent$.$FindDisplayable$($DvtSvgShadowUtils$$.relatedTarget))
  };
  $dvt$$9$$.$KeyboardEvent$ = function $$dvt$$9$$$$KeyboardEvent$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$KeyboardEvent$, $dvt$$9$$.$BaseEvent$);
  $dvt$$9$$.$KeyboardEvent$.$KEYDOWN$ = $dvt$$9$$.$Obj$.$defineConstant$("keydown");
  $dvt$$9$$.$KeyboardEvent$.$KEYUP$ = $dvt$$9$$.$Obj$.$defineConstant$("keyup");
  $dvt$$9$$.$KeyboardEvent$.$KEYPRESS$ = $dvt$$9$$.$Obj$.$defineConstant$("keypress");
  $dvt$$9$$.$KeyboardEvent$.$TAB$ = 9;
  $dvt$$9$$.$KeyboardEvent$.$ENTER$ = 13;
  $dvt$$9$$.$KeyboardEvent$.$SHIFT$ = 16;
  $dvt$$9$$.$KeyboardEvent$.$CONTROL$ = 17;
  $dvt$$9$$.$KeyboardEvent$.$HOME$ = 36;
  $dvt$$9$$.$KeyboardEvent$.$END$ = 35;
  $dvt$$9$$.$KeyboardEvent$.$ESCAPE$ = 27;
  $dvt$$9$$.$KeyboardEvent$.$SPACE$ = 32;
  $dvt$$9$$.$KeyboardEvent$.$PAGE_UP$ = 33;
  $dvt$$9$$.$KeyboardEvent$.$PAGE_DOWN$ = 34;
  $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$ = 38;
  $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$ = 40;
  $dvt$$9$$.$KeyboardEvent$.$DELETE$ = 46;
  $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$ = 37;
  $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$ = 39;
  $dvt$$9$$.$KeyboardEvent$.$OPEN_BRACKET$ = 219;
  $dvt$$9$$.$KeyboardEvent$.$CLOSE_BRACKET$ = 221;
  $dvt$$9$$.$KeyboardEvent$.$BACK_SLASH$ = 220;
  $dvt$$9$$.$KeyboardEvent$.$FORWARD_SLASH$ = 191;
  $dvt$$9$$.$KeyboardEvent$.ZERO = 48;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_ZERO$ = 96;
  $dvt$$9$$.$KeyboardEvent$.ONE = 49;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_ONE$ = 97;
  $dvt$$9$$.$KeyboardEvent$.$TWO$ = 50;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_TWO$ = 98;
  $dvt$$9$$.$KeyboardEvent$.$THREE$ = 51;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_THREE$ = 99;
  $dvt$$9$$.$KeyboardEvent$.$FOUR$ = 52;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_FOUR$ = 100;
  $dvt$$9$$.$KeyboardEvent$.$FIVE$ = 53;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_FIVE$ = 101;
  $dvt$$9$$.$KeyboardEvent$.$SIX$ = 54;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_PLUS$ = 107;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_MINUS$ = 109;
  $dvt$$9$$.$KeyboardEvent$.$WEBKIT_PLUS$ = 187;
  $dvt$$9$$.$KeyboardEvent$.$WEBKIT_MINUS$ = 189;
  $dvt$$9$$.$KeyboardEvent$.$GECKO_PLUS$ = 61;
  $dvt$$9$$.$KeyboardEvent$.$GECKO_MINUS$ = 173;
  $dvt$$9$$.$KeyboardEvent$.$WEBKIT_SEMICOLON$ = 186;
  $dvt$$9$$.$KeyboardEvent$.$GECKO_SEMICOLON$ = 59;
  $dvt$$9$$.$KeyboardEvent$.$A$ = 65;
  $dvt$$9$$.$KeyboardEvent$.$F$ = 70;
  $dvt$$9$$.$KeyboardEvent$.$L$ = 76;
  $dvt$$9$$.$KeyboardEvent$.$M$ = 77;
  $dvt$$9$$.$KeyboardEvent$.$N$ = 78;
  $dvt$$9$$.$KeyboardEvent$.$PERIOD$ = 190;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_PERIOD$ = 110;
  $dvt$$9$$.$KeyboardEvent$.$SINGLE_QUOTE$ = 222;
  $dvt$$9$$.$KeyboardEvent$.$STAR$ = 56;
  $dvt$$9$$.$KeyboardEvent$.$NUMPAD_STAR$ = 144;
  $dvt$$9$$.$KeyboardEvent$.$OPEN_ANGLED_BRACKET$ = 188;
  $dvt$$9$$.$KeyboardEvent$.$CLOSE_ANGLED_BRACKET$ = 190;
  $dvt$$9$$.$KeyboardEvent$.$GRAVE_ACCENT$ = 192;
  $dvt$$9$$.$KeyboardEvent$.prototype.Init = function $$dvt$$9$$$$KeyboardEvent$$$Init$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$KeyboardEvent$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.bubbles = $DvtSvgShadowUtils$$.bubbles;
    this.cancelable = $DvtSvgShadowUtils$$.cancelable;
    this.view = $DvtSvgShadowUtils$$.view;
    this.charCode = $DvtSvgShadowUtils$$.charCode;
    this.keyCode = $DvtSvgShadowUtils$$.keyCode;
    this.location = $DvtSvgShadowUtils$$.location;
    this.ctrlKey = $DvtSvgShadowUtils$$.ctrlKey || $DvtSvgShadowUtils$$.metaKey;
    this.altKey = $DvtSvgShadowUtils$$.altKey;
    this.shiftKey = $DvtSvgShadowUtils$$.shiftKey;
    this.repeat = $DvtSvgShadowUtils$$.repeat;
    this.locale = $DvtSvgShadowUtils$$.locale
  };
  $dvt$$9$$.$KeyboardEvent$.$isPlus$ = function $$dvt$$9$$$$KeyboardEvent$$$isPlus$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    return $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$NUMPAD_PLUS$ ? $JSCompiler_alias_TRUE$$ : $dvt$$9$$.$Agent$.$isPlatformGecko$() ? $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$GECKO_PLUS$ && $DvtSvgShadowUtils$$.shiftKey ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$ : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$WEBKIT_PLUS$ && $DvtSvgShadowUtils$$.shiftKey ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$KeyboardEvent$.$isEquals$ = function $$dvt$$9$$$$KeyboardEvent$$$isEquals$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    return $dvt$$9$$.$Agent$.$isPlatformGecko$() ? $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$GECKO_PLUS$ && !$DvtSvgShadowUtils$$.shiftKey ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$ : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$WEBKIT_PLUS$ && !$DvtSvgShadowUtils$$.shiftKey ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$KeyboardEvent$.$isMinus$ = function $$dvt$$9$$$$KeyboardEvent$$$isMinus$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    return $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$NUMPAD_MINUS$ ? $JSCompiler_alias_TRUE$$ : $dvt$$9$$.$Agent$.$isPlatformGecko$() ? $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$GECKO_MINUS$ && !$DvtSvgShadowUtils$$.shiftKey ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$ : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$WEBKIT_MINUS$ && !$DvtSvgShadowUtils$$.shiftKey ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$KeyboardEvent$.$isUnderscore$ = function $$dvt$$9$$$$KeyboardEvent$$$isUnderscore$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    return $dvt$$9$$.$Agent$.$isPlatformGecko$() ? $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$GECKO_MINUS$ && $DvtSvgShadowUtils$$.shiftKey ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$ : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$WEBKIT_MINUS$ && $DvtSvgShadowUtils$$.shiftKey ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$KeyboardEvent$.$isSemicolon$ = function $$dvt$$9$$$$KeyboardEvent$$$isSemicolon$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    return $dvt$$9$$.$Agent$.$isPlatformGecko$() ? $DvtSvgShadowUtils$$ == $dvt$$9$$.$KeyboardEvent$.$GECKO_SEMICOLON$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$KeyboardEvent$.$WEBKIT_SEMICOLON$
  };
  $dvt$$9$$.$MouseEvent$ = function $$dvt$$9$$$$MouseEvent$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$MouseEvent$, $dvt$$9$$.$BaseEvent$);
  $dvt$$9$$.$MouseEvent$.$CLICK$ = $dvt$$9$$.$Obj$.$defineConstant$("click");
  $dvt$$9$$.$MouseEvent$.$DBLCLICK$ = $dvt$$9$$.$Obj$.$defineConstant$("dblclick");
  $dvt$$9$$.$MouseEvent$.$MOUSEOVER$ = $dvt$$9$$.$Obj$.$defineConstant$("mouseover");
  $dvt$$9$$.$MouseEvent$.$MOUSEOUT$ = $dvt$$9$$.$Obj$.$defineConstant$("mouseout");
  $dvt$$9$$.$MouseEvent$.$MOUSEDOWN$ = $dvt$$9$$.$Obj$.$defineConstant$("mousedown");
  $dvt$$9$$.$MouseEvent$.$MOUSEUP$ = $dvt$$9$$.$Obj$.$defineConstant$("mouseup");
  $dvt$$9$$.$MouseEvent$.$MOUSEMOVE$ = $dvt$$9$$.$Obj$.$defineConstant$("mousemove");
  $dvt$$9$$.$MouseEvent$.$MOUSEWHEEL$ = $dvt$$9$$.$Obj$.$defineConstant$("wheel");
  $dvt$$9$$.$MouseEvent$.$RIGHT_CLICK_BUTTON$ = 2;
  $dvt$$9$$.$MouseEvent$.prototype.Init = function $$dvt$$9$$$$MouseEvent$$$Init$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$MouseEvent$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.relatedTarget != $JSCompiler_alias_NULL$$ && (this.relatedTarget = $dvt$$9$$.$BaseEvent$.$FindDisplayable$($DvtSvgShadowUtils$$.relatedTarget));
    this.button = $DvtSvgShadowUtils$$.button;
    this.ctrlKey = $DvtSvgShadowUtils$$.ctrlKey || $DvtSvgShadowUtils$$.metaKey;
    this.shiftKey = $DvtSvgShadowUtils$$.shiftKey;
    this.pageX = $DvtSvgShadowUtils$$.pageX;
    this.pageY = $DvtSvgShadowUtils$$.pageY;
    this.$_isEventModifiedForIE$ = $JSCompiler_alias_FALSE$$;
    $DvtSvgShadowUtils$$.wheelDeltaY != $JSCompiler_alias_NULL$$ ? this.wheelDelta = $DvtSvgShadowUtils$$.wheelDeltaY / 40 : $DvtSvgShadowUtils$$.deltaY != $JSCompiler_alias_NULL$$ ? (this.deltaMode = $DvtSvgShadowUtils$$.deltaMode, this.deltaY = $DvtSvgShadowUtils$$.deltaY, $DvtSvgShadowUtils$$.deltaMode == $DvtSvgShadowUtils$$.DOM_DELTA_LINE ? this.wheelDelta = -$DvtSvgShadowUtils$$.deltaY : $DvtSvgShadowUtils$$.deltaMode == $DvtSvgShadowUtils$$.DOM_DELTA_PIXEL && (this.wheelDelta = -$DvtSvgShadowUtils$$.deltaY / 
    15)) : this.wheelDelta = $DvtSvgShadowUtils$$.wheelDelta != $JSCompiler_alias_NULL$$ ? $DvtSvgShadowUtils$$.wheelDelta / 40 : $DvtSvgShadowUtils$$.detail
  };
  $dvt$$9$$.$MouseEvent$.prototype.$modifyEventForIE$ = function $$dvt$$9$$$$MouseEvent$$$$modifyEventForIE$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_isEventModifiedForIE$ || (this.type = $DvtSvgShadowUtils$$, this.relatedTarget = this.target, this.target = $dvt$$9$$.$BaseEvent$.$FindDisplayable$($DvtSvgPatternFillUtils$$), this.$_isEventModifiedForIE$ = $JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$TouchEvent$ = function $$dvt$$9$$$$TouchEvent$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$TouchEvent$, $dvt$$9$$.$BaseEvent$);
  $dvt$$9$$.$TouchEvent$.$TOUCHSTART$ = $dvt$$9$$.$Obj$.$defineConstant$("touchstart");
  $dvt$$9$$.$TouchEvent$.$TOUCHMOVE$ = $dvt$$9$$.$Obj$.$defineConstant$("touchmove");
  $dvt$$9$$.$TouchEvent$.$TOUCHEND$ = $dvt$$9$$.$Obj$.$defineConstant$("touchend");
  $dvt$$9$$.$TouchEvent$.$TOUCHCANCEL$ = $dvt$$9$$.$Obj$.$defineConstant$("touchcancel");
  $dvt$$9$$.$TouchEvent$.prototype.Init = function $$dvt$$9$$$$TouchEvent$$$Init$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$TouchEvent$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.type == $dvt$$9$$.$TouchEvent$.$TOUCHCANCEL$ && (this.type = $dvt$$9$$.$TouchEvent$.$TOUCHEND$);
    this.touches = $dvt$$9$$.$TouchEvent$.$createTouchArray$($DvtSvgShadowUtils$$.touches);
    this.targetTouches = $dvt$$9$$.$TouchEvent$.$createTouchArray$($DvtSvgShadowUtils$$.targetTouches);
    this.changedTouches = $dvt$$9$$.$TouchEvent$.$createTouchArray$($DvtSvgShadowUtils$$.changedTouches);
    this.$_touchManager$ = $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$TouchEvent$.prototype.$blockTouchHold$ = function $$dvt$$9$$$$TouchEvent$$$$blockTouchHold$$() {
    this.$getNativeEvent$().$_touchHoldBlocked$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$TouchEvent$.prototype.$isInitialTouch$ = function $$dvt$$9$$$$TouchEvent$$$$isInitialTouch$$() {
    return 0 == this.touches.length - this.changedTouches.length
  };
  $dvt$$9$$.$TouchEvent$.prototype.$isTouchHoldBlocked$ = function $$dvt$$9$$$$TouchEvent$$$$isTouchHoldBlocked$$() {
    return this.$getNativeEvent$().$_touchHoldBlocked$ ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$TouchEvent$.$createTouchArray$ = function $$dvt$$9$$$$TouchEvent$$$createTouchArray$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Touch$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]);
      $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$TouchEvent$.prototype.stopPropagation = function $$dvt$$9$$$$TouchEvent$$$stopPropagation$() {
    $dvt$$9$$.$TouchEvent$.$superclass$.stopPropagation.call(this);
    this.$_touchManager$ && this.$_touchManager$.$postEventBubble$(this)
  };
  $dvt$$9$$.$TouchEvent$.prototype.$setTouchManager$ = $JSCompiler_set$$("$_touchManager$");
  $dvt$$9$$.$Touch$ = function $$dvt$$9$$$$Touch$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Touch$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Touch$.prototype.Init = function $$dvt$$9$$$$Touch$$$Init$($DvtSvgShadowUtils$$) {
    this.clientX = $DvtSvgShadowUtils$$.clientX;
    this.clientY = $DvtSvgShadowUtils$$.clientY;
    this.screenX = $DvtSvgShadowUtils$$.screenX;
    this.screenY = $DvtSvgShadowUtils$$.screenY;
    this.pageX = $DvtSvgShadowUtils$$.pageX;
    this.pageY = $DvtSvgShadowUtils$$.pageY;
    this.target = $DvtSvgShadowUtils$$.target;
    this.identifier = $DvtSvgShadowUtils$$.identifier == $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$.identifier) ? 1 : $DvtSvgShadowUtils$$.identifier
  };
  $dvt$$9$$.$TouchManager$ = function $$dvt$$9$$$$TouchManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$TouchManager$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$TouchManager$.$TOUCH_MODE$ = "mode";
  $dvt$$9$$.$TouchManager$.$TOUCH_MODE_DEFAULT$ = "defaultMode";
  $dvt$$9$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$ = "longPressMode";
  $dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$ = "prevHoverObj";
  $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$ = "hoverTouch";
  $dvt$$9$$.$TouchManager$.prototype.Init = function $$dvt$$9$$$$TouchManager$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgPatternFillUtils$$;
    this.$_id$ = $DvtSvgShadowUtils$$;
    this.$_touchCount$ = 0;
    this.$_touchHoldTimer$ = new $dvt$$9$$.$Timer$(this.$_context$, 200, this.$_handleTouchHoldStartTimer$, this);
    this.$_blockTouchHold$ = $JSCompiler_alias_FALSE$$;
    this.$_touchMap$ = {};
    this.$_savedTouchInfo$ = [];
    this.$_addTouchHoldMoveEventListener$(this.$_onTouchHoldHover$, this);
    this.$_doubleTapTimer$ = new $dvt$$9$$.$Timer$(this.$_context$, 600, this.$_handleDoubleTapTimer$, this, 1);
    this.$_dvtTouchEvent$ = $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$blockTouchHold$ = function $$dvt$$9$$$$TouchManager$$$$blockTouchHold$$() {
    this.$_stopTouchHoldTimer$();
    this.$_blockTouchHold$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$unblockTouchHold$ = function $$dvt$$9$$$$TouchManager$$$$unblockTouchHold$$() {
    this.$_blockTouchHold$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$_addTouchHoldMoveEventListener$ = function $$dvt$$9$$$$TouchManager$$$$_addTouchHoldMoveEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_START_TYPE$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    this.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_MOVE_TYPE$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    this.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_END_TYPE$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$TouchManager$.prototype.$_onTouchHoldHover$ = function $$dvt$$9$$$$TouchManager$$$$_onTouchHoldHover$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getType$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$touch$, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$(), $DvtSvgFilterUtils$$ = this.$_touchMap$[$DvtSvgImageFillUtils$$.identifier];
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.target;
    $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_END_TYPE$ ? ($DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$.$_isCancelEvent$ = this.$_isCancelEvent$, $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && this.$FireListener$(new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, 
    $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$)), $DvtSvgFilterUtils$$[$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$] = $JSCompiler_alias_NULL$$, this.$FireListener$($DvtSvgPatternFillUtils$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_START_TYPE$ ? ($DvtSvgFilterUtils$$[$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$] = $JSCompiler_alias_NULL$$, $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && this.$FireListener$(new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, 
    $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$)), $DvtSvgFilterUtils$$[$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$] = $DvtSvgShadowUtils$$, this.$FireListener$(new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$))) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_MOVE_TYPE$ && (this.$_fireHoverOverOutEvents$($DvtSvgShadowUtils$$, 
    $DvtSvgFilterUtils$$[$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$], $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$[$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$] = $DvtSvgShadowUtils$$, this.$FireListener$(new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$)))
  };
  $dvt$$9$$.$TouchManager$.prototype.$_getObjFromTouch$ = function $$dvt$$9$$$$TouchManager$$$$_getObjFromTouch$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_NULL$$;
    if($DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = this.$_context$.$getDocumentUtils$();
      $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$.$elementFromTouch$($DvtSvgShadowUtils$$))
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$_fireHoverOverOutEvents$ = function $$dvt$$9$$$$TouchManager$$$$_fireHoverOverOutEvents$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgPatternFillUtils$$ != $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ && this.$FireListener$(new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$)), $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && this.$FireListener$(new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, $DvtSvgImageFillUtils$$, 
    $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$)))
  };
  $dvt$$9$$.$TouchManager$.prototype.$addTouchEventListener$ = function $$dvt$$9$$$$TouchManager$$$$addTouchEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$);
    $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$.push($DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$TouchManager$.prototype.$removeTouchEventListener$ = function $$dvt$$9$$$$TouchManager$$$$removeTouchEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, $JSCompiler_alias_FALSE$$)) {
      for(var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$ += 2) {
        if($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$] === $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$ + 1] === $DvtSvgImageFillUtils$$) {
          $DvtSvgShadowUtils$$.splice($DvtSvgGradientUtils$$, 2);
          break
        }
      }
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$_getListeners$ = function $$dvt$$9$$$$TouchManager$$$$_getListeners$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_listenerObj$) {
      if($DvtSvgPatternFillUtils$$) {
        this.$_listenerObj$ = {}
      }else {
        return $JSCompiler_alias_NULL$$
      }
    }
    var $DvtSvgImageFillUtils$$ = this.$_listenerObj$[$DvtSvgShadowUtils$$];
    !$DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ = [], this.$_listenerObj$[$DvtSvgShadowUtils$$] = $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$FireListener$ = function $$dvt$$9$$$$TouchManager$$$$FireListener$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$.$getType$(), $JSCompiler_alias_FALSE$$);
    if($DvtSvgPatternFillUtils$$) {
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$ += 2) {
        $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].call($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$ + 1], $DvtSvgShadowUtils$$)
      }
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$startTouchHold$ = function $$dvt$$9$$$$TouchManager$$$$startTouchHold$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_startSingleFingerTouchId$;
    if($DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ && !isNaN($DvtSvgPatternFillUtils$$)) {
      var $DvtSvgImageFillUtils$$ = this.$_touchMap$[$DvtSvgPatternFillUtils$$];
      if($DvtSvgImageFillUtils$$) {
        var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.startTarget, $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.startTouch;
        $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
        for(var $DvtSvgFilterContext$$ = this.$_findMatches$("touchId", $DvtSvgPatternFillUtils$$), $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgFilterContext$$.length;$DvtSvgImplFactory$$++) {
          var $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$[$DvtSvgImplFactory$$], $DvtDomXmlParser$$ = $DvtHtmlRichTooltipManager$$.touchObj, $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.touchId;
          $DvtDomXmlParser$$ != $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$ && this.$performAssociatedTouchEnd$(this.$getTouchInfo$($DvtHtmlRichTooltipManager$$).startTouch, $DvtDomXmlParser$$, $JSCompiler_alias_NULL$$)
        }
        $DvtSvgImageFillUtils$$[$dvt$$9$$.$TouchManager$.$TOUCH_MODE$] = $dvt$$9$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$;
        this.$saveProcessedTouch$($DvtSvgPatternFillUtils$$, $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$, $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$, $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$, this.$HoverMoveInternal$, this.$HoverEndInternal$, this);
        $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_START_TYPE$, $DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgShadowUtils$$);
        this.$FireListener$($DvtSvgPatternFillUtils$$)
      }
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$fireLogicalEvents$ = function $$dvt$$9$$$$TouchManager$$$$fireLogicalEvents$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.type, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
    $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHSTART$ ? ($DvtSvgShadowUtils$$.$isTouchHoldBlocked$() || this.$processAssociatedTouchAttempt$($DvtSvgShadowUtils$$, this.$HoverStartInternal$, this), this.$_doubleTapAttemptStarted$ && $DvtSvgShadowUtils$$.preventDefault()) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHMOVE$ ? this.$processAssociatedTouchMove$($DvtSvgShadowUtils$$, $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHEND$ && 
    this.$processAssociatedTouchEnd$($DvtSvgShadowUtils$$, $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$);
    if($DvtSvgPatternFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHEND$) {
      for(var $DvtSvgPatternFillUtils$$ = this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$], $DvtSvgFilterContext$$ = this.$getTouchInfo$($DvtSvgFilterUtils$$.identifier), $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$.currentObj;
        $DvtSvgFilterContext$$[$dvt$$9$$.$TouchManager$.$TOUCH_MODE$] != $dvt$$9$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$ && $DvtSvgFilterContext$$.fireClick && ($DvtSvgFilterContext$$ = new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$, $DvtSvgFilterUtils$$, $DvtSvgImplFactory$$, $JSCompiler_alias_NULL$$, $DvtSvgImageFillUtils$$), $DvtSvgFilterContext$$.$touchEvent$ = $DvtSvgShadowUtils$$, this.$FireListener$($DvtSvgFilterContext$$), this.$_doubleTapAttemptStarted$ ? 
        ($DvtSvgFilterContext$$ = this.$_doubleTapAttemptObj$, this.$resetDoubleTap$(), $DvtSvgImplFactory$$ == $DvtSvgFilterContext$$ && ($DvtSvgFilterUtils$$ = new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$, $DvtSvgFilterUtils$$, $DvtSvgImplFactory$$, $JSCompiler_alias_NULL$$, $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$.$touchEvent$ = $DvtSvgShadowUtils$$, this.$FireListener$($DvtSvgFilterUtils$$))) : (this.$resetDoubleTap$(), this.$_doubleTapTimer$.start(), 
        this.$_doubleTapAttemptStarted$ = $JSCompiler_alias_TRUE$$, this.$_doubleTapAttemptObj$ = $DvtSvgImplFactory$$))
      }
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$getTouchInfo$ = function $$dvt$$9$$$$TouchManager$$$$getTouchInfo$$($DvtSvgShadowUtils$$) {
    return this.$_touchMap$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$TouchManager$.prototype.$HoverStartInternal$ = function $$dvt$$9$$$$TouchManager$$$$HoverStartInternal$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_blockTouchHold$ || (this.$_startSingleFingerTouchId$ = $DvtSvgPatternFillUtils$$.identifier, this.$_stopTouchHoldTimer$(), this.$_startTouchHoldTimer$($DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$TouchManager$.prototype.$HoverMoveInternal$ = function $$dvt$$9$$$$TouchManager$$$$HoverMoveInternal$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_MOVE_TYPE$, $DvtSvgPatternFillUtils$$, this.$getTouchInfo$($DvtSvgPatternFillUtils$$.identifier).currentObj, $JSCompiler_alias_NULL$$, $DvtSvgShadowUtils$$.$getNativeEvent$());
    this.$FireListener$($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$.preventDefault()
  };
  $dvt$$9$$.$TouchManager$.prototype.$HoverEndInternal$ = function $$dvt$$9$$$$TouchManager$$$$HoverEndInternal$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$ComponentTouchEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_END_TYPE$, $DvtSvgPatternFillUtils$$, this.$getTouchInfo$($DvtSvgPatternFillUtils$$.identifier).currentObj, $JSCompiler_alias_NULL$$, $DvtSvgShadowUtils$$.$getNativeEvent$());
    this.$FireListener$($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.preventDefault()
  };
  $dvt$$9$$.$TouchManager$.prototype.$resetTouchHold$ = function $$dvt$$9$$$$TouchManager$$$$resetTouchHold$$() {
    this.$_startSingleFingerTouchId$ = $JSCompiler_alias_NULL$$;
    this.$_stopTouchHoldTimer$()
  };
  $dvt$$9$$.$TouchManager$.prototype.$preEventBubble$ = function $$dvt$$9$$$$TouchManager$$$$preEventBubble$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$setTouchManager$ && $DvtSvgShadowUtils$$.$setTouchManager$(this);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.type;
    $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHSTART$ ? this.$processTouchStart$($DvtSvgShadowUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHMOVE$ ? this.$processTouchMove$($DvtSvgShadowUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHEND$ && this.$processTouchEnd$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$TouchManager$.prototype.$postEventBubble$ = function $$dvt$$9$$$$TouchManager$$$$postEventBubble$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.type;
    if($DvtSvgPatternFillUtils$$ != $dvt$$9$$.$TouchEvent$.$TOUCHSTART$ && $DvtSvgPatternFillUtils$$ != $dvt$$9$$.$TouchEvent$.$TOUCHMOVE$ && $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHEND$) {
      $DvtSvgShadowUtils$$ = this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches);
      for($DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$].identifier;
        delete this.$_touchMap$[$DvtSvgImageFillUtils$$];
        this.$_startSingleFingerTouchId$ == $DvtSvgImageFillUtils$$ && (this.$_startSingleFingerTouchId$ = $JSCompiler_alias_NULL$$);
        for(var $DvtSvgImageFillUtils$$ = this.$_findMatches$("touchId", $DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
          var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
          this.$removeTooltipInfo$($DvtSvgFilterUtils$$.touchId, $DvtSvgFilterUtils$$.touchObj)
        }
      }
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$saveProcessedTouch$ = function $$dvt$$9$$$$TouchManager$$$$saveProcessedTouch$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && !isNaN($DvtSvgShadowUtils$$) && this.$_savedTouchInfo$.push($dvt$$9$$.$TouchManager$.$createSavedTouchInfo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$))
  };
  $dvt$$9$$.$TouchManager$.prototype.$processAssociatedTouch$ = function $$dvt$$9$$$$TouchManager$$$$processAssociatedTouch$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.type;
    $DvtSvgFilterUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHSTART$ ? this.$processAssociatedTouchAttempt$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $DvtSvgFilterUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHMOVE$ ? this.$processAssociatedTouchMove$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) : $DvtSvgFilterUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHEND$ && this.$processAssociatedTouchEnd$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$TouchManager$.prototype.$processAssociatedTouchDefault$ = function $$dvt$$9$$$$TouchManager$$$$processAssociatedTouchDefault$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$processAssociatedTouch$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$.immediateTouchAttempted, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$TouchManager$.prototype.$cancelTouchHold$ = function $$dvt$$9$$$$TouchManager$$$$cancelTouchHold$$() {
    for(var $DvtSvgShadowUtils$$ = $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$, $DvtSvgPatternFillUtils$$ = this.$getTouchIdsForObj$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgFilterUtils$$ = this.$getTouchInfo$($DvtSvgGradientUtils$$).startTouch;
      $DvtSvgFilterUtils$$ && (this.$_isCancelEvent$ = $JSCompiler_alias_TRUE$$, this.$performAssociatedTouchEnd$($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$), this.$_isCancelEvent$ = $JSCompiler_alias_FALSE$$, delete this.$_touchMap$[$DvtSvgGradientUtils$$])
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$performAssociatedTouchEnd$ = function $$dvt$$9$$$$TouchManager$$$$performAssociatedTouchEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.identifier, $DvtSvgFilterUtils$$ = this.$getSavedTouchInfo$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
    if($DvtSvgFilterUtils$$) {
      var $dvt$$9$$ = $DvtSvgFilterUtils$$.listenerObj, $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.endListener;
      this.$removeTooltipInfo$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
      $DvtSvgFilterContext$$ && $DvtSvgFilterContext$$.call($dvt$$9$$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$)
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$processAssociatedTouchAttempt$ = function $$dvt$$9$$$$TouchManager$$$$processAssociatedTouchAttempt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for(var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.changedTouches, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$.length;$DvtSvgFilterUtils$$++) {
      var $dvt$$9$$ = $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$];
      $dvt$$9$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $dvt$$9$$)
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$processAssociatedTouchMove$ = function $$dvt$$9$$$$TouchManager$$$$processAssociatedTouchMove$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = this.$getTouchIdsForObj$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
      if($DvtSvgFilterUtils$$ != $JSCompiler_alias_NULL$$ && !isNaN($DvtSvgFilterUtils$$) && ($DvtSvgFilterUtils$$ = $dvt$$9$$.$TouchManager$.$getTouchById$($DvtSvgFilterUtils$$, this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches)))) {
        var $DvtSvgFilterContext$$ = this.$getSavedTouchInfo$($DvtSvgFilterUtils$$.identifier, $DvtSvgPatternFillUtils$$);
        if($DvtSvgFilterContext$$) {
          var $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$.listenerObj;
          ($DvtSvgFilterContext$$ = $DvtSvgFilterContext$$.moveListener) && $DvtSvgFilterContext$$.call($DvtSvgImplFactory$$, $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$)
        }
      }
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$processAssociatedTouchEnd$ = function $$dvt$$9$$$$TouchManager$$$$processAssociatedTouchEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = this.$getTouchIdsForObj$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $dvt$$9$$.$TouchManager$.$getTouchById$($DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$], this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches));
      $DvtSvgFilterUtils$$ && this.$performAssociatedTouchEnd$($DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$_findMatches$ = function $$dvt$$9$$$$TouchManager$$$$_findMatches$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = [], $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < this.$_savedTouchInfo$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = this.$_savedTouchInfo$[$DvtSvgGradientUtils$$];
      $DvtSvgFilterUtils$$[$DvtSvgShadowUtils$$] == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.push($DvtSvgFilterUtils$$)
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$getSavedTouchInfo$ = function $$dvt$$9$$$$TouchManager$$$$getSavedTouchInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = this.$_findMatches$("touchId", $DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
      if($DvtSvgFilterUtils$$.touchObj == $DvtSvgPatternFillUtils$$) {
        return $DvtSvgFilterUtils$$
      }
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$getTouchIdsForObj$ = function $$dvt$$9$$$$TouchManager$$$$getTouchIdsForObj$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = [];
    $DvtSvgShadowUtils$$ = this.$_findMatches$("touchObj", $DvtSvgShadowUtils$$);
    for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$].touchId)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$removeTooltipInfo$ = function $$dvt$$9$$$$TouchManager$$$$removeTooltipInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = this.$_findMatches$("touchId", $DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgFilterUtils$$++) {
      var $dvt$$9$$ = $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$];
      $dvt$$9$$.touchObj == $DvtSvgPatternFillUtils$$ && $DvtSvgGradientUtils$$.push($dvt$$9$$)
    }
    for($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$.length;$DvtSvgFilterUtils$$++) {
      for(var $DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$], $DvtSvgFilterContext$$ = -1, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < this.$_savedTouchInfo$.length;$DvtSvgImplFactory$$++) {
        $dvt$$9$$ = this.$_savedTouchInfo$[$DvtSvgImplFactory$$], $dvt$$9$$ == $DvtSvgImageFillUtils$$ && ($DvtSvgFilterContext$$ = $DvtSvgImplFactory$$)
      }
      -1 != $DvtSvgFilterContext$$ && (this.$_savedTouchInfo$.splice($DvtSvgFilterContext$$, 1), 0 == this.$_savedTouchInfo$.length && this.$_context$.$getTooltipManager$().$hideTooltip$())
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$setTooltipEnabled$ = function $$dvt$$9$$$$TouchManager$$$$setTooltipEnabled$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = this.$_savedTouchInfo$, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
      $DvtSvgFilterUtils$$.touchId == $DvtSvgShadowUtils$$ && ($DvtSvgFilterUtils$$.allowTooltips = $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$getTooltipInfo$ = function $$dvt$$9$$$$TouchManager$$$$getTooltipInfo$$() {
    for(var $DvtSvgShadowUtils$$ = {}, $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgFilterUtils$$ = $JSCompiler_alias_FALSE$$, $dvt$$9$$ = this.$_findMatches$("allowTooltips", $JSCompiler_alias_TRUE$$), $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $dvt$$9$$.length;$DvtSvgFilterContext$$++) {
      var $DvtSvgImageFillUtils$$ = $dvt$$9$$[$DvtSvgFilterContext$$], $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$.touchId;
      $DvtSvgGradientUtils$$ ? $DvtSvgImageFillUtils$$.grouping != $DvtSvgGradientUtils$$ && ($DvtSvgFilterUtils$$ = $JSCompiler_alias_TRUE$$) : $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.grouping;
      var $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$ = this.$_touchMap$[$DvtSvgImplFactory$$];
      $DvtDomXmlParser$$ && ($DvtHtmlRichTooltipManager$$ = $DvtDomXmlParser$$.currentObj);
      $DvtSvgImageFillUtils$$.tooltipObjOverride && ($DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$.tooltipObjOverride);
      $DvtSvgPatternFillUtils$$.push($DvtSvgImplFactory$$);
      $DvtSvgImageFillUtils$$ = $DvtHtmlRichTooltipManager$$
    }
    $DvtSvgFilterUtils$$ && ($DvtSvgPatternFillUtils$$ = []);
    $DvtSvgShadowUtils$$.touchIds = $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$.tooltipTarget = $DvtSvgImageFillUtils$$;
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$processTouchStart$ = function $$dvt$$9$$$$TouchManager$$$$processTouchStart$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.changedTouches;
    this.$_touchCount$ = $DvtSvgShadowUtils$$.touches.length;
    for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.screenX, $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$.screenY, $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$.identifier, $DvtHtmlRichTooltipManager$$ = this.$_getObjFromTouch$($DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ = {x:$DvtSvgFilterUtils$$, y:$DvtSvgFilterContext$$, prevX:$DvtSvgFilterUtils$$, prevY:$DvtSvgFilterContext$$, pageX:$DvtSvgGradientUtils$$.pageX, 
      pageY:$DvtSvgGradientUtils$$.pageY, prevPageX:$DvtSvgGradientUtils$$.pageX, prevPageY:$DvtSvgGradientUtils$$.pageY, dx:0, dy:0, fireClick:$JSCompiler_alias_TRUE$$, startTarget:$DvtHtmlRichTooltipManager$$, currentObj:$DvtHtmlRichTooltipManager$$, touchMoved:$JSCompiler_alias_FALSE$$, touchtype:$JSCompiler_alias_NULL$$, startTouch:$DvtSvgGradientUtils$$};
      $DvtSvgGradientUtils$$[$dvt$$9$$.$TouchManager$.$TOUCH_MODE$] = $dvt$$9$$.$TouchManager$.$TOUCH_MODE_DEFAULT$;
      $DvtSvgGradientUtils$$.origx = $DvtSvgFilterUtils$$;
      $DvtSvgGradientUtils$$.origy = $DvtSvgFilterContext$$;
      this.$_touchMap$[$DvtSvgImplFactory$$] = $DvtSvgGradientUtils$$
    }
    (this.$_isHovering$() || !this.$_isTouchHoldAllowed$()) && $DvtSvgShadowUtils$$.$blockTouchHold$()
  };
  $dvt$$9$$.$TouchManager$.prototype.$_isTouchHoldAllowed$ = function $$dvt$$9$$$$TouchManager$$$$_isTouchHoldAllowed$$() {
    var $DvtSvgShadowUtils$$ = $JSCompiler_alias_FALSE$$, $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$;
    for($DvtSvgImageFillUtils$$ in this.$_touchMap$) {
      this.$getTouchInfo$($DvtSvgImageFillUtils$$).touchMoved && ($DvtSvgShadowUtils$$ = $JSCompiler_alias_TRUE$$), $DvtSvgPatternFillUtils$$++
    }
    return 1 < $DvtSvgPatternFillUtils$$ && !$DvtSvgShadowUtils$$ ? (this.$resetTouchHold$(), $JSCompiler_alias_FALSE$$) : $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$_isHovering$ = function $$dvt$$9$$$$TouchManager$$$$_isHovering$$() {
    for(var $DvtSvgShadowUtils$$ in this.$_touchMap$) {
      if(this.$getTouchInfo$($DvtSvgShadowUtils$$)[$dvt$$9$$.$TouchManager$.$TOUCH_MODE$] == $dvt$$9$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$) {
        return $JSCompiler_alias_TRUE$$
      }
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$_getStoredTouches$ = function $$dvt$$9$$$$TouchManager$$$$_getStoredTouches$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
      this.$getTouchInfo$($DvtSvgGradientUtils$$.identifier) && $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$processTouchMove$ = function $$dvt$$9$$$$TouchManager$$$$processTouchMove$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches);
    $DvtSvgShadowUtils$$ = this.$_getStoredTouches$($DvtSvgShadowUtils$$.touches);
    for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgFilterUtils$$ = this.$_getObjFromTouch$($DvtSvgGradientUtils$$), $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$.identifier, $DvtSvgImplFactory$$ = this.$getTouchInfo$($DvtSvgFilterContext$$);
      $DvtSvgImplFactory$$.currentObj = $DvtSvgFilterUtils$$;
      $DvtSvgImplFactory$$.touchMoved = $JSCompiler_alias_TRUE$$;
      $DvtSvgImplFactory$$[$dvt$$9$$.$TouchManager$.$TOUCH_MODE$] != $dvt$$9$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$ && ($DvtSvgFilterUtils$$ = Math.abs($DvtSvgImplFactory$$.pageX - $DvtSvgGradientUtils$$.pageX), $DvtSvgGradientUtils$$ = Math.abs($DvtSvgImplFactory$$.pageY - $DvtSvgGradientUtils$$.pageY), this.$_startSingleFingerTouchId$ == $DvtSvgFilterContext$$ && (0 < $DvtSvgFilterUtils$$ || 0 < $DvtSvgGradientUtils$$) && this.$resetTouchHold$(), $DvtSvgImplFactory$$.touchMoved = 3 < $DvtSvgFilterUtils$$ || 
      3 < $DvtSvgGradientUtils$$);
      $DvtSvgImplFactory$$.fireClick && $DvtSvgImplFactory$$[$dvt$$9$$.$TouchManager$.$TOUCH_MODE$] != $dvt$$9$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$ && $DvtSvgImplFactory$$.currentObj != $DvtSvgImplFactory$$.startTarget && ($DvtSvgImplFactory$$.fireClick = $JSCompiler_alias_FALSE$$)
    }
    for($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgImplFactory$$ = this.$getTouchInfo$($DvtSvgGradientUtils$$.identifier), $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.screenX, $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$.screenY, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$ - $DvtSvgImplFactory$$.x, $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$ - $DvtSvgImplFactory$$.y;
      $DvtSvgImplFactory$$.prevX = $DvtSvgImplFactory$$.x;
      $DvtSvgImplFactory$$.prevY = $DvtSvgImplFactory$$.y;
      $DvtSvgImplFactory$$.dx = $DvtSvgFilterUtils$$;
      $DvtSvgImplFactory$$.dy = $DvtHtmlRichTooltipManager$$;
      $DvtSvgImplFactory$$.x = $DvtSvgPatternFillUtils$$;
      $DvtSvgImplFactory$$.y = $DvtSvgFilterContext$$;
      $DvtSvgImplFactory$$.prevPageX = $DvtSvgImplFactory$$.pageX;
      $DvtSvgImplFactory$$.prevPageY = $DvtSvgImplFactory$$.pageY;
      $DvtSvgImplFactory$$.pageX = $DvtSvgGradientUtils$$.pageX;
      $DvtSvgImplFactory$$.pageY = $DvtSvgGradientUtils$$.pageY
    }
  };
  $dvt$$9$$.$TouchManager$.prototype.$processTouchEnd$ = function $$dvt$$9$$$$TouchManager$$$$processTouchEnd$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.changedTouches;
    this.$_touchCount$ = $DvtSvgShadowUtils$$.touches.length;
    for($DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgShadowUtils$$++) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$ = this.$_getObjFromTouch$($DvtSvgImageFillUtils$$);
      if(($DvtSvgImageFillUtils$$ = this.$getTouchInfo$($DvtSvgImageFillUtils$$.identifier)) && $DvtSvgImageFillUtils$$.fireClick) {
        if($DvtSvgImageFillUtils$$[$dvt$$9$$.$TouchManager$.$TOUCH_MODE$] == $dvt$$9$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$) {
          this.$_startSingleFingerTouchId$ = $JSCompiler_alias_NULL$$
        }else {
          var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.touchMoved;
          $DvtSvgImageFillUtils$$.fireClick = $DvtSvgGradientUtils$$ == $DvtSvgImageFillUtils$$.startTarget && !$DvtSvgFilterUtils$$
        }
      }
    }
    this.$_context$.$clearStageAbsolutePosition$()
  };
  $dvt$$9$$.$TouchManager$.$getTouchById$ = function $$dvt$$9$$$$TouchManager$$$getTouchById$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && !isNaN($DvtSvgShadowUtils$$)) {
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
        var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$];
        if($DvtSvgGradientUtils$$.identifier == $DvtSvgShadowUtils$$) {
          return $DvtSvgGradientUtils$$
        }
      }
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$TouchManager$.$createSavedTouchInfo$ = function $$dvt$$9$$$$TouchManager$$$createSavedTouchInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    $DvtSvgShadowUtils$$ = {touchId:$DvtSvgShadowUtils$$, tooltipObjOverride:$JSCompiler_alias_NULL$$, grouping:$DvtSvgImageFillUtils$$, type:$DvtSvgGradientUtils$$, touchObj:$DvtSvgPatternFillUtils$$, allowTooltips:$JSCompiler_alias_TRUE$$};
    $DvtSvgShadowUtils$$.moveListener = $DvtSvgFilterUtils$$;
    $DvtSvgShadowUtils$$.endListener = $dvt$$9$$;
    $DvtSvgShadowUtils$$.listenerObj = $DvtSvgFilterContext$$;
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$_handleTouchHoldStartTimer$ = function $$dvt$$9$$$$TouchManager$$$$_handleTouchHoldStartTimer$$() {
    var $DvtSvgShadowUtils$$ = this.$_dvtTouchEvent$;
    this.$_stopTouchHoldTimer$();
    this.$startTouchHold$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$TouchManager$.prototype.$_startTouchHoldTimer$ = function $$dvt$$9$$$$TouchManager$$$$_startTouchHoldTimer$$($DvtSvgShadowUtils$$) {
    this.$_dvtTouchEvent$ = $DvtSvgShadowUtils$$;
    this.$_touchHoldTimer$ && this.$_touchHoldTimer$.start()
  };
  $dvt$$9$$.$TouchManager$.prototype.$_stopTouchHoldTimer$ = function $$dvt$$9$$$$TouchManager$$$$_stopTouchHoldTimer$$() {
    this.$_dvtTouchEvent$ = $JSCompiler_alias_NULL$$;
    this.$_touchHoldTimer$ && this.$_touchHoldTimer$.stop()
  };
  $dvt$$9$$.$TouchManager$.prototype.$_handleDoubleTapTimer$ = function $$dvt$$9$$$$TouchManager$$$$_handleDoubleTapTimer$$() {
    this.$resetDoubleTap$()
  };
  $dvt$$9$$.$TouchManager$.prototype.$resetDoubleTap$ = function $$dvt$$9$$$$TouchManager$$$$resetDoubleTap$$() {
    this.$_doubleTapAttemptStarted$ = $JSCompiler_alias_FALSE$$;
    this.$_doubleTapAttemptObj$ = $JSCompiler_alias_NULL$$;
    this.$_doubleTapTimer$.stop()
  };
  $dvt$$9$$.$TouchManager$.prototype.$getMultiTouchData$ = function $$dvt$$9$$$$TouchManager$$$$getMultiTouchData$$($DvtSvgShadowUtils$$) {
    if(2 == $DvtSvgShadowUtils$$.length) {
      var $DvtSvgPatternFillUtils$$ = this.$_touchMap$[$DvtSvgShadowUtils$$[0]];
      $DvtSvgShadowUtils$$ = this.$_touchMap$[$DvtSvgShadowUtils$$[1]];
      if($DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$ || $DvtSvgShadowUtils$$ == $JSCompiler_alias_NULL$$ || 0 == $DvtSvgPatternFillUtils$$.dx && 0 == $DvtSvgShadowUtils$$.dy) {
        return $JSCompiler_alias_NULL$$
      }
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.pageX - $DvtSvgShadowUtils$$.pageX, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.pageY - $DvtSvgShadowUtils$$.pageY, $DvtSvgImageFillUtils$$ = Math.sqrt($DvtSvgImageFillUtils$$ * $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.prevPageX - $DvtSvgShadowUtils$$.prevPageX, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.prevPageY - $DvtSvgShadowUtils$$.prevPageY, 
      $dvt$$9$$ = ($DvtSvgPatternFillUtils$$.pageX + $DvtSvgShadowUtils$$.pageX) / 2, $DvtSvgFilterContext$$ = ($DvtSvgPatternFillUtils$$.pageY + $DvtSvgShadowUtils$$.pageY) / 2;
      return{$dz$:$DvtSvgImageFillUtils$$ - Math.sqrt($DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$ + $DvtSvgFilterUtils$$ * $DvtSvgFilterUtils$$), $cx$:$dvt$$9$$, $cy$:$DvtSvgFilterContext$$, $dcx$:$dvt$$9$$ - ($DvtSvgPatternFillUtils$$.prevPageX + $DvtSvgShadowUtils$$.prevPageX) / 2, $dcy$:$DvtSvgFilterContext$$ - ($DvtSvgPatternFillUtils$$.prevPageY + $DvtSvgShadowUtils$$.prevPageY) / 2, $dist$:$DvtSvgImageFillUtils$$}
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$TouchManager$.prototype.$calcAveragePosition$ = function $$dvt$$9$$$$TouchManager$$$$calcAveragePosition$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$ = 0, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$;$DvtSvgFilterUtils$$++) {
      var $DvtSvgFilterContext$$ = this.$getTouchInfo$($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$]), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$.pageX, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ + $DvtSvgFilterContext$$.pageY
    }
    return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$ / $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ / $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$TouchManager$.prototype.$getStartTargetsByIds$ = function $$dvt$$9$$$$TouchManager$$$$getStartTargetsByIds$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push(this.$getTouchInfo$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]).startTarget)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$TouchManager$.prototype.reset = function $$dvt$$9$$$$TouchManager$$$reset$() {
    this.$_touchMap$ = {};
    this.$_savedTouchInfo$ = [];
    this.$resetTouchHold$();
    this.$resetDoubleTap$()
  };
  $dvt$$9$$.$ViewportChangeEvent$ = function $$dvt$$9$$$$ViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($dvt$$9$$.$ViewportChangeEvent$.$TYPE$);
    this.$_oldDim$ = $DvtSvgShadowUtils$$;
    this.$_newDim$ = $DvtSvgPatternFillUtils$$;
    this.$_evt$ = $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ViewportChangeEvent$.$TYPE$ = "viewportChange";
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ViewportChangeEvent$, $dvt$$9$$.$BaseComponentEvent$);
  $dvt$$9$$.$ViewportChangeEvent$.prototype.$getNativeEvent$ = $JSCompiler_get$$("$_evt$");
  $DvtActionTooltipEvent$$.$TOOLTIP_CLOSED_TYPE$ = "actiontooltipclosed";
  $DvtActionTooltipEvent$$.$TOOLTIP_STARTED_TYPE$ = "actiontooltipstarted";
  $dvt$$9$$.$Obj$.$createSubclass$($DvtActionTooltipEvent$$, $dvt$$9$$.$BaseComponentEvent$);
  $DvtActionTooltipEvent$$.prototype.Init = function $$DvtActionTooltipEvent$$$$Init$($DvtSvgShadowUtils$$) {
    $DvtActionTooltipEvent$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$ComponentTouchEvent$ = function $$dvt$$9$$$$ComponentTouchEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_START_TYPE$ = "touchholdstart";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_MOVE_TYPE$ = "touchholdmove";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOLD_END_TYPE$ = "touchholdend";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$ = "touchhoverstart";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$ = "touchhovermove";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$ = "touchhoverend";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$ = "touchhoverover";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$ = "touchhoverout";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$ = "touchclick";
  $dvt$$9$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$ = "touchdblclick";
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ComponentTouchEvent$, $dvt$$9$$.$BaseComponentEvent$);
  $dvt$$9$$.$ComponentTouchEvent$.prototype.Init = function $$dvt$$9$$$$ComponentTouchEvent$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$9$$.$ComponentTouchEvent$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.target = $DvtSvgImageFillUtils$$;
    this.$touch$ = $DvtSvgPatternFillUtils$$;
    this.relatedTarget = $DvtSvgGradientUtils$$;
    this.$_isPropagationStopped$ = $JSCompiler_alias_FALSE$$;
    this.$_nativeEvent$ = $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$ComponentTouchEvent$.prototype.preventDefault = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$ComponentTouchEvent$.prototype.stopPropagation = function $$dvt$$9$$$$ComponentTouchEvent$$$stopPropagation$() {
    this.$_isPropagationStopped$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$ComponentTouchEvent$.prototype.$isPropagationStopped$ = $JSCompiler_get$$("$_isPropagationStopped$");
  $dvt$$9$$.$ComponentTouchEvent$.prototype.$getNativeEvent$ = $JSCompiler_get$$("$_nativeEvent$");
  $dvt$$9$$.$ResizeEvent$ = function $$dvt$$9$$$$ResizeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ResizeEvent$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ResizeEvent$.$RESIZE_EVENT$ = "dvtResizeEvent";
  $dvt$$9$$.$ResizeEvent$.prototype.Init = function $$dvt$$9$$$$ResizeEvent$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.type = $dvt$$9$$.$ResizeEvent$.$RESIZE_EVENT$;
    this.$_ww$ = $DvtSvgShadowUtils$$;
    this.$_hh$ = $DvtSvgPatternFillUtils$$;
    this.$_xx$ = $DvtSvgImageFillUtils$$;
    this.$_yy$ = $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$ResizeEvent$.prototype.getWidth = $JSCompiler_get$$("$_ww$");
  $dvt$$9$$.$ResizeEvent$.prototype.getHeight = $JSCompiler_get$$("$_hh$");
  $dvt$$9$$.$ResizeEvent$.prototype.$getX$ = $JSCompiler_get$$("$_xx$");
  $dvt$$9$$.$ResizeEvent$.prototype.$getY$ = $JSCompiler_get$$("$_yy$");
  $dvt$$9$$.$ResizeEvent$.prototype.$getType$ = $JSCompiler_get$$("type");
  $dvt$$9$$.$ScrollEvent$ = function $$dvt$$9$$$$ScrollEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ScrollEvent$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ScrollEvent$.$SCROLL_EVENT$ = "dvtScrollEvent";
  $dvt$$9$$.$ScrollEvent$.prototype.Init = function $$dvt$$9$$$$ScrollEvent$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.type = $dvt$$9$$.$ScrollEvent$.$SCROLL_EVENT$;
    this.$_x$ = $DvtSvgShadowUtils$$;
    this.$_y$ = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ScrollEvent$.prototype.$getX$ = $JSCompiler_get$$("$_x$");
  $dvt$$9$$.$ScrollEvent$.prototype.$getY$ = $JSCompiler_get$$("$_y$");
  $dvt$$9$$.$ScrollEvent$.prototype.$getType$ = $JSCompiler_get$$("type");
  $dvt$$9$$.$MarqueeEvent$ = function $$dvt$$9$$$$MarqueeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($dvt$$9$$.$MarqueeEvent$.$TYPE$);
    this.$subtype$ = $DvtSvgShadowUtils$$;
    this.x = $DvtSvgPatternFillUtils$$;
    this.y = $DvtSvgImageFillUtils$$;
    this.$w$ = $DvtSvgGradientUtils$$;
    this.$h$ = $DvtSvgFilterUtils$$;
    this.ctrlKey = $DvtSvgFilterContext$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$MarqueeEvent$, $dvt$$9$$.$BaseComponentEvent$);
  $dvt$$9$$.$MarqueeEvent$.$TYPE$ = "dvtMarquee";
  $dvt$$9$$.$MarqueeEvent$.$SUBTYPE_START$ = "dvtMarqueeStartEvent";
  $dvt$$9$$.$MarqueeEvent$.$SUBTYPE_MOVE$ = "dvtMarqueeMoveEvent";
  $dvt$$9$$.$MarqueeEvent$.$SUBTYPE_END$ = "dvtMarqueeEndEvent";
  $dvt$$9$$.$MarqueeEvent$.prototype.$getSubtype$ = $JSCompiler_get$$("$subtype$");
  $dvt$$9$$.$PanZoomEvent$ = function $$dvt$$9$$$$PanZoomEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    this.Init($dvt$$9$$.$PanZoomEvent$.$TYPE$);
    this.$subtype$ = $DvtSvgShadowUtils$$;
    this.$dxMin$ = $DvtSvgPatternFillUtils$$;
    this.$dxMax$ = $DvtSvgImageFillUtils$$;
    this.$dyMin$ = $DvtSvgGradientUtils$$;
    this.$dyMax$ = $DvtSvgFilterUtils$$;
    this.$dxMinTotal$ = $DvtSvgFilterContext$$;
    this.$dxMaxTotal$ = $DvtSvgImplFactory$$;
    this.$dyMinTotal$ = $DvtHtmlRichTooltipManager$$;
    this.$dyMaxTotal$ = $DvtDomXmlParser$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$PanZoomEvent$, $dvt$$9$$.$BaseComponentEvent$);
  $dvt$$9$$.$PanZoomEvent$.$TYPE$ = "dvtPanZoom";
  $dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PAN_START$ = "dvtPanStartEvent";
  $dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PAN_MOVE$ = "dvtPanMoveEvent";
  $dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PAN_END$ = "dvtPanEndEvent";
  $dvt$$9$$.$PanZoomEvent$.$SUBTYPE_ZOOM$ = "dvtZoomEvent";
  $dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PINCH_START$ = "dvtPinchStartEvent";
  $dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PINCH_MOVE$ = "dvtPinchMoveEvent";
  $dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PINCH_END$ = "dvtPinchEndEvent";
  $dvt$$9$$.$PanZoomEvent$.prototype.$getSubtype$ = $JSCompiler_get$$("$subtype$");
  $dvt$$9$$.$SimpleScrollbarEvent$ = function $$dvt$$9$$$$SimpleScrollbarEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($dvt$$9$$.$SimpleScrollbarEvent$.$TYPE$);
    this.$_subtype$ = $DvtSvgShadowUtils$$;
    this.$_newMin$ = $DvtSvgPatternFillUtils$$;
    this.$_newMax$ = $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SimpleScrollbarEvent$, $dvt$$9$$.$BaseComponentEvent$);
  $dvt$$9$$.$SimpleScrollbarEvent$.$TYPE$ = "dvtSimpleScrollbar";
  $dvt$$9$$.$SimpleScrollbarEvent$.$SUBTYPE_MOVE$ = "dvtMoveEvent";
  $dvt$$9$$.$SimpleScrollbarEvent$.$SUBTYPE_END$ = "dvtEndEvent";
  $dvt$$9$$.$SimpleScrollbarEvent$.prototype.$getSubtype$ = $JSCompiler_get$$("$_subtype$");
  $dvt$$9$$.$DomEventFactory$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$DomEventFactory$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$DomEventFactory$.$newEvent$ = function $$dvt$$9$$$$DomEventFactory$$$newEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.type;
    if($DvtSvgImageFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHSTART$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHMOVE$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHEND$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHCANCEL$) {
      return new $dvt$$9$$.$TouchEvent$($DvtSvgShadowUtils$$)
    }
    if($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYDOWN$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYUP$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYPRESS$) {
      return new $dvt$$9$$.$KeyboardEvent$($DvtSvgShadowUtils$$)
    }
    $DvtSvgPatternFillUtils$$.$_nativeEvent$ != $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$.$_nativeEvent$ = $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$.$_logicalEvent$ = $DvtSvgImageFillUtils$$ == $DvtFocusEvent$$.$FOCUS$ || $DvtSvgImageFillUtils$$ == $DvtFocusEvent$$.$FOCUSIN$ || $DvtSvgImageFillUtils$$ == $DvtFocusEvent$$.$FOCUSOUT$ || $DvtSvgImageFillUtils$$ == $DvtFocusEvent$$.$BLUR$ ? new $DvtFocusEvent$$($DvtSvgShadowUtils$$) : new $dvt$$9$$.$MouseEvent$($DvtSvgShadowUtils$$));
    return $DvtSvgPatternFillUtils$$.$_logicalEvent$
  };
  $dvt$$9$$.$DomEventFactory$.$generateMouseEventFromKeyboardEvent$ = function $$dvt$$9$$$$DomEventFactory$$$generateMouseEventFromKeyboardEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = $JSCompiler_alias_NULL$$;
    document.createEvent && ($DvtSvgFilterContext$$ = document.createEvent("MouseEvents"), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$stageToPageCoords$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $DvtSvgFilterContext$$.initMouseEvent($DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$, $JSCompiler_alias_TRUE$$, window, 1, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y, $DvtSvgShadowUtils$$.ctrlKey, $DvtSvgShadowUtils$$.altKey, $DvtSvgShadowUtils$$.shiftKey, 
    $DvtSvgShadowUtils$$.metaKey, 0, $JSCompiler_alias_NULL$$));
    return $DvtSvgFilterContext$$ ? ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgFilterContext$$, $DvtSvgPatternFillUtils$$), $DvtSvgPatternFillUtils$$.target = $DvtSvgShadowUtils$$.target, $DvtSvgPatternFillUtils$$) : $JSCompiler_alias_NULL$$
  };
  var $Dvt3rdPartyPathUtils$$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($Dvt3rdPartyPathUtils$$, $dvt$$9$$.$Obj$);
  $Dvt3rdPartyPathUtils$$.$lineLinear$ = function $$Dvt3rdPartyPathUtils$$$$lineLinear$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.join("L")
  };
  $Dvt3rdPartyPathUtils$$.$lineCardinalClosed$ = function $$Dvt3rdPartyPathUtils$$$$lineCardinalClosed$$($DvtSvgShadowUtils$$) {
    return 3 > $DvtSvgShadowUtils$$.length ? $Dvt3rdPartyPathUtils$$.$lineLinear$($DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$[0] + $Dvt3rdPartyPathUtils$$.$lineHermite$(($DvtSvgShadowUtils$$.push($DvtSvgShadowUtils$$[0]), $DvtSvgShadowUtils$$), $Dvt3rdPartyPathUtils$$.$lineCardinalTangents$([$DvtSvgShadowUtils$$[$DvtSvgShadowUtils$$.length - 2]].concat($DvtSvgShadowUtils$$, [$DvtSvgShadowUtils$$[1]])))
  };
  $Dvt3rdPartyPathUtils$$.$lineCardinal$ = function $$Dvt3rdPartyPathUtils$$$$lineCardinal$$($DvtSvgShadowUtils$$) {
    return 3 > $DvtSvgShadowUtils$$.length ? $Dvt3rdPartyPathUtils$$.$lineLinear$($DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$[0] + $Dvt3rdPartyPathUtils$$.$lineHermite$($DvtSvgShadowUtils$$, $Dvt3rdPartyPathUtils$$.$lineCardinalTangents$($DvtSvgShadowUtils$$))
  };
  $Dvt3rdPartyPathUtils$$.$lineHermite$ = function $$Dvt3rdPartyPathUtils$$$$lineHermite$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(1 > $DvtSvgPatternFillUtils$$.length || $DvtSvgShadowUtils$$.length != $DvtSvgPatternFillUtils$$.length && $DvtSvgShadowUtils$$.length != $DvtSvgPatternFillUtils$$.length + 2) {
      return $Dvt3rdPartyPathUtils$$.$lineLinear$($DvtSvgShadowUtils$$)
    }
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length != $DvtSvgPatternFillUtils$$.length, $DvtSvgGradientUtils$$ = "", $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[0], $dvt$$9$$ = $DvtSvgShadowUtils$$[1], $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$[0], $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$, $DvtHtmlRichTooltipManager$$ = 1;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ += "Q" + Math.round($dvt$$9$$[0] - 2 * $DvtSvgFilterContext$$[0] / 3) + "," + Math.round($dvt$$9$$[1] - 2 * $DvtSvgFilterContext$$[1] / 3) + "," + Math.round($dvt$$9$$[0]) + "," + Math.round($dvt$$9$$[1]), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[1], $DvtHtmlRichTooltipManager$$ = 2);
    if(1 < $DvtSvgPatternFillUtils$$.length) {
      $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$[1];
      $dvt$$9$$ = $DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$];
      $DvtHtmlRichTooltipManager$$++;
      $DvtSvgGradientUtils$$ += "C" + Math.round($DvtSvgFilterUtils$$[0] + $DvtSvgFilterContext$$[0]) + "," + Math.round($DvtSvgFilterUtils$$[1] + $DvtSvgFilterContext$$[1]) + "," + Math.round($dvt$$9$$[0] - $DvtSvgImplFactory$$[0]) + "," + Math.round($dvt$$9$$[1] - $DvtSvgImplFactory$$[1]) + "," + Math.round($dvt$$9$$[0]) + "," + Math.round($dvt$$9$$[1]);
      for($DvtSvgFilterUtils$$ = 2;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++, $DvtHtmlRichTooltipManager$$++) {
        $dvt$$9$$ = $DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$], $DvtSvgGradientUtils$$ += "S" + Math.round($dvt$$9$$[0] - $DvtSvgImplFactory$$[0]) + "," + Math.round($dvt$$9$$[1] - $DvtSvgImplFactory$$[1]) + "," + Math.round($dvt$$9$$[0]) + "," + Math.round($dvt$$9$$[1])
      }
    }
    $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgGradientUtils$$ += "Q" + Math.round($dvt$$9$$[0] + 2 * $DvtSvgImplFactory$$[0] / 3) + "," + Math.round($dvt$$9$$[1] + 2 * $DvtSvgImplFactory$$[1] / 3) + "," + Math.round($DvtSvgImageFillUtils$$[0]) + "," + Math.round($DvtSvgImageFillUtils$$[1]));
    return $DvtSvgGradientUtils$$
  };
  $Dvt3rdPartyPathUtils$$.$lineCardinalTangents$ = function $$Dvt3rdPartyPathUtils$$$$lineCardinalTangents$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = (1 - 0.7) / 2, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[0], $dvt$$9$$ = $DvtSvgShadowUtils$$[1], $DvtSvgFilterContext$$ = 1, $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.length;++$DvtSvgFilterContext$$ < $DvtSvgImplFactory$$;) {
      $DvtSvgGradientUtils$$ = $DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$ = $dvt$$9$$, $dvt$$9$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$], $DvtSvgPatternFillUtils$$.push([$DvtSvgImageFillUtils$$ * ($dvt$$9$$[0] - $DvtSvgGradientUtils$$[0]), $DvtSvgImageFillUtils$$ * ($dvt$$9$$[1] - $DvtSvgGradientUtils$$[1])])
    }
    return $DvtSvgPatternFillUtils$$
  };
  $Dvt3rdPartyPathUtils$$.$lineSlope$ = function $$Dvt3rdPartyPathUtils$$$$lineSlope$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return($DvtSvgPatternFillUtils$$[1] - $DvtSvgShadowUtils$$[1]) / ($DvtSvgPatternFillUtils$$[0] - $DvtSvgShadowUtils$$[0])
  };
  $Dvt3rdPartyPathUtils$$.$lineFiniteDifferences$ = function $$Dvt3rdPartyPathUtils$$$$lineFiniteDifferences$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length - 1, $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[1], $dvt$$9$$ = $DvtSvgGradientUtils$$[0] = $Dvt3rdPartyPathUtils$$.$lineSlope$($DvtSvgShadowUtils$$[0], $DvtSvgFilterUtils$$);++$DvtSvgPatternFillUtils$$ < $DvtSvgImageFillUtils$$;) {
      $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$] = ($dvt$$9$$ + ($dvt$$9$$ = $Dvt3rdPartyPathUtils$$.$lineSlope$($DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$ + 1]))) / 2
    }
    $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$] = $dvt$$9$$;
    return $DvtSvgGradientUtils$$
  };
  $Dvt3rdPartyPathUtils$$.$lineMonotoneTangents$ = function $$Dvt3rdPartyPathUtils$$$$lineMonotoneTangents$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ = $Dvt3rdPartyPathUtils$$.$_rotatePoints$($DvtSvgShadowUtils$$));
    for(var $DvtSvgImageFillUtils$$ = [], $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = $Dvt3rdPartyPathUtils$$.$lineFiniteDifferences$($DvtSvgShadowUtils$$), $DvtHtmlRichTooltipManager$$ = -1, $DvtDomXmlParser$$ = $DvtSvgShadowUtils$$.length - 1;++$DvtHtmlRichTooltipManager$$ < $DvtDomXmlParser$$;) {
      $DvtSvgGradientUtils$$ = $Dvt3rdPartyPathUtils$$.$lineSlope$($DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$ + 1]), 1E-6 > Math.abs($DvtSvgGradientUtils$$) ? $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] = $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$ + 1] = 0 : ($DvtSvgFilterUtils$$ = $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] / $DvtSvgGradientUtils$$, $dvt$$9$$ = $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$ + 1] / 
      $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$ * $DvtSvgFilterUtils$$ + $dvt$$9$$ * $dvt$$9$$, 9 < $DvtSvgFilterContext$$ && ($DvtSvgFilterContext$$ = 3 * $DvtSvgGradientUtils$$ / Math.sqrt($DvtSvgFilterContext$$), $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] = $DvtSvgFilterContext$$ * $DvtSvgFilterUtils$$, $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$ + 1] = $DvtSvgFilterContext$$ * $dvt$$9$$))
    }
    for($DvtHtmlRichTooltipManager$$ = -1;++$DvtHtmlRichTooltipManager$$ <= $DvtDomXmlParser$$;) {
      $DvtSvgFilterContext$$ = ($DvtSvgShadowUtils$$[Math.min($DvtDomXmlParser$$, $DvtHtmlRichTooltipManager$$ + 1)][0] - $DvtSvgShadowUtils$$[Math.max(0, $DvtHtmlRichTooltipManager$$ - 1)][0]) / (6 * (1 + $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] * $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$])), $DvtSvgImageFillUtils$$.push([$DvtSvgFilterContext$$ || 0, $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] * $DvtSvgFilterContext$$ || 0])
    }
    $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ = $Dvt3rdPartyPathUtils$$.$_rotatePoints$($DvtSvgImageFillUtils$$));
    return $DvtSvgImageFillUtils$$
  };
  $Dvt3rdPartyPathUtils$$.$lineMonotone$ = function $$Dvt3rdPartyPathUtils$$$$lineMonotone$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 3 > $DvtSvgShadowUtils$$.length ? $Dvt3rdPartyPathUtils$$.$lineLinear$($DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$[0] + $Dvt3rdPartyPathUtils$$.$lineHermite$($DvtSvgShadowUtils$$, $Dvt3rdPartyPathUtils$$.$lineMonotoneTangents$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$))
  };
  $Dvt3rdPartyPathUtils$$.$_rotatePoints$ = function $$Dvt3rdPartyPathUtils$$$$_rotatePoints$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push([$DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$][1], $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$][0]])
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$DisplayableUtils$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$DisplayableUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$DisplayableUtils$.$getDimensionsForced$ = function $$dvt$$9$$$$DisplayableUtils$$$getDimensionsForced$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.getParent(), $DvtSvgGradientUtils$$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$getChildIndex$($DvtSvgPatternFillUtils$$));
    var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$_stage$;
    $DvtSvgFilterUtils$$.$addChild$($DvtSvgPatternFillUtils$$);
    var $dvt$$9$$ = $DvtSvgPatternFillUtils$$.$getDimensions$();
    $DvtSvgFilterUtils$$.removeChild($DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.$addChildAt$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
    return $dvt$$9$$
  };
  $dvt$$9$$.$DisplayableUtils$.$getDimForced$ = function $$dvt$$9$$$$DisplayableUtils$$$getDimForced$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgPatternFillUtils$$.$_dim$ || !$DvtSvgShadowUtils$$) {
      return $DvtSvgPatternFillUtils$$.$_dim$
    }
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$DisplayableUtils$.$getDimensionsForced$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    $dvt$$9$$.$DisplayableUtils$.$_setDimForced$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$DisplayableUtils$.$_setDimForced$ = function $$dvt$$9$$$$DisplayableUtils$$$_setDimForced$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$.$_dim$ = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$DisplayableUtils$.$isAncestor$ = function $$dvt$$9$$$$DisplayableUtils$$$isAncestor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$;) {
      if($DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$) {
        return $JSCompiler_alias_TRUE$$
      }
      $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Container$ && ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.getParent())
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$PathUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$PathUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$PathUtils$.$SPLINE_TYPE_MONOTONE_VERTICAL$ = "mv";
  $dvt$$9$$.$PathUtils$.$SPLINE_TYPE_MONOTONE_HORIZONTAL$ = "mh";
  $dvt$$9$$.$PathUtils$.$SPLINE_TYPE_CARDINAL_CLOSED$ = "cc";
  $dvt$$9$$.$PathUtils$.$SPLINE_TYPE_CARDINAL$ = "c";
  $dvt$$9$$.$PathUtils$.$_MIN_CORNER_RADIUS$ = 2.5;
  $dvt$$9$$.$PathUtils$.moveTo = function $$dvt$$9$$$$PathUtils$$moveTo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return"M" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$PathUtils$.lineTo = function $$dvt$$9$$$$PathUtils$$lineTo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return"L" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$PathUtils$.$quadTo$ = function $$dvt$$9$$$$PathUtils$$$quadTo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return"Q" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgImageFillUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$PathUtils$.$cubicTo$ = function $$dvt$$9$$$$PathUtils$$$cubicTo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    return"C" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgImageFillUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgGradientUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgFilterUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$PathUtils$.arcTo = function $$dvt$$9$$$$PathUtils$$arcTo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtSvgShadowUtils$$ = "A" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$) + ",0,";
    $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$ > Math.PI ? $DvtSvgShadowUtils$$ + "1," : $DvtSvgShadowUtils$$ + "0,";
    return $DvtSvgShadowUtils$$ += $DvtSvgGradientUtils$$ + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgFilterUtils$$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$PathUtils$.closePath = $JSCompiler_returnArg$$("Z");
  $dvt$$9$$.$PathUtils$.$roundedRectangle$ = function $$dvt$$9$$$$PathUtils$$$roundedRectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    return $dvt$$9$$.$PathUtils$.$_roundedRectangle$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtHtmlRichTooltipManager$$)
  };
  $dvt$$9$$.$PathUtils$.$rectangleWithBorderRadius$ = function $$dvt$$9$$$$PathUtils$$$rectangleWithBorderRadius$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    var $DvtHtmlRichTooltipManager$$ = $DvtSvgImplFactory$$, $DvtDomXmlParser$$ = $DvtSvgImplFactory$$, $DvtContextMenuTooltipItem$$ = $DvtSvgImplFactory$$, $DvtCustomTooltipItem$$ = $DvtSvgImplFactory$$, $DvtCustomTooltip$$ = $DvtSvgImplFactory$$, $DvtCircularShape$$ = $DvtSvgImplFactory$$, $DvtCustomTooltipEventHandler$$ = $DvtSvgImplFactory$$;
    if($DvtSvgFilterUtils$$) {
      if(-1 != $DvtSvgFilterUtils$$.indexOf("/")) {
        var $DvtCustomTooltipManager$$ = $DvtSvgFilterUtils$$.split("/");
        $DvtSvgFilterUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtCustomTooltipManager$$[0]).split(/\s+/);
        $DvtCustomTooltipManager$$ = $dvt$$9$$.$StringUtils$.trim($DvtCustomTooltipManager$$[1]).split(/\s+/);
        1 == $DvtSvgFilterUtils$$.length ? $DvtHtmlRichTooltipManager$$ = $DvtContextMenuTooltipItem$$ = $DvtCustomTooltip$$ = $DvtCustomTooltipEventHandler$$ = $DvtSvgFilterUtils$$[0] : 2 == $DvtSvgFilterUtils$$.length ? ($DvtHtmlRichTooltipManager$$ = $DvtCustomTooltip$$ = $DvtSvgFilterUtils$$[0], $DvtContextMenuTooltipItem$$ = $DvtCustomTooltipEventHandler$$ = $DvtSvgFilterUtils$$[1]) : 3 == $DvtSvgFilterUtils$$.length ? ($DvtHtmlRichTooltipManager$$ = $DvtSvgFilterUtils$$[0], $DvtContextMenuTooltipItem$$ = 
        $DvtCustomTooltipEventHandler$$ = $DvtSvgFilterUtils$$[1], $DvtCustomTooltip$$ = $DvtSvgFilterUtils$$[2]) : 4 == $DvtSvgFilterUtils$$.length && ($DvtHtmlRichTooltipManager$$ = $DvtSvgFilterUtils$$[0], $DvtContextMenuTooltipItem$$ = $DvtSvgFilterUtils$$[1], $DvtCustomTooltip$$ = $DvtSvgFilterUtils$$[2], $DvtCustomTooltipEventHandler$$ = $DvtSvgFilterUtils$$[3]);
        1 == $DvtCustomTooltipManager$$.length ? $DvtDomXmlParser$$ = $DvtCustomTooltipItem$$ = $DvtCircularShape$$ = $DvtSvgImplFactory$$ = $DvtCustomTooltipManager$$[0] : 2 == $DvtCustomTooltipManager$$.length ? ($DvtDomXmlParser$$ = $DvtCircularShape$$ = $DvtCustomTooltipManager$$[0], $DvtCustomTooltipItem$$ = $DvtSvgImplFactory$$ = $DvtCustomTooltipManager$$[1]) : 3 == $DvtCustomTooltipManager$$.length ? ($DvtDomXmlParser$$ = $DvtCustomTooltipManager$$[0], $DvtCustomTooltipItem$$ = $DvtSvgImplFactory$$ = 
        $DvtCustomTooltipManager$$[1], $DvtCircularShape$$ = $DvtCustomTooltipManager$$[2]) : 4 == $DvtCustomTooltipManager$$.length && ($DvtDomXmlParser$$ = $DvtCustomTooltipManager$$[0], $DvtCustomTooltipItem$$ = $DvtCustomTooltipManager$$[1], $DvtCircularShape$$ = $DvtCustomTooltipManager$$[2], $DvtSvgImplFactory$$ = $DvtCustomTooltipManager$$[3])
      }else {
        "auto" != $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgFilterUtils$$).split(/\s+/), 1 == $DvtSvgFilterUtils$$.length ? $DvtHtmlRichTooltipManager$$ = $DvtContextMenuTooltipItem$$ = $DvtCustomTooltip$$ = $DvtCustomTooltipEventHandler$$ = $DvtDomXmlParser$$ = $DvtCustomTooltipItem$$ = $DvtCircularShape$$ = $DvtSvgImplFactory$$ = $DvtSvgFilterUtils$$[0] : 2 == $DvtSvgFilterUtils$$.length ? ($DvtHtmlRichTooltipManager$$ = $DvtCustomTooltip$$ = $DvtDomXmlParser$$ = 
        $DvtCircularShape$$ = $DvtSvgFilterUtils$$[0], $DvtContextMenuTooltipItem$$ = $DvtCustomTooltipEventHandler$$ = $DvtCustomTooltipItem$$ = $DvtSvgImplFactory$$ = $DvtSvgFilterUtils$$[1]) : 3 == $DvtSvgFilterUtils$$.length ? ($DvtHtmlRichTooltipManager$$ = $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$[0], $DvtContextMenuTooltipItem$$ = $DvtCustomTooltipEventHandler$$ = $DvtCustomTooltipItem$$ = $DvtSvgImplFactory$$ = $DvtSvgFilterUtils$$[1], $DvtCustomTooltip$$ = $DvtCircularShape$$ = $DvtSvgFilterUtils$$[2]) : 
        4 == $DvtSvgFilterUtils$$.length && ($DvtHtmlRichTooltipManager$$ = $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$[0], $DvtContextMenuTooltipItem$$ = $DvtCustomTooltipItem$$ = $DvtSvgFilterUtils$$[1], $DvtCustomTooltip$$ = $DvtCircularShape$$ = $DvtSvgFilterUtils$$[2], $DvtCustomTooltipEventHandler$$ = $DvtSvgImplFactory$$ = $DvtSvgFilterUtils$$[3]))
      }
    }
    return $dvt$$9$$.$PathUtils$.$_roundedRectangle$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$($DvtHtmlRichTooltipManager$$, $DvtSvgFilterContext$$), $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$($DvtDomXmlParser$$, $DvtSvgFilterContext$$), $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$($DvtContextMenuTooltipItem$$, $DvtSvgFilterContext$$), $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$($DvtCustomTooltipItem$$, 
    $DvtSvgFilterContext$$), $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$($DvtCustomTooltip$$, $DvtSvgFilterContext$$), $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$($DvtCircularShape$$, $DvtSvgFilterContext$$), $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$($DvtCustomTooltipEventHandler$$, $DvtSvgFilterContext$$), $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$($DvtSvgImplFactory$$, $DvtSvgFilterContext$$))
  };
  $dvt$$9$$.$PathUtils$.$_parseBorderRadiusItem$ = function $$dvt$$9$$$$PathUtils$$$_parseBorderRadiusItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = Math.min(parseFloat($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ / 2);
    -1 != $DvtSvgShadowUtils$$.indexOf("%") && ($DvtSvgImageFillUtils$$ = 0.01 * Math.min(50, parseFloat($DvtSvgShadowUtils$$)) * $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$ < $dvt$$9$$.$PathUtils$.$_MIN_CORNER_RADIUS$ ? 0 : $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$PathUtils$.$_roundedRectangle$ = function $$dvt$$9$$$$PathUtils$$$_roundedRectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$, $DvtCustomTooltip$$) {
    $DvtSvgFilterContext$$ = Math.min($DvtSvgFilterContext$$, 0.5 * $DvtSvgGradientUtils$$);
    $DvtHtmlRichTooltipManager$$ = Math.min($DvtHtmlRichTooltipManager$$, 0.5 * $DvtSvgGradientUtils$$);
    $DvtContextMenuTooltipItem$$ = Math.min($DvtContextMenuTooltipItem$$, 0.5 * $DvtSvgGradientUtils$$);
    $DvtCustomTooltip$$ = Math.min($DvtCustomTooltip$$, 0.5 * $DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ = Math.min($DvtSvgFilterUtils$$, 0.5 * $DvtSvgImageFillUtils$$);
    $DvtSvgImplFactory$$ = Math.min($DvtSvgImplFactory$$, 0.5 * $DvtSvgImageFillUtils$$);
    $DvtDomXmlParser$$ = Math.min($DvtDomXmlParser$$, 0.5 * $DvtSvgImageFillUtils$$);
    $DvtCustomTooltipItem$$ = Math.min($DvtCustomTooltipItem$$, 0.5 * $DvtSvgImageFillUtils$$);
    return $dvt$$9$$.$PathUtils$.moveTo($DvtSvgShadowUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$) + $dvt$$9$$.$PathUtils$.arcTo($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, Math.PI / 2, 1, $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$ + $DvtHtmlRichTooltipManager$$) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$, 
    $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ - $DvtContextMenuTooltipItem$$) + $dvt$$9$$.$PathUtils$.arcTo($DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, Math.PI / 2, 1, $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ - $DvtDomXmlParser$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$ + $DvtCustomTooltipItem$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$) + $dvt$$9$$.$PathUtils$.arcTo($DvtCustomTooltipItem$$, $DvtCustomTooltip$$, 
    Math.PI / 2, 1, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ - $DvtCustomTooltip$$) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$) + $dvt$$9$$.$PathUtils$.arcTo($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, Math.PI / 2, 1, $DvtSvgShadowUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$) + $dvt$$9$$.$PathUtils$.closePath()
  };
  $dvt$$9$$.$PathUtils$.$polyline$ = function $$dvt$$9$$$$PathUtils$$$polyline$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(2 > $DvtSvgShadowUtils$$.length) {
      return""
    }
    for(var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $dvt$$9$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$[0], $DvtSvgShadowUtils$$[1]) : $dvt$$9$$.$PathUtils$.moveTo($DvtSvgShadowUtils$$[0], $DvtSvgShadowUtils$$[1]), $DvtSvgGradientUtils$$ = 2;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$ += 2) {
      $DvtSvgImageFillUtils$$ += $dvt$$9$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$ + 1])
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$PathUtils$.$curveThroughPoints$ = function $$dvt$$9$$$$PathUtils$$$curveThroughPoints$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if(0 == $DvtSvgShadowUtils$$.length) {
      return""
    }
    for(var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgFilterUtils$$ += 2) {
      $DvtSvgGradientUtils$$.push([$DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$ + 1]])
    }
    $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$ ? "L" : "M";
    return $DvtSvgImageFillUtils$$ == $dvt$$9$$.$PathUtils$.$SPLINE_TYPE_MONOTONE_VERTICAL$ ? $DvtSvgShadowUtils$$ + $Dvt3rdPartyPathUtils$$.$lineMonotone$($DvtSvgGradientUtils$$, $JSCompiler_alias_FALSE$$) : $DvtSvgImageFillUtils$$ == $dvt$$9$$.$PathUtils$.$SPLINE_TYPE_MONOTONE_HORIZONTAL$ ? $DvtSvgShadowUtils$$ + $Dvt3rdPartyPathUtils$$.$lineMonotone$($DvtSvgGradientUtils$$, $JSCompiler_alias_TRUE$$) : $DvtSvgImageFillUtils$$ == $dvt$$9$$.$PathUtils$.$SPLINE_TYPE_CARDINAL_CLOSED$ ? $DvtSvgShadowUtils$$ + 
    $Dvt3rdPartyPathUtils$$.$lineCardinalClosed$($DvtSvgGradientUtils$$) : $DvtSvgShadowUtils$$ + $Dvt3rdPartyPathUtils$$.$lineCardinal$($DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$PathUtils$.$createPathArray$ = function $$dvt$$9$$$$PathUtils$$$createPathArray$$($DvtSvgShadowUtils$$) {
    if(!$DvtSvgShadowUtils$$) {
      return $JSCompiler_alias_NULL$$
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/([mlqhvzca])/gi, ",$1,").split(/[ ,]/g);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImageFillUtils$$;
    for($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
      $DvtSvgGradientUtils$$ ? isNaN($DvtSvgGradientUtils$$) || ($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] = parseFloat($DvtSvgGradientUtils$$)) : ($DvtSvgShadowUtils$$.splice($DvtSvgImageFillUtils$$, 1), $DvtSvgImageFillUtils$$--, $DvtSvgPatternFillUtils$$--)
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$PathUtils$.$getDimensions$ = function $$dvt$$9$$$$PathUtils$$$getDimensions$$($DvtSvgShadowUtils$$) {
    if(!$DvtSvgShadowUtils$$ || !$DvtSvgShadowUtils$$.length) {
      return new $dvt$$9$$.$Rectangle$
    }
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = $JSCompiler_alias_TRUE$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$ = Number.MAX_VALUE, $DvtContextMenuTooltipItem$$ = Number.MIN_VALUE, $DvtCustomTooltipItem$$ = Number.MAX_VALUE, $DvtCustomTooltip$$ = Number.MIN_VALUE, $DvtCircularShape$$ = [], $DvtCustomTooltipEventHandler$$, $DvtCustomTooltipManager$$;
    for($DvtCustomTooltipEventHandler$$ = 0;$DvtCustomTooltipEventHandler$$ < $DvtSvgPatternFillUtils$$;$DvtCustomTooltipEventHandler$$++) {
      $DvtSvgImplFactory$$ = $JSCompiler_alias_FALSE$$;
      var $DvtStage$$ = 0;
      $DvtCustomTooltipManager$$ = 0;
      $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$];
      switch($DvtSvgImageFillUtils$$) {
        case "m":
          $DvtSvgImplFactory$$ = $JSCompiler_alias_TRUE$$;
        case "M":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 2], $DvtSvgFilterContext$$ ? $DvtSvgFilterContext$$ = $JSCompiler_alias_FALSE$$ : $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = 
            $DvtSvgImageFillUtils$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = $DvtHtmlRichTooltipManager$$, $DvtStage$$++, $DvtCustomTooltipEventHandler$$ += 2
          }while(!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1]));
          break;
        case "c":
          $DvtSvgImplFactory$$ = $JSCompiler_alias_TRUE$$;
        case "C":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 5], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 6], $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = $DvtSvgImageFillUtils$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = 
            $DvtHtmlRichTooltipManager$$, $DvtStage$$++, $DvtCustomTooltipEventHandler$$ += 6
          }while(!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1]));
          break;
        case "q":
          $DvtSvgImplFactory$$ = $JSCompiler_alias_TRUE$$;
        case "Q":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 3], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 4], $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = $DvtSvgImageFillUtils$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = 
            $DvtHtmlRichTooltipManager$$, $DvtStage$$++, $DvtCustomTooltipEventHandler$$ += 4
          }while(!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1]));
          break;
        case "l":
          $DvtSvgImplFactory$$ = $JSCompiler_alias_TRUE$$;
        case "L":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 2], $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = $DvtSvgImageFillUtils$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = 
            $DvtHtmlRichTooltipManager$$, $DvtStage$$++, $DvtCustomTooltipEventHandler$$ += 2
          }while(!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1]));
          break;
        case "h":
          $DvtSvgImplFactory$$ = $JSCompiler_alias_TRUE$$;
        case "H":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1], $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = $DvtSvgImageFillUtils$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = $DvtSvgFilterUtils$$, $DvtStage$$++, $DvtCustomTooltipEventHandler$$ += 1
          }while(!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1]));
          break;
        case "v":
          $DvtSvgImplFactory$$ = $JSCompiler_alias_TRUE$$;
        case "V":
          do {
            $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1], $DvtSvgImplFactory$$ && ($DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = $DvtSvgGradientUtils$$, $DvtCircularShape$$[$DvtCustomTooltipManager$$++] = $DvtHtmlRichTooltipManager$$, $DvtStage$$++, $DvtCustomTooltipEventHandler$$ += 1
          }while(!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltipEventHandler$$ + 1]))
      }
      for($DvtSvgImplFactory$$ = $DvtCustomTooltipManager$$ = 0;$DvtSvgImplFactory$$ < $DvtStage$$;$DvtSvgImplFactory$$++) {
        $DvtSvgImageFillUtils$$ = $DvtCircularShape$$[$DvtCustomTooltipManager$$++], $DvtHtmlRichTooltipManager$$ = $DvtCircularShape$$[$DvtCustomTooltipManager$$++], $DvtDomXmlParser$$ = Math.min($DvtDomXmlParser$$, $DvtSvgImageFillUtils$$), $DvtContextMenuTooltipItem$$ = Math.max($DvtContextMenuTooltipItem$$, $DvtSvgImageFillUtils$$), $DvtCustomTooltipItem$$ = Math.min($DvtCustomTooltipItem$$, $DvtHtmlRichTooltipManager$$), $DvtCustomTooltip$$ = Math.max($DvtCustomTooltip$$, $DvtHtmlRichTooltipManager$$)
      }
    }
    return new $dvt$$9$$.$Rectangle$($DvtDomXmlParser$$, $DvtCustomTooltipItem$$, Math.abs($DvtContextMenuTooltipItem$$ - $DvtDomXmlParser$$), Math.abs($DvtCustomTooltip$$ - $DvtCustomTooltipItem$$))
  };
  $dvt$$9$$.$PathUtils$.$getPathString$ = function $$dvt$$9$$$$PathUtils$$$getPathString$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = "", $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgFilterUtils$$++) {
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], $DvtSvgGradientUtils$$ !== $JSCompiler_alias_VOID$$ && $DvtSvgGradientUtils$$ !== $JSCompiler_alias_NULL$$ && ($DvtSvgPatternFillUtils$$ += (0 < $DvtSvgFilterUtils$$ ? " " : "") + $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$])
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$PathUtils$.$transformPath$ = function $$dvt$$9$$$$PathUtils$$$transformPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = "";
    if($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.match(/[a-z][^a-z]*/ig);
      for(var $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImplFactory$$++) {
        var $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$], $DvtDomXmlParser$$ = $DvtHtmlRichTooltipManager$$.charAt(0), $DvtContextMenuTooltipItem$$ = $DvtDomXmlParser$$ === $DvtDomXmlParser$$.toUpperCase(), $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$ + ($DvtDomXmlParser$$ + " "), $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.substring(1), $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.replace(/,/g, " "), $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.replace(/^\s+|\s+$/g, 
        "");
        if(0 < $DvtHtmlRichTooltipManager$$.length) {
          if($DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.split(/\s+/g), "A" === $DvtDomXmlParser$$.toUpperCase()) {
            for($DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtHtmlRichTooltipManager$$.length;$DvtDomXmlParser$$ += 7) {
              $DvtSvgFilterContext$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$]) * $DvtSvgGradientUtils$$) + " ", $DvtSvgFilterContext$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 1]) * $DvtSvgFilterUtils$$) + " ", $DvtSvgFilterContext$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 2]) + " ", $DvtSvgFilterContext$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 
              3]) + " ", $DvtSvgFilterContext$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 4]) + " ", $DvtSvgFilterContext$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 5]) * $DvtSvgGradientUtils$$ + ($DvtContextMenuTooltipItem$$ ? $DvtSvgPatternFillUtils$$ : 0)) + " ", $DvtSvgFilterContext$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 
              6]) * $DvtSvgFilterUtils$$ + ($DvtContextMenuTooltipItem$$ ? $DvtSvgImageFillUtils$$ : 0)) + " "
            }
          }else {
            var $DvtCustomTooltipItem$$ = [], $DvtCustomTooltip$$ = [];
            "H" === $DvtDomXmlParser$$.toUpperCase() ? ($DvtCustomTooltipItem$$.push($DvtSvgGradientUtils$$), $DvtCustomTooltip$$.push($DvtContextMenuTooltipItem$$ ? $DvtSvgPatternFillUtils$$ : 0)) : ("V" === $DvtDomXmlParser$$.toUpperCase() ? $DvtCustomTooltipItem$$.push($DvtSvgFilterUtils$$) : ($DvtCustomTooltipItem$$.push($DvtSvgGradientUtils$$), $DvtCustomTooltipItem$$.push($DvtSvgFilterUtils$$), $DvtCustomTooltip$$.push($DvtContextMenuTooltipItem$$ ? $DvtSvgPatternFillUtils$$ : 0)), $DvtCustomTooltip$$.push($DvtContextMenuTooltipItem$$ ? 
            $DvtSvgImageFillUtils$$ : 0));
            for($DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtHtmlRichTooltipManager$$.length;$DvtDomXmlParser$$++) {
              $DvtSvgFilterContext$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$]) * $DvtCustomTooltipItem$$[$DvtDomXmlParser$$ % $DvtCustomTooltipItem$$.length] + $DvtCustomTooltip$$[$DvtDomXmlParser$$ % $DvtCustomTooltip$$.length]) + " "
            }
          }
        }
      }
      return $DvtSvgFilterContext$$
    }
  };
  $dvt$$9$$.$PathUtils$.$_fitsInScale$ = function $$dvt$$9$$$$PathUtils$$$_fitsInScale$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return Math.abs($DvtSvgShadowUtils$$) > $DvtSvgImageFillUtils$$ || Math.abs($DvtSvgPatternFillUtils$$) > $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$PathUtils$.$simplifyPath$ = function $$dvt$$9$$$$PathUtils$$$simplifyPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$ = "", $DvtSvgFilterUtils$$ = "", $DvtSvgFilterContext$$ = 0, $DvtSvgImplFactory$$ = 0, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$ = 0, $DvtContextMenuTooltipItem$$ = 0, $DvtCustomTooltipItem$$ = 0, $DvtCustomTooltip$$ = 0;$DvtCustomTooltip$$ < $DvtSvgShadowUtils$$.length;$DvtCustomTooltip$$++) {
      if(isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltip$$])) {
        if($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$], "Z" == $DvtSvgImageFillUtils$$ || "z" == $DvtSvgImageFillUtils$$) {
          $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ += $DvtSvgImageFillUtils$$, 0 < $DvtCustomTooltipItem$$ && ($DvtSvgGradientUtils$$ += $DvtSvgFilterUtils$$, $DvtContextMenuTooltipItem$$ = $DvtDomXmlParser$$ = 0), $DvtSvgFilterUtils$$ = "", $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ = $DvtCustomTooltipItem$$ = 0
        }
      }else {
        switch($DvtSvgImageFillUtils$$) {
          case "M":
            $DvtContextMenuTooltipItem$$ = $DvtDomXmlParser$$ = 0;
          case "m":
            $DvtDomXmlParser$$ += $DvtSvgShadowUtils$$[$DvtCustomTooltip$$];
            $DvtContextMenuTooltipItem$$ += $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1];
            $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ + $DvtSvgImageFillUtils$$ + $DvtDomXmlParser$$ + " " + $DvtContextMenuTooltipItem$$;
            $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$;
            $DvtCustomTooltip$$++;
            break;
          case "l":
            $DvtSvgFilterContext$$ += $DvtSvgShadowUtils$$[$DvtCustomTooltip$$];
            $DvtSvgImplFactory$$ += $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1];
            $dvt$$9$$.$PathUtils$.$_fitsInScale$($DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$) && ($DvtHtmlRichTooltipManager$$ != $DvtSvgImageFillUtils$$ ? ($DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ += $DvtSvgImageFillUtils$$) : $DvtSvgFilterUtils$$ += " ", $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$ + " " + $DvtSvgImplFactory$$, $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ = 0, $DvtCustomTooltipItem$$++);
            $DvtCustomTooltip$$++;
            break;
          case "h":
          ;
          case "v":
            "h" == $DvtSvgImageFillUtils$$ ? $DvtSvgFilterContext$$ += $DvtSvgShadowUtils$$[$DvtCustomTooltip$$] : $DvtSvgImplFactory$$ += $DvtSvgShadowUtils$$[$DvtCustomTooltip$$], $dvt$$9$$.$PathUtils$.$_fitsInScale$($DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$) && (0 != $DvtSvgFilterContext$$ && 0 != $DvtSvgImplFactory$$ ? ("l" != $DvtHtmlRichTooltipManager$$ ? ($DvtHtmlRichTooltipManager$$ = "l", $DvtSvgFilterUtils$$ += "l") : $DvtSvgFilterUtils$$ += " ", $DvtSvgFilterUtils$$ = 
            $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$ + " " + $DvtSvgImplFactory$$) : ($DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ + $DvtSvgImageFillUtils$$ + ("h" == $DvtSvgImageFillUtils$$ ? $DvtSvgFilterContext$$ : $DvtSvgImplFactory$$)), $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ = 0, $DvtCustomTooltipItem$$++)
        }
      }
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtMarkerDefElem$$, $dvt$$9$$.$PropMap$);
  $DvtMarkerDefElem$$.$ATTR_ELEMENTS$ = "elements";
  $DvtMarkerDefElem$$.$ATTR_SHAPE$ = "shape";
  $DvtMarkerDefElem$$.$ATTR_BORDER_COLOR$ = "bc";
  $DvtMarkerDefElem$$.$ATTR_FILL_COLOR$ = "fc";
  $DvtMarkerDefElem$$.$ATTR_FILL_PATTERN$ = "fp";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRADIENT$ = "fg";
  $DvtMarkerDefElem$$.$ATTR_DATA$ = "d";
  $DvtMarkerDefElem$$.$ATTR_POINTS$ = "p";
  $DvtMarkerDefElem$$.$ATTR_LINE_WIDTH$ = "lw";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_COLORS$ = "c";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_STOPS$ = "p";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_BOUNDS$ = "b";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR$ = "dir";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_RADIAL$ = "gdR";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_RIGHT$ = "gdRi";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_DOWN$ = "gdD";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_45$ = "gdD45";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_135$ = "gdD135";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_CX$ = "cx";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_CY$ = "cy";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_RADIUS$ = "r";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_RADIUSX$ = "rx";
  $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_RADIUSY$ = "ry";
  $DvtMarkerDefElem$$.$ATTR_ANGLES$ = "ang";
  $DvtMarkerDefElem$$.$ATTR_CLOSURE_TYPE$ = "ct";
  $DvtMarkerDefElem$$.$ATTR_TRANSFORM$ = "transform";
  $DvtMarkerDefElem$$.prototype.Init = function $$DvtMarkerDefElem$$$$Init$() {
    $DvtMarkerDefElem$$.$superclass$.Init.call(this)
  };
  $DvtMarkerDefElem$$.prototype.$getShape$ = function $$DvtMarkerDefElem$$$$$getShape$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_SHAPE$)
  };
  $DvtMarkerDefElem$$.prototype.$setShape$ = function $$DvtMarkerDefElem$$$$$setShape$$($DvtSvgShadowUtils$$) {
    this.setProperty($DvtMarkerDefElem$$.$ATTR_SHAPE$, $DvtSvgShadowUtils$$)
  };
  $DvtMarkerDefElem$$.prototype.getData = function $$DvtMarkerDefElem$$$$getData$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_DATA$)
  };
  $DvtMarkerDefElem$$.prototype.$getPoints$ = function $$DvtMarkerDefElem$$$$$getPoints$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_POINTS$)
  };
  $DvtMarkerDefElem$$.prototype.$setPoints$ = function $$DvtMarkerDefElem$$$$$setPoints$$($DvtSvgShadowUtils$$) {
    this.setProperty($DvtMarkerDefElem$$.$ATTR_POINTS$, $DvtSvgShadowUtils$$)
  };
  $DvtMarkerDefElem$$.prototype.$getClosureType$ = function $$DvtMarkerDefElem$$$$$getClosureType$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_CLOSURE_TYPE$)
  };
  $DvtMarkerDefElem$$.prototype.$getAngles$ = function $$DvtMarkerDefElem$$$$$getAngles$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_ANGLES$)
  };
  $DvtMarkerDefElem$$.prototype.$getBorderColor$ = function $$DvtMarkerDefElem$$$$$getBorderColor$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_BORDER_COLOR$)
  };
  $DvtMarkerDefElem$$.prototype.$getLineWidth$ = function $$DvtMarkerDefElem$$$$$getLineWidth$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_LINE_WIDTH$)
  };
  $DvtMarkerDefElem$$.prototype.$getFillColor$ = function $$DvtMarkerDefElem$$$$$getFillColor$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_COLOR$)
  };
  $DvtMarkerDefElem$$.prototype.$getFillPattern$ = function $$DvtMarkerDefElem$$$$$getFillPattern$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_PATTERN$)
  };
  $DvtMarkerDefElem$$.prototype.$getFillGradient$ = function $$DvtMarkerDefElem$$$$$getFillGradient$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRADIENT$)
  };
  $DvtMarkerDefElem$$.prototype.$getGradColors$ = function $$DvtMarkerDefElem$$$$$getGradColors$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_COLORS$).split(",")
  };
  $DvtMarkerDefElem$$.prototype.$getGradStops$ = function $$DvtMarkerDefElem$$$$$getGradStops$$() {
    var $DvtSvgShadowUtils$$ = this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_STOPS$).split(",");
    $dvt$$9$$.$ArrayUtils$.$toFloat$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $DvtMarkerDefElem$$.prototype.$getGradBounds$ = function $$DvtMarkerDefElem$$$$$getGradBounds$$() {
    var $DvtSvgShadowUtils$$ = this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_BOUNDS$).split(",");
    $dvt$$9$$.$ArrayUtils$.$toFloat$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $DvtMarkerDefElem$$.prototype.$getGradDir$ = function $$DvtMarkerDefElem$$$$$getGradDir$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR$)
  };
  $DvtMarkerDefElem$$.prototype.$getGradRadius$ = function $$DvtMarkerDefElem$$$$$getGradRadius$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_RADIUS$)
  };
  $DvtMarkerDefElem$$.prototype.$getGradRadiusX$ = function $$DvtMarkerDefElem$$$$$getGradRadiusX$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_RADIUSX$)
  };
  $DvtMarkerDefElem$$.prototype.$getGradRadiusY$ = function $$DvtMarkerDefElem$$$$$getGradRadiusY$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_RADIUSY$)
  };
  $DvtMarkerDefElem$$.prototype.$getGradCx$ = function $$DvtMarkerDefElem$$$$$getGradCx$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_CX$)
  };
  $DvtMarkerDefElem$$.prototype.$getGradCy$ = function $$DvtMarkerDefElem$$$$$getGradCy$$() {
    return this.$getProperty$($DvtMarkerDefElem$$.$ATTR_FILL_GRAD_CY$)
  };
  $dvt$$9$$.$MarkerDef$ = function $$dvt$$9$$$$MarkerDef$$() {
    this.Init()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$MarkerDef$, $dvt$$9$$.$PropMap$);
  $dvt$$9$$.$MarkerDef$.$MARKER_DEF$ = "markerDef";
  $dvt$$9$$.$MarkerDef$.$MARKER_DEF_CIRCLE$ = "c";
  $dvt$$9$$.$MarkerDef$.$MARKER_DEF_ELLIPSE$ = "o";
  $dvt$$9$$.$MarkerDef$.$MARKER_DEF_LINE$ = "l";
  $dvt$$9$$.$MarkerDef$.$MARKER_DEF_PATH$ = "p";
  $dvt$$9$$.$MarkerDef$.$MARKER_DEF_POLYGON$ = "pg";
  $dvt$$9$$.$MarkerDef$.$MARKER_DEF_POLYLINE$ = "pl";
  $dvt$$9$$.$MarkerDef$.$MARKER_DEF_RECT$ = "r";
  $dvt$$9$$.$MarkerDef$.$ATTR_ELEMENTS$ = "elements";
  $dvt$$9$$.$MarkerDef$.$ATTR_BORDER_COLOR$ = "bc";
  $dvt$$9$$.$MarkerDef$.$ATTR_LINE_WIDTH$ = "lw";
  $dvt$$9$$.$MarkerDef$.$ATTR_FILL_COLOR$ = "fc";
  $dvt$$9$$.$MarkerDef$.$ATTR_FILL_PATTERN$ = "fp";
  $dvt$$9$$.$MarkerDef$.$ATTR_FILL_GRADIENT$ = "fg";
  $dvt$$9$$.$MarkerDef$.$BI_DEFAULT_MARKER_SIZE$ = 9;
  $dvt$$9$$.$MarkerDef$.$HUMAN_CMDS$ = "M 38.07,36.467856 q 13.414,0 13.414,-13.406 l 0,-9.258 q 0,-13.4039999 -13.414,-13.4039999 -13.414,0 -13.414,13.4039999 l 0,9.258 q 0,13.406 13.414,13.406 l 0,0 z m 16.219,7.275 -32.435999,0 q -10.139552,0 -15.9400009,7.443875 Q 0.5,58.133383 0.5,69.156856 l 0,54.396004 12.746001,0 0,-51.609004 q 0,-2.824 0.793,-2.824 0.742,0 0.742,2.709 l 0,124.267994 q 0,2.82401 2.823999,2.82401 l 12.531,0 q 2.824,0 2.824,-2.824 l 0,-66.25 10.219,0 0,66.25 q 0,2.824 2.824,2.824 l 12.528,0 q 2.825,0 2.825,-2.824 l 0,-124.268004 q 0,-2.709 0.839,-2.709 0.792,0 0.792,2.824 l 0,51.609004 12.65,0 0,-54.396004 Q 75.6386,58.132927 70.227626,51.186731 64.428999,43.742856 54.289,43.742856 l 0,0 z";
  $dvt$$9$$.$MarkerDef$.$HUMAN2_CMDS$ = "M 306.40625 386.78125 C 304.19988 386.78125 302.40625 389.07579 302.40625 391.90625 C 302.40625 394.73671 304.19988 397.03125 306.40625 397.03125 C 308.61263 397.03125 310.40625 394.73671 310.40625 391.90625 C 310.40625 389.07579 308.61263 386.78125 306.40625 386.78125 z M 301.78125 396.0625 C 300.43025 397.2945 298.28125 400.28125 298.90625 403.15625 C 302.41725 405.79925 309.20225 406.154 314.03125 403 C 314.21825 399.828 312.68325 397.5635 310.90625 396.0625 C 308.65625 400.7185 304.28125 399.7815 301.78125 396.0625 z ";
  $dvt$$9$$.$MarkerDef$.$SHAPE_STAR_CMDS$ = [-50, -11.22, -16.69, -17.94, 0, -47.55, 16.69, -17.94, 50, -11.22, 26.69, 13.8, 30.9, 47.56, 0, 33.42, -30.9, 47.56, -26.69, 13.8];
  $dvt$$9$$.$MarkerDef$.prototype.Init = function $$dvt$$9$$$$MarkerDef$$$Init$() {
    $dvt$$9$$.$MarkerDef$.$superclass$.Init.call(this)
  };
  $dvt$$9$$.$MarkerDef$.prototype.$getBorderColor$ = function $$dvt$$9$$$$MarkerDef$$$$getBorderColor$$() {
    return this.$getProperty$($dvt$$9$$.$MarkerDef$.$ATTR_BORDER_COLOR$)
  };
  $dvt$$9$$.$MarkerDef$.prototype.$getLineWidth$ = function $$dvt$$9$$$$MarkerDef$$$$getLineWidth$$() {
    return this.$getProperty$($dvt$$9$$.$MarkerDef$.$ATTR_LINE_WIDTH$)
  };
  $dvt$$9$$.$MarkerDef$.prototype.$getFillColor$ = function $$dvt$$9$$$$MarkerDef$$$$getFillColor$$() {
    return this.$getProperty$($dvt$$9$$.$MarkerDef$.$ATTR_FILL_COLOR$)
  };
  $dvt$$9$$.$MarkerDef$.prototype.$getFillPattern$ = function $$dvt$$9$$$$MarkerDef$$$$getFillPattern$$() {
    return this.$getProperty$($dvt$$9$$.$MarkerDef$.$ATTR_FILL_PATTERN$)
  };
  $dvt$$9$$.$MarkerDef$.prototype.$getFillGradient$ = function $$dvt$$9$$$$MarkerDef$$$$getFillGradient$$() {
    return this.$getProperty$($dvt$$9$$.$MarkerDef$.$ATTR_FILL_GRADIENT$)
  };
  $dvt$$9$$.$MarkerDef$.prototype.$getDimensions$ = function $$dvt$$9$$$$MarkerDef$$$$getDimensions$$() {
    var $DvtSvgShadowUtils$$ = this.$getProperty$("dx"), $DvtSvgPatternFillUtils$$ = this.$getProperty$("dy"), $DvtSvgImageFillUtils$$ = this.$getProperty$("dw"), $DvtSvgGradientUtils$$ = this.$getProperty$("dh");
    return $DvtSvgImageFillUtils$$ && $DvtSvgGradientUtils$$ ? new $dvt$$9$$.$Rectangle$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$MarkerDef$.prototype.$getElements$ = function $$dvt$$9$$$$MarkerDef$$$$getElements$$() {
    return this.$getProperty$($dvt$$9$$.$MarkerDef$.$ATTR_ELEMENTS$)
  };
  $dvt$$9$$.$MarkerDef$.prototype.addElement = function $$dvt$$9$$$$MarkerDef$$$addElement$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getElements$();
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = [], this.setProperty($dvt$$9$$.$MarkerDef$.$ATTR_ELEMENTS$, $DvtSvgPatternFillUtils$$));
    $DvtSvgPatternFillUtils$$.push($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$MarkerGradient$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$MarkerGradient$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$MarkerGradient$.$createMarkerGradient$ = function $$dvt$$9$$$$MarkerGradient$$$createMarkerGradient$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = [];
    $DvtSvgImageFillUtils$$ = [$DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$];
    $DvtSvgFilterUtils$$ = $JSCompiler_alias_NULL$$;
    $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getType$();
    $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DisplayableUtils$.$getDimForced$($DvtSvgPatternFillUtils$$.$getCtx$(), $DvtSvgPatternFillUtils$$);
    $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getCenter$();
    $DvtSvgPatternFillUtils$$ = Math.min($DvtSvgPatternFillUtils$$.$w$, $DvtSvgPatternFillUtils$$.$h$);
    if($DvtSvgFilterUtils$$ != $dvt$$9$$.$Marker$.$HUMAN$) {
      var $DvtSvgFilterUtils$$ = [0, 0.5, 0.75, 1], $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$getPastel$($DvtSvgShadowUtils$$, 0.2), $DvtSvgImplFactory$$ = $dvt$$9$$.$ColorUtils$.$getPastel$($DvtSvgShadowUtils$$, 0.1), $DvtHtmlRichTooltipManager$$ = $dvt$$9$$.$ColorUtils$.$getDarker$($DvtSvgShadowUtils$$, 0.8);
      $DvtSvgPatternFillUtils$$ /= 2;
      var $DvtDomXmlParser$$ = $DvtSvgGradientUtils$$.x, $DvtContextMenuTooltipItem$$ = $DvtSvgGradientUtils$$.y, $DvtSvgGradientUtils$$ = [$dvt$$9$$.$ColorUtils$.$getPound$($DvtSvgFilterContext$$), $dvt$$9$$.$ColorUtils$.$getPound$($DvtSvgImplFactory$$), $DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$getPound$($DvtHtmlRichTooltipManager$$)];
      $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Rectangle$(-$DvtSvgPatternFillUtils$$, -$DvtSvgPatternFillUtils$$, 2 * $DvtSvgPatternFillUtils$$, 2 * $DvtSvgPatternFillUtils$$);
      $DvtSvgShadowUtils$$ = [$DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$];
      $DvtSvgFilterUtils$$ = new $dvt$$9$$.$RadialGradientFill$($DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
    }else {
      $DvtSvgFilterUtils$$ = [0, 0.3, 0.7, 1], $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$getPastel$($DvtSvgShadowUtils$$, 0.2), $DvtSvgImplFactory$$ = $dvt$$9$$.$ColorUtils$.$getDarker$($DvtSvgShadowUtils$$, 0.9), $DvtHtmlRichTooltipManager$$ = $dvt$$9$$.$ColorUtils$.$getDarker$($DvtSvgShadowUtils$$, 0.8), $DvtSvgGradientUtils$$ = [$dvt$$9$$.$ColorUtils$.$getPound$($DvtSvgFilterContext$$), $dvt$$9$$.$ColorUtils$.$getPound$($DvtSvgImplFactory$$), $DvtSvgShadowUtils$$, $dvt$$9$$.$ColorUtils$.$getPound$($DvtHtmlRichTooltipManager$$)], 
      $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Rectangle$(-$DvtSvgPatternFillUtils$$ / 2, -$DvtSvgPatternFillUtils$$ / 2, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$ = [$DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$], $DvtSvgFilterUtils$$ = new $dvt$$9$$.$LinearGradientFill$(135, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$)
    }
    return $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$MarkerUtils$ = {$_cache$:{}};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$MarkerUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$MarkerUtils$.$createMarkerDef$ = function $$dvt$$9$$$$MarkerUtils$$$createMarkerDef$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$MarkerDef$;
    $DvtSvgImageFillUtils$$.$setProperties$($DvtSvgPatternFillUtils$$.getAttributes());
    for(var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getChildNodes$(), $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgGradientUtils$$.length;$DvtSvgFilterContext$$++) {
      var $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$[$DvtSvgFilterContext$$];
      $DvtSvgImplFactory$$ && ($DvtSvgFilterUtils$$ = new $DvtMarkerDefElem$$, "fillDef" == $DvtSvgImplFactory$$.getName() && $DvtSvgImplFactory$$.$getChildNodes$() && ($DvtSvgImplFactory$$ = $DvtSvgImplFactory$$.$getChildNodes$()[0]), $DvtSvgFilterUtils$$.$setProperties$($DvtSvgImplFactory$$.getAttributes()), $DvtSvgFilterUtils$$.$setShape$($DvtSvgImplFactory$$.getName()), $DvtSvgImageFillUtils$$.addElement($DvtSvgFilterUtils$$))
    }
    $DvtSvgImageFillUtils$$ && this.$_addMarkerDef$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$MarkerUtils$.$_addMarkerDef$ = function $$dvt$$9$$$$MarkerUtils$$$_addMarkerDef$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$_stage$.getId(), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.getId(), $DvtSvgFilterUtils$$ = $dvt$$9$$.$MarkerUtils$.$getMarkerList$($DvtSvgImageFillUtils$$);
    if(!$DvtSvgFilterUtils$$[$DvtSvgGradientUtils$$] && ($DvtSvgImageFillUtils$$ = this.$createMultiPaths$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$))) {
      $DvtSvgImageFillUtils$$.setId("custom" + $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$[$DvtSvgGradientUtils$$] = $DvtSvgImageFillUtils$$, ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getDimensions$()) && $dvt$$9$$.$DisplayableUtils$.$_setDimForced$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
    }
  };
  $dvt$$9$$.$MarkerUtils$.$getMarkerList$ = function $$dvt$$9$$$$MarkerUtils$$$getMarkerList$$($DvtSvgShadowUtils$$) {
    this.$_cache$[$DvtSvgShadowUtils$$] || (this.$_cache$[$DvtSvgShadowUtils$$] = {});
    return this.$_cache$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$MarkerUtils$.$createMarkerShape$ = function $$dvt$$9$$$$MarkerUtils$$$createMarkerShape$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$;
    $DvtSvgPatternFillUtils$$.$getShape$() == $dvt$$9$$.$MarkerDef$.$MARKER_DEF_PATH$ && ($DvtSvgFilterUtils$$ = this.$createPathMarker$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$));
    $DvtSvgFilterUtils$$ && $dvt$$9$$.$MarkerUtils$.$setCommonAttrs$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    return $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$MarkerUtils$.$createMultiPaths$ = function $$dvt$$9$$$$MarkerUtils$$$createMultiPaths$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getElements$();
    if(!$DvtSvgGradientUtils$$ || 0 == $DvtSvgGradientUtils$$.length) {
      return $JSCompiler_alias_NULL$$
    }
    var $DvtSvgFilterUtils$$;
    if(1 == $DvtSvgGradientUtils$$.length) {
      $DvtSvgFilterUtils$$ = $dvt$$9$$.$MarkerUtils$.$createMarkerShape$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$[0], $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
    }else {
      $DvtSvgFilterUtils$$ = new $dvt$$9$$.$Container$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
      for(var $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgGradientUtils$$.length;$DvtSvgImplFactory$$++) {
        $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$[$DvtSvgImplFactory$$], ($DvtSvgFilterContext$$ = $dvt$$9$$.$MarkerUtils$.$createMarkerShape$($DvtSvgShadowUtils$$, $DvtSvgFilterContext$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ + "_" + $DvtSvgImplFactory$$)) && $DvtSvgFilterUtils$$.$addChild$($DvtSvgFilterContext$$)
      }
    }
    return $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$MarkerUtils$.$createCircleMarker$ = function $$dvt$$9$$$$MarkerUtils$$$createCircleMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getPoints$(), $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$[0], $DvtSvgImplFactory$$ = $DvtSvgFilterUtils$$[1], $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterUtils$$[2], $DvtDomXmlParser$$;
    $DvtSvgGradientUtils$$ == $dvt$$9$$.$MarkerDef$.$MARKER_DEF_ELLIPSE$ && ($DvtDomXmlParser$$ = $DvtSvgFilterUtils$$[3]);
    if($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getClosureType$()) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getAngles$();
      var $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$;
      $DvtSvgPatternFillUtils$$ && ($DvtContextMenuTooltipItem$$ = $DvtSvgPatternFillUtils$$[0], $DvtCustomTooltipItem$$ = $DvtSvgPatternFillUtils$$[1]);
      $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Arc$($DvtSvgShadowUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$)
    }else {
      $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Circle$($DvtSvgShadowUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtSvgImageFillUtils$$)
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$MarkerUtils$.$createRectMarker$ = function $$dvt$$9$$$$MarkerUtils$$$createRectMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getPoints$();
    return new $dvt$$9$$.$Rect$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$[0], $DvtSvgPatternFillUtils$$[1], $DvtSvgPatternFillUtils$$[2], $DvtSvgPatternFillUtils$$[3], $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$MarkerUtils$.$createLineMarker$ = function $$dvt$$9$$$$MarkerUtils$$$createLineMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getPoints$();
    return new $dvt$$9$$.$Line$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$[0], $DvtSvgPatternFillUtils$$[1], $DvtSvgPatternFillUtils$$[2], $DvtSvgPatternFillUtils$$[3], $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$MarkerUtils$.$createPathMarker$ = function $$dvt$$9$$$$MarkerUtils$$$createPathMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.getData();
    return new $dvt$$9$$.$Path$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$MarkerUtils$.$createPolygoneMarker$ = function $$dvt$$9$$$$MarkerUtils$$$createPolygoneMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return new $dvt$$9$$.$Polygon$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$.$getPoints$(), $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$MarkerUtils$.$createPolylineMarker$ = function $$dvt$$9$$$$MarkerUtils$$$createPolylineMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return new $dvt$$9$$.$Polyline$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$.$getPoints$(), $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$MarkerUtils$.$setCommonAttrs$ = function $$dvt$$9$$$$MarkerUtils$$$setCommonAttrs$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getFillColor$(), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getFillGradient$(), $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.$getFillPattern$();
    if($DvtSvgFilterContext$$) {
      $DvtSvgImageFillUtils$$.$setFill$(new $dvt$$9$$.$PatternFill$($DvtSvgFilterContext$$, $DvtSvgGradientUtils$$))
    }else {
      if($DvtSvgFilterUtils$$) {
        var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getElements$(), $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.length;
        for($DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgPatternFillUtils$$;$DvtSvgFilterContext$$++) {
          var $DvtHtmlRichTooltipManager$$ = $DvtSvgGradientUtils$$[$DvtSvgFilterContext$$];
          if("g" == $DvtHtmlRichTooltipManager$$.$getShape$() && $DvtHtmlRichTooltipManager$$.getId() == $DvtSvgFilterUtils$$) {
            $DvtSvgImplFactory$$ = $DvtHtmlRichTooltipManager$$;
            break
          }
        }
        var $DvtDomXmlParser$$;
        $DvtSvgImplFactory$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgImplFactory$$.$getGradColors$(), $DvtSvgFilterUtils$$ = $DvtSvgImplFactory$$.$getGradStops$(), $DvtSvgPatternFillUtils$$ = $DvtSvgImplFactory$$.$getGradBounds$(), $DvtSvgFilterContext$$ = $DvtSvgImplFactory$$.$getGradDir$(), $DvtSvgFilterContext$$ == $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_RADIAL$ ? ($DvtSvgFilterContext$$ = parseFloat($DvtSvgImplFactory$$.$getGradCx$()), $DvtHtmlRichTooltipManager$$ = parseFloat($DvtSvgImplFactory$$.$getGradCy$()), 
        ($DvtDomXmlParser$$ = parseFloat($DvtSvgImplFactory$$.$getGradRadius$())) || ($DvtDomXmlParser$$ = Math.max(parseFloat($DvtSvgImplFactory$$.$getGradRadiusX$()), parseFloat($DvtSvgImplFactory$$.$getGradRadiusY$()))), $DvtSvgImageFillUtils$$.$setFill$(new $dvt$$9$$.$RadialGradientFill$($DvtSvgGradientUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtSvgPatternFillUtils$$))) : ($DvtSvgImplFactory$$ = 0, $DvtSvgFilterContext$$ == 
        $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_45$ ? $DvtSvgImplFactory$$ = -135 : $DvtSvgFilterContext$$ == $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_135$ ? $DvtSvgImplFactory$$ = -45 : $DvtSvgFilterContext$$ == $DvtMarkerDefElem$$.$ATTR_FILL_GRAD_DIR_DOWN$ && ($DvtSvgImplFactory$$ = -90), $DvtSvgImageFillUtils$$.$setFill$(new $dvt$$9$$.$LinearGradientFill$($DvtSvgImplFactory$$, $DvtSvgGradientUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$)))) : $DvtSvgImageFillUtils$$.$setFill$(new $dvt$$9$$.$LinearGradientFill$(0, 
        ["#000", "#fff"]))
      }else {
        $DvtSvgGradientUtils$$ && $DvtSvgImageFillUtils$$.$setSolidFill$($DvtSvgGradientUtils$$, $JSCompiler_alias_NULL$$)
      }
    }
    $DvtSvgImplFactory$$ = parseFloat($DvtSvgShadowUtils$$.$getLineWidth$());
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getBorderColor$();
    if($DvtSvgImplFactory$$ || $DvtSvgShadowUtils$$) {
      $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = 1), $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = "black"), $DvtSvgShadowUtils$$ = new $dvt$$9$$.$SolidStroke$($DvtSvgShadowUtils$$, 1, $DvtSvgImplFactory$$), $DvtSvgImageFillUtils$$.$setStroke$($DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$MarkerUtils$.$getCustomMarkerInfo$ = function $$dvt$$9$$$$MarkerUtils$$$getCustomMarkerInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$_stage$.getId();
    if($DvtSvgImageFillUtils$$ = $dvt$$9$$.$MarkerUtils$.$getMarkerList$($DvtSvgImageFillUtils$$)) {
      return $DvtSvgImageFillUtils$$[$DvtSvgPatternFillUtils$$]
    }
  };
  $dvt$$9$$.$MarkerUtils$.$getBuiltinMarkerInfo$ = function $$dvt$$9$$$$MarkerUtils$$$getBuiltinMarkerInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$_stage$.getId(), $DvtSvgGradientUtils$$ = $dvt$$9$$.$MarkerUtils$.$getMarkerList$($DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ + "_" + $DvtSvgImageFillUtils$$ : $DvtSvgPatternFillUtils$$;
    !$DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$] && $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Path$($DvtSvgShadowUtils$$, $dvt$$9$$.$CSSStyle$.$afterSkinAlta$($DvtSvgImageFillUtils$$) ? $dvt$$9$$.$MarkerDef$.$HUMAN2_CMDS$ : $dvt$$9$$.$MarkerDef$.$HUMAN_CMDS$, "dvtHuman"), $dvt$$9$$.$DisplayableUtils$.$getDimForced$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$]
  };
  $dvt$$9$$.$MarkerUtils$.$clearCached$ = function $$dvt$$9$$$$MarkerUtils$$$clearCached$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$_stage$.getId();
    this.$_cache$[$DvtSvgShadowUtils$$] = $JSCompiler_alias_VOID$$
  };
  $dvt$$9$$.$PolygonUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$PolygonUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$PolygonUtils$.$getDimensions$ = function $$dvt$$9$$$$PolygonUtils$$$getDimensions$$($DvtSvgShadowUtils$$) {
    if(!$DvtSvgShadowUtils$$ || 0 === $DvtSvgShadowUtils$$.length) {
      return new $dvt$$9$$.$Rectangle$
    }
    for(var $DvtSvgPatternFillUtils$$ = Number.MAX_VALUE, $DvtSvgImageFillUtils$$ = Number.MIN_VALUE, $DvtSvgGradientUtils$$ = Number.MAX_VALUE, $DvtSvgFilterUtils$$ = Number.MIN_VALUE, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtSvgFilterContext$$;$DvtDomXmlParser$$++) {
      $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$[$DvtDomXmlParser$$++], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtDomXmlParser$$], $DvtSvgPatternFillUtils$$ = Math.min($DvtSvgPatternFillUtils$$, $DvtSvgImplFactory$$), $DvtSvgImageFillUtils$$ = Math.max($DvtSvgImageFillUtils$$, $DvtSvgImplFactory$$), $DvtSvgGradientUtils$$ = Math.min($DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$), $DvtSvgFilterUtils$$ = Math.max($DvtSvgFilterUtils$$, $DvtHtmlRichTooltipManager$$)
    }
    return new $dvt$$9$$.$Rectangle$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, Math.abs($DvtSvgImageFillUtils$$ - $DvtSvgPatternFillUtils$$), Math.abs($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$))
  };
  $dvt$$9$$.$PolygonUtils$.$getRegularPolygonPoints$ = function $$dvt$$9$$$$PolygonUtils$$$getRegularPolygonPoints$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    for(var $dvt$$9$$ = [], $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgImageFillUtils$$;$DvtSvgImplFactory$$++) {
      $DvtSvgFilterContext$$ = 0 + 2 * ($DvtSvgImplFactory$$ / $DvtSvgImageFillUtils$$) * Math.PI * (0 == $DvtSvgFilterUtils$$ ? -1 : 1), $dvt$$9$$.push($DvtSvgShadowUtils$$ + $DvtSvgGradientUtils$$ * Math.sin($DvtSvgFilterContext$$), $DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$ * Math.cos($DvtSvgFilterContext$$))
    }
    return $dvt$$9$$
  };
  $dvt$$9$$.$PolygonUtils$.scale = function $$dvt$$9$$$$PolygonUtils$$scale$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for(var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgShadowUtils$$.length - 1;$DvtSvgFilterUtils$$ += 2) {
      $DvtSvgGradientUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$] * $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$ + 1] * $DvtSvgImageFillUtils$$)
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$PolygonUtils$.translate = function $$dvt$$9$$$$PolygonUtils$$translate$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for(var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgShadowUtils$$.length - 1;$DvtSvgFilterUtils$$ += 2) {
      $DvtSvgGradientUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$] + $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$ + 1] + $DvtSvgImageFillUtils$$)
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$TextUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$TextUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$TextUtils$.$_cachedTextDimensions$ = {};
  $dvt$$9$$.$TextUtils$.$EMPTY_TEXT_BUFFER$ = 2;
  $dvt$$9$$.$TextUtils$.$getMaxTextDimensions$ = function $$dvt$$9$$$$TextUtils$$$getMaxTextDimensions$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$ = 0, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
      if($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$] != $JSCompiler_alias_NULL$$) {
        var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$].$getDimensions$(), $DvtSvgPatternFillUtils$$ = Math.max($DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$.$w$), $DvtSvgImageFillUtils$$ = Math.max($DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$.$h$)
      }
    }
    return new $dvt$$9$$.$Dimension$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$TextUtils$.$getTextStringDimensions$ = function $$dvt$$9$$$$TextUtils$$$getTextStringDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$9$$.$OutputText$.$getCachedDimensions$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    if($DvtSvgGradientUtils$$ != $JSCompiler_alias_NULL$$) {
      return $DvtSvgGradientUtils$$
    }
    $DvtSvgShadowUtils$$ = new $dvt$$9$$.$OutputText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$.$setCSSStyle$($DvtSvgImageFillUtils$$);
    return $DvtSvgShadowUtils$$.$getDimensions$()
  };
  $dvt$$9$$.$TextUtils$.$getTextWidth$ = function $$dvt$$9$$$$TextUtils$$$getTextWidth$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.$getDimensions$().$w$
  };
  $dvt$$9$$.$TextUtils$.$getTextStringWidth$ = function $$dvt$$9$$$$TextUtils$$$getTextStringWidth$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $dvt$$9$$.$TextUtils$.$getTextStringDimensions$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$).$w$
  };
  $dvt$$9$$.$TextUtils$.$getTextHeight$ = function $$dvt$$9$$$$TextUtils$$$getTextHeight$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$TextUtils$.$guessTextDimensions$($DvtSvgShadowUtils$$).$h$
  };
  $dvt$$9$$.$TextUtils$.$getTextStringHeight$ = function $$dvt$$9$$$$TextUtils$$$getTextStringHeight$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgPatternFillUtils$$.$hashCodeForTextMeasurement$() : "", $DvtSvgGradientUtils$$ = $dvt$$9$$.$TextUtils$.$_cachedTextDimensions$[$DvtSvgImageFillUtils$$];
    $DvtSvgGradientUtils$$ == $JSCompiler_alias_NULL$$ && ($DvtSvgGradientUtils$$ = new $dvt$$9$$.$OutputText$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$.$setCSSStyle$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$TextUtils$.$_cacheRepresentativeDimensions$($DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$));
    return $DvtSvgGradientUtils$$.$h$
  };
  $dvt$$9$$.$TextUtils$.$guessTextDimensions$ = function $$dvt$$9$$$$TextUtils$$$guessTextDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getTextString$(), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getCSSStyle$(), $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgGradientUtils$$.$hashCodeForTextMeasurement$() : "", $DvtSvgGradientUtils$$ = $dvt$$9$$.$TextUtils$.$_cachedTextDimensions$[$DvtSvgFilterUtils$$];
    $DvtSvgGradientUtils$$ == $JSCompiler_alias_NULL$$ && ($DvtSvgGradientUtils$$ = $dvt$$9$$.$TextUtils$.$_cacheRepresentativeDimensions$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$));
    $DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$.$w$ * $dvt$$9$$.$TextUtils$.$_getTextLength$($DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$ = isNaN($DvtSvgPatternFillUtils$$) || $DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$ ? 1 : $DvtSvgPatternFillUtils$$;
    $DvtSvgFilterUtils$$ = Math.min(0.3 * $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$.$w$ * (0.3 * $DvtSvgPatternFillUtils$$ + 2));
    return $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$MultilineText$ || $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$BackgroundMultilineText$ ? {$w$:$DvtSvgImageFillUtils$$, $h$:$DvtSvgGradientUtils$$.$h$ * $DvtSvgShadowUtils$$.$getLineCount$(), $wMin$:$DvtSvgFilterUtils$$} : {$w$:$DvtSvgImageFillUtils$$, $h$:$DvtSvgGradientUtils$$.$h$, $wMin$:$DvtSvgFilterUtils$$}
  };
  $dvt$$9$$.$TextUtils$.$fitText$ = function $$dvt$$9$$$$TextUtils$$$fitText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgFilterUtils$$ = isNaN($DvtSvgFilterUtils$$) || $DvtSvgFilterUtils$$ == $JSCompiler_alias_NULL$$ ? 1 : $DvtSvgFilterUtils$$;
    var $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.$getTextString$(), $DvtSvgImplFactory$$ = $dvt$$9$$.$TextUtils$.$_guessFit$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    if($DvtSvgImplFactory$$ == $JSCompiler_alias_TRUE$$) {
      return $DvtSvgGradientUtils$$.$addChild$($DvtSvgShadowUtils$$), $JSCompiler_alias_TRUE$$
    }
    if($DvtSvgImplFactory$$ == $JSCompiler_alias_FALSE$$) {
      return($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getParent()) && $DvtSvgPatternFillUtils$$.removeChild($DvtSvgShadowUtils$$), $JSCompiler_alias_FALSE$$
    }
    $DvtSvgGradientUtils$$.$addChild$($DvtSvgShadowUtils$$);
    if($DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$MultilineText$ || $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$BackgroundMultilineText$) {
      return $DvtSvgShadowUtils$$.$__fitText$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$)
    }
    $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$OutputText$ || $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$BackgroundOutputText$ ? $dvt$$9$$.$TextUtils$.$_truncateOutputText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$) : $DvtSvgShadowUtils$$.$setMaxWidth$($DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$);
    if("" == $DvtSvgShadowUtils$$.$getTextString$()) {
      return $DvtSvgGradientUtils$$.removeChild($DvtSvgShadowUtils$$), $JSCompiler_alias_FALSE$$
    }
    $DvtSvgShadowUtils$$.$getTextString$() != $DvtSvgFilterContext$$ && $DvtSvgShadowUtils$$.$setUntruncatedTextString$($DvtSvgFilterContext$$);
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$TextUtils$.$renderEmptyText$ = function $$dvt$$9$$$$TextUtils$$$renderEmptyText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$OutputText$($DvtSvgShadowUtils$$.$getCtx$(), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$.x + $DvtSvgImageFillUtils$$.$w$ / 2, $DvtSvgImageFillUtils$$.y + $DvtSvgImageFillUtils$$.$h$ / 2);
    $DvtSvgFilterUtils$$ && $DvtSvgPatternFillUtils$$.$setCSSStyle$($DvtSvgFilterUtils$$);
    $DvtSvgPatternFillUtils$$.$alignCenter$();
    $DvtSvgPatternFillUtils$$.$alignMiddle$();
    $dvt$$9$$.$TextUtils$.$fitText$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$.$w$ - 2 * $dvt$$9$$.$TextUtils$.$EMPTY_TEXT_BUFFER$, Infinity, $DvtSvgShadowUtils$$, 0) && ($DvtSvgPatternFillUtils$$.$isTruncated$() && $DvtSvgGradientUtils$$.$associate$($DvtSvgPatternFillUtils$$, new $dvt$$9$$.$SimpleObjPeer$($DvtSvgPatternFillUtils$$.$getUntruncatedTextString$())), $DvtSvgPatternFillUtils$$.$setAriaProperty$("hidden", $JSCompiler_alias_NULL$$));
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$TextUtils$.$_cacheRepresentativeDimensions$ = function $$dvt$$9$$$$TextUtils$$$_cacheRepresentativeDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getTextString$();
    $DvtSvgShadowUtils$$.$setTextString$($dvt$$9$$.$OutputText$.$REPRESENTATIVE_TEXT$);
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$();
    $DvtSvgShadowUtils$$.$setTextString$($DvtSvgImageFillUtils$$);
    $DvtSvgImageFillUtils$$ = {$w$:0.5 * $DvtSvgGradientUtils$$.$w$, $h$:$DvtSvgGradientUtils$$.$h$};
    return $dvt$$9$$.$TextUtils$.$_cachedTextDimensions$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$TextUtils$.$centerTextVertically$ = function $$dvt$$9$$$$TextUtils$$$centerTextVertically$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($dvt$$9$$.$Agent$.$isPlatformIE$()) {
      $DvtSvgShadowUtils$$.$setY$($DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$.$alignMiddle$()
    }else {
      var $DvtSvgImageFillUtils$$ = 0;
      $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$OutputText$ ? $DvtSvgImageFillUtils$$ = $dvt$$9$$.$TextUtils$.$getTextHeight$($DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$MultilineText$ && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$().$h$);
      $DvtSvgShadowUtils$$.$setY$($DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$ / 2)
    }
  };
  $dvt$$9$$.$TextUtils$.$_guessFit$ = function $$dvt$$9$$$$TextUtils$$$_guessFit$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if($DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$MultilineText$) {
      return $JSCompiler_alias_NULL$$
    }
    $DvtSvgGradientUtils$$ = $dvt$$9$$.$TextUtils$.$guessTextDimensions$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgGradientUtils$$.$h$ > $DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$.$wMin$ > $DvtSvgPatternFillUtils$$ && 3 < $dvt$$9$$.$TextUtils$.$_getTextLength$($DvtSvgShadowUtils$$.$getTextString$()) ? $JSCompiler_alias_FALSE$$ : $DvtSvgGradientUtils$$.$w$ < $DvtSvgPatternFillUtils$$ ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$TextUtils$.$_truncateOutputText$ = function $$dvt$$9$$$$TextUtils$$$_truncateOutputText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$();
    if(!($DvtSvgGradientUtils$$.$w$ <= $DvtSvgPatternFillUtils$$)) {
      var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getTextString$(), $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.length, $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$.$w$ / $dvt$$9$$.$TextUtils$.$_getTextLength$($DvtSvgFilterUtils$$), $DvtHtmlRichTooltipManager$$ = Math.max(Math.floor($DvtSvgPatternFillUtils$$ / $DvtSvgImplFactory$$) - 2, $DvtSvgImageFillUtils$$), $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$.substring(0, $DvtHtmlRichTooltipManager$$) + $dvt$$9$$.$OutputText$.$ELLIPSIS$;
      $DvtSvgShadowUtils$$.$setTextString$($DvtDomXmlParser$$);
      for(var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$(), $DvtContextMenuTooltipItem$$ = $DvtDomXmlParser$$, $DvtCustomTooltipItem$$ = $DvtSvgGradientUtils$$;$DvtSvgGradientUtils$$.$w$ < $DvtSvgPatternFillUtils$$ && !($DvtHtmlRichTooltipManager$$ >= $DvtSvgFilterUtils$$.length);) {
        var $DvtCustomTooltip$$ = Math.min($DvtSvgFilterContext$$ - $DvtHtmlRichTooltipManager$$, Math.max(Math.floor(($DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$.$w$) / $DvtSvgImplFactory$$), 1)), $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$ + $DvtCustomTooltip$$, $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$.substring(0, $DvtHtmlRichTooltipManager$$) + $dvt$$9$$.$OutputText$.$ELLIPSIS$;
        $DvtSvgShadowUtils$$.$setTextString$($DvtDomXmlParser$$);
        $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$();
        if(1 == $DvtCustomTooltip$$ && $DvtSvgGradientUtils$$.$w$ > $DvtSvgPatternFillUtils$$) {
          $DvtSvgShadowUtils$$.$setTextString$($DvtContextMenuTooltipItem$$);
          $DvtSvgGradientUtils$$ = $DvtCustomTooltipItem$$;
          break
        }
        $DvtContextMenuTooltipItem$$ = $DvtDomXmlParser$$;
        $DvtCustomTooltipItem$$ = $DvtSvgGradientUtils$$
      }
      for(;$DvtSvgGradientUtils$$.$w$ > $DvtSvgPatternFillUtils$$;) {
        if($DvtHtmlRichTooltipManager$$ <= $DvtSvgImageFillUtils$$) {
          $DvtSvgShadowUtils$$.$setTextString$("");
          break
        }
        $DvtHtmlRichTooltipManager$$ -= 1;
        $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$.substring(0, $DvtHtmlRichTooltipManager$$) + $dvt$$9$$.$OutputText$.$ELLIPSIS$;
        $DvtSvgShadowUtils$$.$setTextString$($DvtDomXmlParser$$);
        $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$()
      }
    }
  };
  $dvt$$9$$.$TextUtils$.$_getTextLength$ = function $$dvt$$9$$$$TextUtils$$$_getTextLength$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/[\u200A\u200B\u200C\u200D\u200E\u200F\uFEFF]/g, "");
    return $DvtSvgShadowUtils$$.length
  };
  $dvt$$9$$.$SvgShapeUtils$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SvgShapeUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$SvgShapeUtils$.$_uniqueSeed$ = 0;
  $dvt$$9$$.$SvgShapeUtils$.$addClipPath$ = function $$dvt$$9$$$$SvgShapeUtils$$$addClipPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId();
    if(!$DvtSvgImageFillUtils$$) {
      return $JSCompiler_alias_FALSE$$
    }
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getDefs$();
    if(!$DvtSvgGradientUtils$$) {
      return $JSCompiler_alias_FALSE$$
    }
    for(var $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.childNodes, $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgFilterContext$$;$DvtSvgGradientUtils$$++) {
      if($DvtSvgFilterUtils$$[$DvtSvgGradientUtils$$].id === $DvtSvgImageFillUtils$$) {
        return $JSCompiler_alias_TRUE$$
      }
    }
    $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("clipPath", $DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$.$appendDefs$($DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$_regions$;
    for($DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgFilterUtils$$.length;$DvtSvgGradientUtils$$++) {
      if($DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$[$DvtSvgGradientUtils$$]) {
        var $DvtSvgImplFactory$$ = $JSCompiler_alias_NULL$$;
        $DvtSvgFilterContext$$.type === $dvt$$9$$.$ClipPath$.$RECT$ ? ($DvtSvgImplFactory$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("rect"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "x", $DvtSvgFilterContext$$.x), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "y", $DvtSvgFilterContext$$.y), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "width", $DvtSvgFilterContext$$.$w$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "height", 
        $DvtSvgFilterContext$$.$h$), $DvtSvgFilterContext$$.$rx$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "rx", $DvtSvgFilterContext$$.$rx$), $DvtSvgFilterContext$$.$ry$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "ry", $DvtSvgFilterContext$$.$ry$)) : $DvtSvgFilterContext$$.type === $dvt$$9$$.$ClipPath$.$PATH$ ? ($DvtSvgImplFactory$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("path"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "d", 
        $DvtSvgFilterContext$$.$d$)) : $DvtSvgFilterContext$$.type === $dvt$$9$$.$ClipPath$.$POLYGON$ ? ($DvtSvgImplFactory$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("polygon"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "points", $DvtSvgFilterContext$$.$points$)) : $DvtSvgFilterContext$$.type === $dvt$$9$$.$ClipPath$.$ELLIPSE$ ? ($DvtSvgImplFactory$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("ellipse"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "cx", $DvtSvgFilterContext$$.$cx$), 
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "cy", $DvtSvgFilterContext$$.$cy$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "rx", $DvtSvgFilterContext$$.$rx$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "ry", $DvtSvgFilterContext$$.$ry$)) : $DvtSvgFilterContext$$.type === $dvt$$9$$.$ClipPath$.$CIRCLE$ && ($DvtSvgImplFactory$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("circle"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, 
        "cx", $DvtSvgFilterContext$$.$cx$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "cy", $DvtSvgFilterContext$$.$cy$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "r", $DvtSvgFilterContext$$.$r$));
        $DvtSvgImplFactory$$ && $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtSvgImplFactory$$)
      }
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$SvgShapeUtils$.$addMask$ = function $$dvt$$9$$$$SvgShapeUtils$$$addMask$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId();
    if(!$DvtSvgImageFillUtils$$) {
      return $JSCompiler_alias_FALSE$$
    }
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getDefs$();
    if(!$DvtSvgGradientUtils$$) {
      return $JSCompiler_alias_FALSE$$
    }
    for(var $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.childNodes, $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.length, $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgFilterUtils$$;$DvtSvgFilterContext$$++) {
      if($DvtSvgGradientUtils$$[$DvtSvgFilterContext$$].id === $DvtSvgImageFillUtils$$) {
        return $JSCompiler_alias_TRUE$$
      }
    }
    $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("mask", $DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$.$appendDefs$($DvtSvgImageFillUtils$$);
    $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$_gradient$;
    $dvt$$9$$.$SvgShapeUtils$.$addSpecialFill$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getBounds$();
    $DvtSvgFilterContext$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("rect");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "x", $DvtSvgFilterUtils$$.x);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "y", $DvtSvgFilterUtils$$.y);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "width", $DvtSvgFilterUtils$$.$w$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "height", $DvtSvgFilterUtils$$.$h$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "fill", $dvt$$9$$.$ToolkitUtils$.$getUrlById$($DvtSvgGradientUtils$$.getId()));
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$);
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$SvgShapeUtils$.$addSpecialFill$ = function $$dvt$$9$$$$SvgShapeUtils$$$addSpecialFill$$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$;
    $DvtSvgShadowUtils$$.$_bLocked$ ? $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.getId() : ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.getId(), $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$PatternFill$ ? $dvt$$9$$.$SvgShapeUtils$.$getUniqueId$("pat") : $dvt$$9$$.$SvgShapeUtils$.$getUniqueId$("Gr"), $DvtSvgShadowUtils$$.setId($DvtSvgFilterContext$$)));
    if(!$DvtSvgShadowUtils$$.$_defPresent$) {
      var $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$_defElem$;
      $DvtSvgImplFactory$$ || ($DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$GradientFill$ ? $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$.$createElem$($DvtSvgShadowUtils$$, $DvtSvgFilterContext$$) : $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ImageFill$ ? $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$.$createElem$($DvtSvgShadowUtils$$, $DvtSvgFilterContext$$) : $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$PatternFill$ && ($DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$.$createElem$($DvtSvgShadowUtils$$, 
      $DvtSvgFilterContext$$)));
      $DvtSvgShadowUtils$$.$_defElem$ = $DvtSvgImplFactory$$;
      $DvtSvgFilterUtils$$.$appendDefs$($DvtSvgImplFactory$$);
      $DvtSvgShadowUtils$$.$_defPresent$ = $JSCompiler_alias_TRUE$$
    }
  };
  $dvt$$9$$.$SvgShapeUtils$.$addSpecialStroke$ = function $$dvt$$9$$$$SvgShapeUtils$$$addSpecialStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$;
    $DvtSvgShadowUtils$$.$_bLocked$ ? $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId() : ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId(), $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$SvgShapeUtils$.$getUniqueId$("Gr"), $DvtSvgShadowUtils$$.setId($DvtSvgImageFillUtils$$)));
    if(!$DvtSvgShadowUtils$$.$_defPresent$) {
      var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$_defElem$;
      $DvtSvgFilterUtils$$ || ($DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$createElem$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$));
      $DvtSvgShadowUtils$$.$_defElem$ = $DvtSvgFilterUtils$$;
      $DvtSvgPatternFillUtils$$.$appendDefs$($DvtSvgFilterUtils$$);
      $DvtSvgShadowUtils$$.$_defPresent$ = $JSCompiler_alias_TRUE$$
    }
  };
  $dvt$$9$$.$SvgShapeUtils$.createElement = function $$dvt$$9$$$$SvgShapeUtils$$createElement$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = document.createElementNS($dvt$$9$$.$ToolkitUtils$.$SVG_NS$, $DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "id", $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$SvgShapeUtils$.$getUniqueId$ = function $$dvt$$9$$$$SvgShapeUtils$$$getUniqueId$$($DvtSvgShadowUtils$$) {
    return($DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : "$") + $dvt$$9$$.$SvgShapeUtils$.$_uniqueSeed$++
  };
  $dvt$$9$$.$SvgShapeUtils$.$convertPointsArray$ = function $$dvt$$9$$$$SvgShapeUtils$$$convertPointsArray$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImageFillUtils$$ = "", $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgGradientUtils$$++) {
      0 < $DvtSvgGradientUtils$$ && ($DvtSvgImageFillUtils$$ += " "), $DvtSvgImageFillUtils$$ += $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$])
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$Displayable$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Displayable$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Displayable$.$_ATTRS_TRANSFERABLE_TO_OUTER$ = ["clip-path"];
  $dvt$$9$$.$Displayable$.$_CREATE_EVENT_TYPE_MAP$ = {click:$dvt$$9$$.$MouseEvent$.$CLICK$, mouseover:$dvt$$9$$.$MouseEvent$.$MOUSEOVER$, mouseout:$dvt$$9$$.$MouseEvent$.$MOUSEOUT$, mousemove:$dvt$$9$$.$MouseEvent$.$MOUSEMOVE$, keydown:$dvt$$9$$.$KeyboardEvent$.$KEYDOWN$, keyup:$dvt$$9$$.$KeyboardEvent$.$KEYUP$, keypress:$dvt$$9$$.$KeyboardEvent$.$KEYPRESS$};
  $dvt$$9$$.$Displayable$.$SET_ID_ON_DOM$ = $JSCompiler_alias_FALSE$$;
  $dvt$$9$$.$Displayable$.prototype.Init = function $$dvt$$9$$$$Displayable$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_elem$ = $dvt$$9$$.$SvgShapeUtils$.createElement($DvtSvgPatternFillUtils$$);
    this.$_elem$.$_obj$ = this;
    this.setId($DvtSvgImageFillUtils$$);
    this.$_bVisible$ = $JSCompiler_alias_TRUE$$;
    this.$_pixelHinting$ = $JSCompiler_alias_FALSE$$;
    this.$_cursor$ = $JSCompiler_alias_NULL$$;
    this.$_bMouseEnabled$ = $JSCompiler_alias_TRUE$$;
    this.$_alpha$ = 1;
    this.$_matrix$ = $JSCompiler_alias_NULL$$;
    this.$_ariaProperties$ = {};
    this.$_properties$ = {}
  };
  $dvt$$9$$.$Displayable$.prototype.$getCtx$ = $JSCompiler_get$$("$_context$");
  $dvt$$9$$.$Displayable$.prototype.$getImpl$ = function $$dvt$$9$$$$Displayable$$$$getImpl$$() {
    return this
  };
  $dvt$$9$$.$Displayable$.prototype.$getObj$ = function $$dvt$$9$$$$Displayable$$$$getObj$$() {
    return this
  };
  $dvt$$9$$.$Displayable$.prototype.$getElem$ = $JSCompiler_get$$("$_elem$");
  $dvt$$9$$.$Displayable$.prototype.$getOuterElem$ = function $$dvt$$9$$$$Displayable$$$$getOuterElem$$() {
    return this.$_outerElem$ ? this.$_outerElem$ : this.$getElem$()
  };
  $dvt$$9$$.$Displayable$.prototype.getId = $JSCompiler_get$$("$_id$");
  $dvt$$9$$.$Displayable$.prototype.setId = function $$dvt$$9$$$$Displayable$$$setId$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(this.$_id$ !== $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ && 0 === $DvtSvgShadowUtils$$.length && ($DvtSvgShadowUtils$$ = $JSCompiler_alias_NULL$$), this.$_id$ = $DvtSvgShadowUtils$$, $dvt$$9$$.$Displayable$.$SET_ID_ON_DOM$ || $DvtSvgPatternFillUtils$$)) {
      $DvtSvgShadowUtils$$ ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getOuterElem$(), "id", $DvtSvgShadowUtils$$) : $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getOuterElem$(), "id")
    }
  };
  $dvt$$9$$.$Displayable$.prototype.getParent = $JSCompiler_get$$("$_parent$");
  $dvt$$9$$.$Displayable$.prototype.$setParent$ = $JSCompiler_set$$("$_parent$");
  $dvt$$9$$.$Displayable$.prototype.$isDescendantOf$ = function $$dvt$$9$$$$Displayable$$$$isDescendantOf$$($DvtSvgShadowUtils$$) {
    return!$DvtSvgShadowUtils$$ || !this.getParent() ? $JSCompiler_alias_FALSE$$ : this.getParent() == $DvtSvgShadowUtils$$ ? $JSCompiler_alias_TRUE$$ : this.getParent().$isDescendantOf$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$setPixelHinting$ = function $$dvt$$9$$$$Displayable$$$$setPixelHinting$$() {
    this.$_pixelHinting$ = $JSCompiler_alias_TRUE$$;
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "shape-rendering", "crispEdges")
  };
  $dvt$$9$$.$Displayable$.prototype.$setVisible$ = function $$dvt$$9$$$$Displayable$$$$setVisible$$($DvtSvgShadowUtils$$) {
    if(this.$_bVisible$ !== $DvtSvgShadowUtils$$) {
      this.$_bVisible$ = $DvtSvgShadowUtils$$;
      var $DvtSvgPatternFillUtils$$ = this instanceof $dvt$$9$$.$Marker$ ? this.$_elem$ : this.$getElem$();
      $DvtSvgShadowUtils$$ ? $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgPatternFillUtils$$, "visibility") : $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "visibility", "hidden")
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$setClipPath$ = function $$dvt$$9$$$$Displayable$$$$setClipPath$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      if(this.$ClipPathId$ != $DvtSvgShadowUtils$$.getId()) {
        this.$ClipPathId$ && this.$_context$.$decreaseGlobalDefReference$(this.$ClipPathId$);
        this.$ClipPathId$ = $DvtSvgShadowUtils$$.getId();
        this.$_context$.$increaseGlobalDefReference$(this.$ClipPathId$);
        !this.$_outerElem$ && this.$_matrix$ && this.$_createOuterGroupElem$();
        var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getId();
        $DvtSvgPatternFillUtils$$ && $dvt$$9$$.$SvgShapeUtils$.$addClipPath$($DvtSvgShadowUtils$$, this.$getCtx$()) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getOuterElem$(), "clip-path", $dvt$$9$$.$ToolkitUtils$.$getUrlById$($DvtSvgPatternFillUtils$$))
      }
    }else {
      !$DvtSvgShadowUtils$$ && this.$ClipPathId$ && (this.$_context$.$decreaseGlobalDefReference$(this.$ClipPathId$), this.$ClipPathId$ = $JSCompiler_alias_NULL$$, $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getOuterElem$(), "clip-path"))
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$setMask$ = function $$dvt$$9$$$$Displayable$$$$setMask$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      if(this.$MaskId$ != $DvtSvgShadowUtils$$.getId()) {
        this.$MaskId$ && this.$_context$.$decreaseGlobalDefReference$(this.$MaskId$);
        this.$MaskId$ = $DvtSvgShadowUtils$$.getId();
        this.$_context$.$increaseGlobalDefReference$(this.$MaskId$);
        !this.$_outerElem$ && this.$_matrix$ && this.$_createOuterGroupElem$();
        var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getId();
        $DvtSvgPatternFillUtils$$ && $dvt$$9$$.$SvgShapeUtils$.$addMask$($DvtSvgShadowUtils$$, this.$getCtx$()) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getOuterElem$(), "mask", $dvt$$9$$.$ToolkitUtils$.$getUrlById$($DvtSvgPatternFillUtils$$))
      }
    }else {
      !$DvtSvgShadowUtils$$ && this.$MaskId$ && (this.$_context$.$decreaseGlobalDefReference$(this.$MaskId$), this.$MaskId$ = $JSCompiler_alias_NULL$$, $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getOuterElem$(), "mask"))
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$ConvertCoordSpaceRect$ = function $$dvt$$9$$$$Displayable$$$$ConvertCoordSpaceRect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!$DvtSvgPatternFillUtils$$ || $DvtSvgPatternFillUtils$$ === this) {
      return $DvtSvgShadowUtils$$
    }
    var $DvtSvgImageFillUtils$$ = this.$localToStage$(new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y)), $DvtSvgGradientUtils$$ = this.$localToStage$(new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$)), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$stageToLocal$($DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$stageToLocal$($DvtSvgGradientUtils$$);
    return new $dvt$$9$$.$Rectangle$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgGradientUtils$$.x - $DvtSvgImageFillUtils$$.x, $DvtSvgGradientUtils$$.y - $DvtSvgImageFillUtils$$.y)
  };
  $dvt$$9$$.$Displayable$.prototype.$GetSvgDimensions$ = function $$dvt$$9$$$$Displayable$$$$GetSvgDimensions$$() {
    try {
      var $DvtSvgShadowUtils$$ = this.$getElem$().getBBox()
    }catch($DvtSvgPatternFillUtils$$) {
      return $dvt$$9$$.$Agent$.$isEnvironmentTest$() && print("Error in dvt.Displayable.prototype.GetSvgDimensions: " + $DvtSvgPatternFillUtils$$), $JSCompiler_alias_NULL$$
    }
    return new $dvt$$9$$.$Rectangle$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$.width, $DvtSvgShadowUtils$$.height)
  };
  $dvt$$9$$.$Displayable$.prototype.$getDimensions$ = function $$dvt$$9$$$$Displayable$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetSvgDimensions$();
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$getDimensionsWithStroke$ = function $$dvt$$9$$$$Displayable$$$$getDimensionsWithStroke$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetDimensionsWithStroke$();
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$GetDimensionsWithStroke$ = function $$dvt$$9$$$$Displayable$$$$GetDimensionsWithStroke$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetElemDimensionsWithStroke$();
    return!$DvtSvgShadowUtils$$ || $DvtSvgShadowUtils$$ === this ? $DvtSvgPatternFillUtils$$ : this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$GetElemDimensionsWithStroke$ = function $$dvt$$9$$$$Displayable$$$$GetElemDimensionsWithStroke$$() {
    return this.$GetSvgDimensions$()
  };
  $dvt$$9$$.$Displayable$.$HasAttributes$ = function $$dvt$$9$$$$Displayable$$$HasAttributes$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgPatternFillUtils$$) {
      for(var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
        if($dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$])) {
          return $JSCompiler_alias_TRUE$$
        }
      }
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Displayable$.$TransferAttributes$ = function $$dvt$$9$$$$Displayable$$$TransferAttributes$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgImageFillUtils$$) {
      for(var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.length, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgFilterContext$$;$DvtSvgImplFactory$$++) {
        if($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgImplFactory$$], $DvtSvgFilterUtils$$ = $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$)) {
          $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $dvt$$9$$.$Agent$.$isPlatformIE$() && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, $JSCompiler_alias_NULL$$)
        }
      }
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$_createOuterGroupElem$ = function $$dvt$$9$$$$Displayable$$$$_createOuterGroupElem$$() {
    if(!this.$_outerElem$) {
      this.$_outerElem$ = $dvt$$9$$.$SvgShapeUtils$.createElement("g", this.$_id$ ? this.$_id$ + "_outer" : $JSCompiler_alias_NULL$$);
      var $DvtSvgShadowUtils$$ = this.getParent();
      $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getElem$().replaceChild(this.$_outerElem$, this.$getElem$());
      $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$_outerElem$, this.$getElem$());
      $dvt$$9$$.$Displayable$.$TransferAttributes$(this.$getElem$(), this.$_outerElem$, $dvt$$9$$.$Displayable$.$_ATTRS_TRANSFERABLE_TO_OUTER$)
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$getCSSStyle$ = $JSCompiler_get$$("$_cssStyle$");
  $dvt$$9$$.$Displayable$.prototype.$setCSSStyle$ = $JSCompiler_set$$("$_cssStyle$");
  $dvt$$9$$.$Displayable$.prototype.setCursor = function $$dvt$$9$$$$Displayable$$$setCursor$($DvtSvgShadowUtils$$) {
    this.$_cursor$ = $DvtSvgShadowUtils$$;
    $dvt$$9$$.$Agent$.$isEnvironmentBatik$() || ($DvtSvgShadowUtils$$ ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "cursor", $DvtSvgShadowUtils$$) : $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getElem$(), "cursor"))
  };
  $dvt$$9$$.$Displayable$.prototype.getCursor = $JSCompiler_get$$("$_cursor$");
  $dvt$$9$$.$Displayable$.prototype.$setMouseEnabled$ = function $$dvt$$9$$$$Displayable$$$$setMouseEnabled$$($DvtSvgShadowUtils$$) {
    this.$_bMouseEnabled$ = $DvtSvgShadowUtils$$;
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "pointer-events", $DvtSvgShadowUtils$$ ? "visiblePainted" : "none")
  };
  $dvt$$9$$.$Displayable$.prototype.$getAlpha$ = $JSCompiler_get$$("$_alpha$");
  $dvt$$9$$.$Displayable$.prototype.$setAlpha$ = function $$dvt$$9$$$$Displayable$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    1E-5 > $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = 0);
    $DvtSvgShadowUtils$$ !== this.$_alpha$ && (this.$_alpha$ = $DvtSvgShadowUtils$$, $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "opacity", this.$_alpha$, 1))
  };
  $dvt$$9$$.$Displayable$.prototype.$applyAriaProperties$ = function $$dvt$$9$$$$Displayable$$$$applyAriaProperties$$() {
    if($dvt$$9$$.$Agent$.$deferAriaCreation$()) {
      this.$_ariaRole$ && this.$_setAriaRole$(this.$_ariaRole$);
      for(var $DvtSvgShadowUtils$$ in this.$_ariaProperties$) {
        this.$_setAriaProperty$($DvtSvgShadowUtils$$, this.$_ariaProperties$[$DvtSvgShadowUtils$$])
      }
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$setAriaRole$ = function $$dvt$$9$$$$Displayable$$$$setAriaRole$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Agent$.$deferAriaCreation$() || this.$_setAriaRole$($DvtSvgShadowUtils$$);
    this.$_ariaRole$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Displayable$.prototype.$_setAriaRole$ = function $$dvt$$9$$$$Displayable$$$$_setAriaRole$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetAriaElem$();
    $DvtSvgShadowUtils$$ ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "role", $DvtSvgShadowUtils$$) : $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgPatternFillUtils$$, "role")
  };
  $dvt$$9$$.$Displayable$.prototype.$getAriaRole$ = $JSCompiler_get$$("$_ariaRole$");
  $dvt$$9$$.$Displayable$.prototype.$GetAriaElem$ = function $$dvt$$9$$$$Displayable$$$$GetAriaElem$$() {
    return this.$getElem$()
  };
  $dvt$$9$$.$Displayable$.prototype.$setAriaProperty$ = function $$dvt$$9$$$$Displayable$$$$setAriaProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ && ($dvt$$9$$.$Agent$.$deferAriaCreation$() || this.$_setAriaProperty$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), this.$_ariaProperties$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$_setAriaProperty$ = function $$dvt$$9$$$$Displayable$$$$_setAriaProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$GetAriaElem$();
    $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ && "" !== $DvtSvgPatternFillUtils$$ ? ("label" == $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$StringUtils$.$processAriaLabel$($DvtSvgPatternFillUtils$$)), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "aria-" + $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)) : $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgImageFillUtils$$, "aria-" + $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$stageToLocal$ = function $$dvt$$9$$$$Displayable$$$$stageToLocal$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = this.$getPathToStage$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.length - 1;0 <= $DvtSvgGradientUtils$$;$DvtSvgGradientUtils$$--) {
      $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$].$getMatrix$().$clone$(), $DvtSvgShadowUtils$$.$invert$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$transformPoint$($DvtSvgImageFillUtils$$)
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$Displayable$.prototype.$localToStage$ = function $$dvt$$9$$$$Displayable$$$$localToStage$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = this.$getPathToStage$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$].$getMatrix$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$transformPoint$($DvtSvgImageFillUtils$$)
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$Displayable$.prototype.$getPathToStage$ = function $$dvt$$9$$$$Displayable$$$$getPathToStage$$() {
    for(var $DvtSvgShadowUtils$$ = this, $DvtSvgPatternFillUtils$$ = [];$DvtSvgShadowUtils$$;) {
      $DvtSvgPatternFillUtils$$.push($DvtSvgShadowUtils$$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getParent()
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Displayable$.prototype.$destroy$ = function $$dvt$$9$$$$Displayable$$$$destroy$$() {
    this.$removeAllDrawEffects$();
    this.$ClipPathId$ && this.$setClipPath$($JSCompiler_alias_NULL$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$createCopy$ = function $$dvt$$9$$$$Displayable$$$$createCopy$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Container$(this.$getCtx$(), "clonedContainer"), $DvtSvgPatternFillUtils$$ = this.$getElem$().cloneNode($JSCompiler_alias_TRUE$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgShadowUtils$$.$getElem$(), $DvtSvgPatternFillUtils$$);
    this.$_disableEvents$($DvtSvgPatternFillUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Displayable$.prototype.$_disableEvents$ = function $$dvt$$9$$$$Displayable$$$$_disableEvents$$($DvtSvgShadowUtils$$) {
    for($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.firstChild;$DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$;) {
      $DvtSvgShadowUtils$$.setAttributeNS && ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "pointer-events", "none"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "id", $JSCompiler_alias_NULL$$)), this.$_disableEvents$($DvtSvgShadowUtils$$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.nextSibling
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$dispatchNativeEvent$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Displayable$.prototype.$GetProperty$ = function $$dvt$$9$$$$Displayable$$$$GetProperty$$($DvtSvgShadowUtils$$) {
    return this.$_properties$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$Displayable$.prototype.$SetProperty$ = function $$dvt$$9$$$$Displayable$$$$SetProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ !== this.$_properties$[$DvtSvgShadowUtils$$] && (this.$_properties$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$SetSvgProperty$ = function $$dvt$$9$$$$Displayable$$$$SetSvgProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ !== this.$_properties$[$DvtSvgShadowUtils$$] && (this.$_properties$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$, $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), this.$SvgPropertyChanged$($DvtSvgShadowUtils$$));
    return this
  };
  $dvt$$9$$.$Displayable$.prototype.$SvgPropertyChanged$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Displayable$.$generateAriaLabel$ = function $$dvt$$9$$$$Displayable$$$generateAriaLabel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = "", $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ && 0 < $DvtSvgPatternFillUtils$$.length;
    if($DvtSvgShadowUtils$$) {
      var $DvtSvgFilterUtils$$ = $dvt$$9$$.$Bundle$.$getTranslatedString$($dvt$$9$$.$Bundle$.$UTIL_PREFIX$, "ARIA_LABEL_DESC_DELIMITER"), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$;
      $DvtSvgGradientUtils$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgFilterUtils$$)
    }
    if($DvtSvgGradientUtils$$) {
      $DvtSvgGradientUtils$$ = $dvt$$9$$.$Bundle$.$getTranslatedString$($dvt$$9$$.$Bundle$.$UTIL_PREFIX$, "ARIA_LABEL_STATE_DELIMITER");
      for($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++) {
        $DvtSvgImageFillUtils$$ += $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$], $DvtSvgFilterUtils$$ != $DvtSvgPatternFillUtils$$.length - 1 && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$)
      }
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$Displayable$.prototype.$getNumDrawEffects$ = function $$dvt$$9$$$$Displayable$$$$getNumDrawEffects$$() {
    return!this.$_drawEffects$ ? 0 : this.$_drawEffects$.length
  };
  $dvt$$9$$.$Displayable$.prototype.$addDrawEffect$ = function $$dvt$$9$$$$Displayable$$$$addDrawEffect$$($DvtSvgShadowUtils$$) {
    this.$_drawEffects$ || (this.$_drawEffects$ = []);
    $DvtSvgShadowUtils$$.$__lock$();
    this.$_drawEffects$.push($DvtSvgShadowUtils$$);
    this.$_applyDrawEffects$()
  };
  $dvt$$9$$.$Displayable$.prototype.$addDrawEffectAt$ = function $$dvt$$9$$$$Displayable$$$$addDrawEffectAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_drawEffects$ || (this.$_drawEffects$ = []);
    $DvtSvgShadowUtils$$.$__lock$();
    $DvtSvgPatternFillUtils$$ >= this.$_drawEffects$.length ? this.$_drawEffects$.push($DvtSvgShadowUtils$$) : this.$_drawEffects$.splice($DvtSvgPatternFillUtils$$, 0, $DvtSvgShadowUtils$$);
    this.$_applyDrawEffects$()
  };
  $dvt$$9$$.$Displayable$.prototype.$removeDrawEffectAt$ = function $$dvt$$9$$$$Displayable$$$$removeDrawEffectAt$$($DvtSvgShadowUtils$$) {
    if(this.$_drawEffects$) {
      var $DvtSvgPatternFillUtils$$ = this.$_drawEffects$.length;
      0 <= $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ < $DvtSvgPatternFillUtils$$ && (this.$_drawEffects$.splice($DvtSvgShadowUtils$$, 1), this.$_applyDrawEffects$())
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$removeAllDrawEffects$ = function $$dvt$$9$$$$Displayable$$$$removeAllDrawEffects$$() {
    this.$_drawEffects$ && (this.$_drawEffects$ = $JSCompiler_alias_NULL$$, this.$_applyDrawEffects$())
  };
  $dvt$$9$$.$Displayable$.prototype.$getDrawEffectIndex$ = function $$dvt$$9$$$$Displayable$$$$getDrawEffectIndex$$($DvtSvgShadowUtils$$) {
    if(this.$_drawEffects$) {
      for(var $DvtSvgPatternFillUtils$$ = this.$_drawEffects$.length, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
        if($DvtSvgShadowUtils$$ === this.$_drawEffects$[$DvtSvgImageFillUtils$$]) {
          return $DvtSvgImageFillUtils$$
        }
      }
    }
    return-1
  };
  $dvt$$9$$.$Displayable$.prototype.$_applyDrawEffects$ = function $$dvt$$9$$$$Displayable$$$$_applyDrawEffects$$() {
    var $DvtSvgShadowUtils$$ = this.$_drawEffects$;
    this.$_filter$ && ($dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getOuterElem$(), "filter"), this.$getCtx$().$removeDefs$(this.$_filter$), this.$_filter$ = $JSCompiler_alias_NULL$$);
    !this.$_outerElem$ && this.$_matrix$ && this.$_createOuterGroupElem$();
    if($DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length && (this.$_filter$ = $DvtSvgFilterUtils$$.$createFilter$($DvtSvgShadowUtils$$, this))) {
      this.$getCtx$().$appendDefs$(this.$_filter$), $DvtSvgShadowUtils$$ = $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$(this.$_filter$, "id"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getOuterElem$(), "filter", $dvt$$9$$.$ToolkitUtils$.$getUrlById$($DvtSvgShadowUtils$$))
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$addEvtListener$ = function $$dvt$$9$$$$Displayable$$$$addEvtListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$);
    $DvtSvgFilterUtils$$.push($DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$.push($DvtSvgGradientUtils$$);
    this.$_addListener$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$removeEvtListener$ = function $$dvt$$9$$$$Displayable$$$$removeEvtListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_FALSE$$);
    if($DvtSvgFilterUtils$$) {
      for(var $dvt$$9$$ = 0;$dvt$$9$$ < $DvtSvgFilterUtils$$.length;$dvt$$9$$ += 2) {
        if($DvtSvgFilterUtils$$[$dvt$$9$$] === $DvtSvgPatternFillUtils$$ && $DvtSvgFilterUtils$$[$dvt$$9$$ + 1] === $DvtSvgGradientUtils$$) {
          $DvtSvgFilterUtils$$.splice($dvt$$9$$, 2);
          break
        }
      }
    }
    $DvtSvgFilterUtils$$ && 0 >= $DvtSvgFilterUtils$$.length && this.$_removeListener$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$dispatchDisplayableEvent$ = function $$dvt$$9$$$$Displayable$$$$dispatchDisplayableEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$Displayable$.$_CREATE_EVENT_TYPE_MAP$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$;
    if($dvt$$9$$.$MouseEvent$.$CLICK$ == $DvtSvgImageFillUtils$$ || $dvt$$9$$.$MouseEvent$.$MOUSEOVER$ == $DvtSvgImageFillUtils$$ || $dvt$$9$$.$MouseEvent$.$MOUSEOUT$ == $DvtSvgImageFillUtils$$ || $dvt$$9$$.$MouseEvent$.$MOUSEMOVE$ == $DvtSvgImageFillUtils$$) {
      if(document.createEvent) {
        $DvtSvgGradientUtils$$ = this.$getCtx$();
        var $DvtSvgFilterUtils$$ = this.$getDimensions$(), $DvtSvgFilterUtils$$ = this.$localToStage$(new $dvt$$9$$.$Point$($DvtSvgFilterUtils$$.x, $DvtSvgFilterUtils$$.y));
        $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$getStageAbsolutePosition$();
        $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Point$($DvtSvgGradientUtils$$.x + $DvtSvgFilterUtils$$.x, $DvtSvgGradientUtils$$.y + $DvtSvgFilterUtils$$.y);
        $DvtSvgFilterUtils$$ = document.createEvent("MouseEvents");
        $DvtSvgFilterUtils$$.initMouseEvent($DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$, $JSCompiler_alias_TRUE$$, window, 1, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y, $JSCompiler_alias_FALSE$$, $JSCompiler_alias_FALSE$$, $JSCompiler_alias_FALSE$$, $JSCompiler_alias_FALSE$$, 0, $JSCompiler_alias_NULL$$);
        this.$getElem$().dispatchEvent($DvtSvgFilterUtils$$)
      }
    }else {
      if(($dvt$$9$$.$KeyboardEvent$.$KEYDOWN$ == $DvtSvgImageFillUtils$$ || $dvt$$9$$.$KeyboardEvent$.$KEYUP$ == $DvtSvgImageFillUtils$$ || $dvt$$9$$.$KeyboardEvent$.$KEYPRESS$ == $DvtSvgImageFillUtils$$) && document.createEvent) {
        $DvtSvgFilterUtils$$ = document.createEvent("KeyboardEvent"), $DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$KeyboardEvent$ ? ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.keyCode, this.$_ctrlKeyPressed$ = $DvtSvgPatternFillUtils$$.ctrlKey, this.$_shiftKeyPressed$ = $DvtSvgPatternFillUtils$$.shiftKey) : ($DvtSvgGradientUtils$$ = parseInt($DvtSvgPatternFillUtils$$), this.$_ctrlKeyPressed$ === $JSCompiler_alias_VOID$$ && (this.$_ctrlKeyPressed$ = $JSCompiler_alias_FALSE$$), this.$_shiftKeyPressed$ === 
        $JSCompiler_alias_VOID$$ && (this.$_shiftKeyPressed$ = $JSCompiler_alias_FALSE$$), $DvtSvgGradientUtils$$ == $dvt$$9$$.$KeyboardEvent$.$CONTROL$ ? this.$_ctrlKeyPressed$ && $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYUP$ ? this.$_ctrlKeyPressed$ = $JSCompiler_alias_FALSE$$ : !this.$_ctrlKeyPressed$ && $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYDOWN$ && (this.$_ctrlKeyPressed$ = $JSCompiler_alias_TRUE$$) : $DvtSvgGradientUtils$$ == $dvt$$9$$.$KeyboardEvent$.$SHIFT$ && 
        (this.$_shiftKeyPressed$ && $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYUP$ ? this.$_shiftKeyPressed$ = $JSCompiler_alias_FALSE$$ : !this.$_shiftKeyPressed$ && $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYDOWN$ && (this.$_shiftKeyPressed$ = $JSCompiler_alias_TRUE$$))), "undefined" != typeof $DvtSvgFilterUtils$$.initKeyboardEvent ? $DvtSvgFilterUtils$$.initKeyboardEvent($DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$, $JSCompiler_alias_TRUE$$, window, this.$_ctrlKeyPressed$, 
        $JSCompiler_alias_FALSE$$, this.$_shiftKeyPressed$, $JSCompiler_alias_FALSE$$, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$) : $DvtSvgFilterUtils$$.initKeyEvent($DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$, $JSCompiler_alias_TRUE$$, window, this.$_ctrlKeyPressed$, $JSCompiler_alias_FALSE$$, $JSCompiler_alias_FALSE$$, this.$_shiftKeyPressed$, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgFilterUtils$$), $DvtSvgImageFillUtils$$.keyCode = 
        $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.ctrlKey = this.$_ctrlKeyPressed$, $DvtSvgImageFillUtils$$.shiftKey = this.$_shiftKeyPressed$, $DvtSvgGradientUtils$$ = this.$getCtx$(), $dvt$$9$$.$HtmlKeyboardListenerUtils$.$_bubbleListener$.call($DvtSvgGradientUtils$$.$_stage$.$_SVGRoot$.parentNode, $DvtSvgImageFillUtils$$)
      }
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$AddElemListener$ = function $$dvt$$9$$$$Displayable$$$$AddElemListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$addDomEventListener$(this.$getElem$(), $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$ == $dvt$$9$$.$TouchEvent$.$TOUCHEND$ && $dvt$$9$$.$ToolkitUtils$.$addDomEventListener$(this.$getElem$(), $dvt$$9$$.$TouchEvent$.$TOUCHCANCEL$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$FireListener$ = function $$dvt$$9$$$$Displayable$$$$FireListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getType$ ? $DvtSvgShadowUtils$$.$getType$() : $DvtSvgShadowUtils$$.type;
    if($DvtSvgImageFillUtils$$ = this.$_getListeners$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, $JSCompiler_alias_FALSE$$)) {
      for(var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$ += 2) {
        var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$ + 1];
        $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$] && $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$].call($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$)
      }
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$fireKeyboardListener$ = function $$dvt$$9$$$$Displayable$$$$fireKeyboardListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$FireListener$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$_getListeners$ = function $$dvt$$9$$$$Displayable$$$$_getListeners$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if(!this.$_listenerObj$) {
      if($DvtSvgImageFillUtils$$) {
        this.$_listenerObj$ = {}
      }else {
        return $JSCompiler_alias_NULL$$
      }
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ + "_" + ($DvtSvgPatternFillUtils$$ ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$);
    $DvtSvgPatternFillUtils$$ = this.$_listenerObj$[$DvtSvgShadowUtils$$];
    !$DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = [], this.$_listenerObj$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Displayable$.prototype.$_addListener$ = function $$dvt$$9$$$$Displayable$$$$_addListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_getListener$($DvtSvgPatternFillUtils$$);
    if($DvtSvgShadowUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYUP$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYDOWN$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYPRESS$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUS$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUSIN$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUSOUT$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$BLUR$) {
      var $DvtSvgGradientUtils$$ = this.$getCtx$().$_stage$.$_SVGRoot$.parentNode;
      $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$.$_obj$ || ($DvtSvgGradientUtils$$.$_obj$ = []), -1 == $dvt$$9$$.$ArrayUtils$.$getIndex$($DvtSvgGradientUtils$$.$_obj$, this) && $DvtSvgGradientUtils$$.$_obj$.push(this), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$HtmlKeyboardListenerUtils$.$getListener$($DvtSvgPatternFillUtils$$), $dvt$$9$$.$ToolkitUtils$.$addDomEventListener$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$))
    }else {
      this.$AddElemListener$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$_removeListener$ = function $$dvt$$9$$$$Displayable$$$$_removeListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_getListener$($DvtSvgPatternFillUtils$$);
    if($DvtSvgShadowUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYUP$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYDOWN$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$KeyboardEvent$.$KEYPRESS$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUS$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUSIN$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUSOUT$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$BLUR$) {
      var $DvtSvgGradientUtils$$ = this.$getCtx$().$_stage$.$_SVGRoot$.parentNode;
      $dvt$$9$$.$ToolkitUtils$.$removeDomEventListener$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ArrayUtils$.$getIndex$($DvtSvgGradientUtils$$.$_obj$, this);
      -1 !== $DvtSvgImageFillUtils$$ && $DvtSvgGradientUtils$$.$_obj$.splice($DvtSvgImageFillUtils$$, 1)
    }else {
      $dvt$$9$$.$ToolkitUtils$.$removeDomEventListener$(this.$getElem$(), $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$_getListener$ = function $$dvt$$9$$$$Displayable$$$$_getListener$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this;
    if($DvtSvgShadowUtils$$) {
      return this.$_captureClosure$ || (this.$_captureClosure$ = function $this$$_captureClosure$$($DvtSvgShadowUtils$$) {
        $DvtSvgPatternFillUtils$$.$_captureListener$($DvtSvgShadowUtils$$)
      }), this.$_captureClosure$
    }
    this.$_bubbleClosure$ || (this.$_bubbleClosure$ = function $this$$_bubbleClosure$$($DvtSvgShadowUtils$$) {
      $DvtSvgPatternFillUtils$$.$_bubbleListener$($DvtSvgShadowUtils$$)
    });
    return this.$_bubbleClosure$
  };
  $dvt$$9$$.$Displayable$.prototype.$_bubbleListener$ = function $$dvt$$9$$$$Displayable$$$$_bubbleListener$$($DvtSvgShadowUtils$$) {
    if($dvt$$9$$.$Agent$.$isPlatformIE$()) {
      if($DvtSvgShadowUtils$$.type == $dvt$$9$$.$MouseEvent$.$MOUSEOVER$) {
        if(this.$_bubbleHoverItem$) {
          if(this.$_bubbleHoverItem$ == $DvtSvgShadowUtils$$.target) {
            return
          }
          var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$getCtx$());
          $DvtSvgPatternFillUtils$$.$modifyEventForIE$($dvt$$9$$.$MouseEvent$.$MOUSEOUT$, this.$_bubbleHoverItem$);
          this.$FireListener$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_FALSE$$)
        }
        this.$_bubbleHoverItem$ = $DvtSvgShadowUtils$$.target
      }else {
        $DvtSvgShadowUtils$$.type == $dvt$$9$$.$MouseEvent$.$MOUSEOUT$ && (this.$_bubbleHoverItem$ = $JSCompiler_alias_NULL$$)
      }
    }
    $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$getCtx$());
    this.$FireListener$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$_captureListener$ = function $$dvt$$9$$$$Displayable$$$$_captureListener$$($DvtSvgShadowUtils$$) {
    if($dvt$$9$$.$Agent$.$isPlatformIE$()) {
      if($DvtSvgShadowUtils$$.type == $dvt$$9$$.$MouseEvent$.$MOUSEOVER$) {
        if(this.$_captureHoverItem$) {
          if(this.$_captureHoverItem$ == $DvtSvgShadowUtils$$.target) {
            return
          }
          var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$getCtx$());
          $DvtSvgPatternFillUtils$$.$modifyEventForIE$($dvt$$9$$.$MouseEvent$.$MOUSEOUT$, this.$_captureHoverItem$);
          this.$FireListener$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_TRUE$$)
        }
        this.$_captureHoverItem$ = $DvtSvgShadowUtils$$.target
      }else {
        $DvtSvgShadowUtils$$.type == $dvt$$9$$.$MouseEvent$.$MOUSEOUT$ && (this.$_captureHoverItem$ = $JSCompiler_alias_NULL$$)
      }
    }
    $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$getCtx$());
    this.$FireListener$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$getFill$ = function $$dvt$$9$$$$Displayable$$$$getFill$$() {
    return this.$GetProperty$("fill")
  };
  $dvt$$9$$.$Displayable$.prototype.$setFill$ = function $$dvt$$9$$$$Displayable$$$$setFill$$($DvtSvgShadowUtils$$) {
    this.$_manageDefinitions$(this.$GetProperty$("fill"), $DvtSvgShadowUtils$$);
    if($DvtSvgShadowUtils$$) {
      if(this.$GetProperty$("fill") !== $DvtSvgShadowUtils$$) {
        this.$SetProperty$("fill", $DvtSvgShadowUtils$$);
        if($DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$GradientFill$ || $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ImageFill$ || $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$PatternFill$) {
          $dvt$$9$$.$SvgShapeUtils$.$addSpecialFill$($DvtSvgShadowUtils$$, this.$getCtx$()), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", $dvt$$9$$.$ToolkitUtils$.$getUrlById$($DvtSvgShadowUtils$$.getId()))
        }else {
          var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$fixColorForPlatform$($DvtSvgShadowUtils$$.$getColor$(), $DvtSvgShadowUtils$$.$getAlpha$());
          $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.color && ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", $DvtSvgPatternFillUtils$$.color), $DvtSvgPatternFillUtils$$.alpha != $JSCompiler_alias_NULL$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill-opacity", $DvtSvgPatternFillUtils$$.alpha, 1))
        }
        $DvtSvgShadowUtils$$.$__lock$();
        this.$UpdateSelectionEffect$()
      }
    }else {
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "none"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "fill-opacity"), this.$SetProperty$("fill", $JSCompiler_alias_NULL$$)
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$setSolidFill$ = function $$dvt$$9$$$$Displayable$$$$setSolidFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$setFill$(new $dvt$$9$$.$SolidFill$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$))
  };
  $dvt$$9$$.$Displayable$.prototype.$setInvisibleFill$ = function $$dvt$$9$$$$Displayable$$$$setInvisibleFill$$() {
    this.$setFill$($dvt$$9$$.$SolidFill$.$invisibleFill$())
  };
  $dvt$$9$$.$Displayable$.prototype.$getStroke$ = $JSCompiler_get$$("$_stroke$");
  $dvt$$9$$.$Displayable$.prototype.$setStroke$ = function $$dvt$$9$$$$Displayable$$$$setStroke$$($DvtSvgShadowUtils$$) {
    this.$_manageDefinitions$(this.$_stroke$, $DvtSvgShadowUtils$$);
    if(this.$_stroke$ = $DvtSvgShadowUtils$$) {
      if($DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$GradientStroke$) {
        $dvt$$9$$.$SvgShapeUtils$.$addSpecialStroke$($DvtSvgShadowUtils$$, this.$getCtx$());
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke", $dvt$$9$$.$ToolkitUtils$.$getUrlById$($DvtSvgShadowUtils$$.getId()));
        var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getAlpha$();
        $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-opacity", $DvtSvgPatternFillUtils$$)
      }else {
        ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ColorUtils$.$fixColorForPlatform$($DvtSvgShadowUtils$$.$getColor$(), $DvtSvgShadowUtils$$.$getAlpha$())) && $DvtSvgPatternFillUtils$$.color ? ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke", $DvtSvgPatternFillUtils$$.color), $DvtSvgPatternFillUtils$$.alpha != $JSCompiler_alias_NULL$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-opacity", $DvtSvgPatternFillUtils$$.alpha, 1)) : ($dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, 
        "stroke"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-opacity"))
      }
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-width", $DvtSvgShadowUtils$$.getWidth(), 1);
      $DvtSvgShadowUtils$$.$_bFixedWidth$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "vector-effect", "non-scaling-stroke");
      $DvtSvgShadowUtils$$.$getType$() !== $dvt$$9$$.$Stroke$.$SOLID$ ? ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-dasharray", $DvtSvgShadowUtils$$.$_sd$), $DvtSvgShadowUtils$$.$_sdo$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-dashoffset", $DvtSvgShadowUtils$$.$_sdo$)) : ($dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-dasharray"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-dashoffset"));
      ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$_sj$) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-linejoin", $DvtSvgPatternFillUtils$$);
      ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$_se$) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-linecap", $DvtSvgPatternFillUtils$$);
      ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$_sm$) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-miterlimit", $DvtSvgPatternFillUtils$$);
      $DvtSvgShadowUtils$$.$__lock$()
    }else {
      $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-opacity"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-width"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-dasharray"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-dashoffset"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-linejoin"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, 
      "stroke-linecap"), $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-miterlimit")
    }
  };
  $dvt$$9$$.$Displayable$.prototype.$setSolidStroke$ = function $$dvt$$9$$$$Displayable$$$$setSolidStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$setStroke$(new $dvt$$9$$.$SolidStroke$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$))
  };
  $dvt$$9$$.$Displayable$.prototype.$_manageDefinitions$ = function $$dvt$$9$$$$Displayable$$$$_manageDefinitions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ != $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.$_referenceCount$--, 0 == $DvtSvgShadowUtils$$.$_referenceCount$ && $DvtSvgShadowUtils$$.$_defElem$ && (this.$getCtx$().$removeDefs$($DvtSvgShadowUtils$$.$_defElem$), $DvtSvgShadowUtils$$.$_defPresent$ = $JSCompiler_alias_FALSE$$)), $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$.$_referenceCount$ || ($DvtSvgPatternFillUtils$$.$_referenceCount$ = 0), $DvtSvgPatternFillUtils$$.$_referenceCount$++))
  };
  $dvt$$9$$.$Displayable$.prototype.$setTranslate$ = function $$dvt$$9$$$$Displayable$$$$setTranslate$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getMatrix$().$clone$(), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$_decompose$();
    $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && ($DvtSvgGradientUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_TX$] = $DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ && ($DvtSvgGradientUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_TY$] = $DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$.$_recompose$($DvtSvgGradientUtils$$);
    this.$setMatrix$($DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$getTranslateX$ = function $$dvt$$9$$$$Displayable$$$$getTranslateX$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$9$$.$Matrix$.$_DECOMP_TX$] : 0
  };
  $dvt$$9$$.$Displayable$.prototype.$setTranslateX$ = function $$dvt$$9$$$$Displayable$$$$setTranslateX$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().$clone$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_TX$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$getTranslateY$ = function $$dvt$$9$$$$Displayable$$$$getTranslateY$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$9$$.$Matrix$.$_DECOMP_TY$] : 0
  };
  $dvt$$9$$.$Displayable$.prototype.$setTranslateY$ = function $$dvt$$9$$$$Displayable$$$$setTranslateY$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().$clone$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_TY$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$setScale$ = function $$dvt$$9$$$$Displayable$$$$setScale$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getMatrix$().$clone$(), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$_decompose$();
    $DvtSvgShadowUtils$$ && ($DvtSvgGradientUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_SX$] = $DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ && ($DvtSvgGradientUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_SY$] = $DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$.$_recompose$($DvtSvgGradientUtils$$);
    this.$setMatrix$($DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$getScaleX$ = function $$dvt$$9$$$$Displayable$$$$getScaleX$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$9$$.$Matrix$.$_DECOMP_SX$] : 1
  };
  $dvt$$9$$.$Displayable$.prototype.$setScaleX$ = function $$dvt$$9$$$$Displayable$$$$setScaleX$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().$clone$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_SX$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$getScaleY$ = function $$dvt$$9$$$$Displayable$$$$getScaleY$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$9$$.$Matrix$.$_DECOMP_SY$] : 1
  };
  $dvt$$9$$.$Displayable$.prototype.$setScaleY$ = function $$dvt$$9$$$$Displayable$$$$setScaleY$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().$clone$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_SY$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$getRotation$ = function $$dvt$$9$$$$Displayable$$$$getRotation$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$9$$.$Matrix$.$_DECOMP_R$] : 0
  };
  $dvt$$9$$.$Displayable$.prototype.$setRotation$ = function $$dvt$$9$$$$Displayable$$$$setRotation$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().$clone$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$9$$.$Matrix$.$_DECOMP_R$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Displayable$.prototype.$getMatrix$ = function $$dvt$$9$$$$Displayable$$$$getMatrix$$() {
    return this.$_matrix$ ? this.$_matrix$ : new $dvt$$9$$.$Matrix$
  };
  $dvt$$9$$.$Displayable$.prototype.$setMatrix$ = function $$dvt$$9$$$$Displayable$$$$setMatrix$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isIdentity$() && ($DvtSvgShadowUtils$$ = $JSCompiler_alias_NULL$$);
    this.$_matrix$ != $DvtSvgShadowUtils$$ && ((this.$_matrix$ = $DvtSvgShadowUtils$$) && !this.$_matrix$.$_bLocked$ && this.$_matrix$.$__lock$(), !this.$_outerElem$ && $dvt$$9$$.$Displayable$.$HasAttributes$(this.$getElem$(), $dvt$$9$$.$Displayable$.$_ATTRS_TRANSFERABLE_TO_OUTER$) && this.$_createOuterGroupElem$(), (this.$_matrix$ = $DvtSvgShadowUtils$$) ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "transform", "matrix(" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_a$) + 
    "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_c$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_b$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_d$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_tx$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_ty$) + ")", "matrix(1,0,0,1,0,0)") : $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$(this.$getElem$(), "transform") && ($dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getElem$(), 
    "transform"), $dvt$$9$$.$Agent$.$isPlatformIE$() && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "transform", $JSCompiler_alias_NULL$$)))
  };
  $dvt$$9$$.$Container$ = function $$dvt$$9$$$$Container$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, "g", $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Container$, $dvt$$9$$.$Displayable$);
  $dvt$$9$$.$Container$.prototype.Init = function $$dvt$$9$$$$Container$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_bShapeContainer$ = this instanceof $dvt$$9$$.$Shape$;
    $dvt$$9$$.$Container$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgPatternFillUtils$$ : "g", $DvtSvgImageFillUtils$$);
    this.$_childGroupElem$ = $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Container$.$AttributesTransferableToGroup$ = "transform opacity style visibility pointer-events clip-path cursor".split(" ");
  $dvt$$9$$.$Container$.prototype.$addChild$ = function $$dvt$$9$$$$Container$$$$addChild$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getParent();
      $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.removeChild($DvtSvgShadowUtils$$);
      this.$_arList$ || (this.$_arList$ = []);
      $DvtSvgShadowUtils$$.$setParent$(this);
      this.$_bShapeContainer$ && this.$CreateChildGroupElem$($JSCompiler_alias_FALSE$$);
      $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$getContainerElem$(), $DvtSvgShadowUtils$$.$getOuterElem$());
      this.$_arList$.push($DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$Container$.prototype.$addChildAt$ = function $$dvt$$9$$$$Container$$$$addChildAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$AddChildAt$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Container$.prototype.$AddChildAt$ = function $$dvt$$9$$$$Container$$$$AddChildAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(0 <= $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$ <= this.$getNumChildren$() && $DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = this.$_findChild$($DvtSvgShadowUtils$$);
      if(!(0 <= $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$ == $DvtSvgPatternFillUtils$$)) {
        var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.getParent();
        $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$.removeChild($DvtSvgShadowUtils$$);
        $DvtSvgShadowUtils$$.$setParent$(this);
        0 <= $DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$ == this.$getNumChildren$() + 1 && $DvtSvgPatternFillUtils$$--;
        $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$;
        this.$_bShapeContainer$ && (this.$CreateChildGroupElem$($JSCompiler_alias_FALSE$$), $DvtSvgGradientUtils$$++);
        $DvtSvgImageFillUtils$$ = this.$getContainerElem$();
        ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.childNodes[$DvtSvgGradientUtils$$]) || ($DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$);
        $DvtSvgImageFillUtils$$.insertBefore($DvtSvgShadowUtils$$.$getOuterElem$(), $DvtSvgGradientUtils$$);
        this.$_arList$ || (this.$_arList$ = []);
        this.$_arList$.splice($DvtSvgPatternFillUtils$$, 0, $DvtSvgShadowUtils$$)
      }
    }
  };
  $dvt$$9$$.$Container$.prototype.contains = function $$dvt$$9$$$$Container$$$contains$($DvtSvgShadowUtils$$) {
    return 0 <= this.$_findChild$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Container$.prototype.$_findChild$ = function $$dvt$$9$$$$Container$$$$_findChild$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = -1;
    if(this.$_arList$) {
      for(var $DvtSvgImageFillUtils$$ = this.$_arList$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
        if(this.$_arList$[$DvtSvgGradientUtils$$] === $DvtSvgShadowUtils$$) {
          $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$;
          break
        }
      }
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Container$.prototype.$getChildAfter$ = function $$dvt$$9$$$$Container$$$$getChildAfter$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_NULL$$;
    $DvtSvgShadowUtils$$ = this.$_findChild$($DvtSvgShadowUtils$$);
    0 <= $DvtSvgShadowUtils$$ && ++$DvtSvgShadowUtils$$ < this.$_arList$.length && ($DvtSvgPatternFillUtils$$ = this.$_arList$[$DvtSvgShadowUtils$$]);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Container$.prototype.$getChildBefore$ = function $$dvt$$9$$$$Container$$$$getChildBefore$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_NULL$$;
    $DvtSvgShadowUtils$$ = this.$_findChild$($DvtSvgShadowUtils$$);
    0 < $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = this.$_arList$[--$DvtSvgShadowUtils$$]);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Container$.prototype.$getChildAt$ = function $$dvt$$9$$$$Container$$$$getChildAt$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_NULL$$;
    this.$_arList$ && (this.$_arList$.length > $DvtSvgShadowUtils$$ && 0 <= $DvtSvgShadowUtils$$) && ($DvtSvgPatternFillUtils$$ = this.$_arList$[$DvtSvgShadowUtils$$]);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Container$.prototype.$getChildIndex$ = function $$dvt$$9$$$$Container$$$$getChildIndex$$($DvtSvgShadowUtils$$) {
    return this.$_findChild$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Container$.prototype.$getNumChildren$ = function $$dvt$$9$$$$Container$$$$getNumChildren$$() {
    return this.$_arList$ ? this.$_arList$.length : 0
  };
  $dvt$$9$$.$Container$.prototype.removeChild = function $$dvt$$9$$$$Container$$$removeChild$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_findChild$($DvtSvgShadowUtils$$);
    -1 !== $DvtSvgPatternFillUtils$$ && this.$_removeObj$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Container$.prototype.$removeChildImpl$ = function $$dvt$$9$$$$Container$$$$removeChildImpl$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getOuterElem$();
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getParent();
    $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$ && this.$getContainerElem$().removeChild($DvtSvgPatternFillUtils$$);
    if(!this.$_anchorElem$ && (this.$_bShapeContainer$ && 1 === this.$getNumChildren$()) && ($DvtSvgShadowUtils$$ = ($DvtSvgPatternFillUtils$$ = this.$_childGroupElem$) ? $DvtSvgPatternFillUtils$$.parentNode : $JSCompiler_alias_NULL$$)) {
      $dvt$$9$$.$Displayable$.$TransferAttributes$($DvtSvgPatternFillUtils$$, this.$_elem$, this.$GetAttributesTransferableToGroup$()), $DvtSvgShadowUtils$$.replaceChild(this.$_elem$, $DvtSvgPatternFillUtils$$), this.$_childGroupElem$ = $JSCompiler_alias_NULL$$
    }
  };
  $dvt$$9$$.$Container$.prototype.$removeChildAt$ = function $$dvt$$9$$$$Container$$$$removeChildAt$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getChildAt$($DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ && this.$_removeObj$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Container$.prototype.$removeChildren$ = function $$dvt$$9$$$$Container$$$$removeChildren$$() {
    if(this.$_arList$) {
      for(var $DvtSvgShadowUtils$$ = this.$_arList$;0 < this.$getNumChildren$();) {
        this.$_removeObj$($DvtSvgShadowUtils$$[0], 0)
      }
    }
  };
  $dvt$$9$$.$Container$.prototype.$_removeObj$ = function $$dvt$$9$$$$Container$$$$_removeObj$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$removeChildImpl$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$setParent$($JSCompiler_alias_NULL$$);
    this.$_arList$.splice($DvtSvgPatternFillUtils$$, 1);
    0 === this.$_arList$.length && (this.$_arList$ = $JSCompiler_alias_NULL$$)
  };
  $dvt$$9$$.$Container$.prototype.$destroy$ = function $$dvt$$9$$$$Container$$$$destroy$$() {
    $dvt$$9$$.$Container$.$superclass$.$destroy$.call(this);
    for(var $DvtSvgShadowUtils$$ = this.$getNumChildren$(), $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$;$DvtSvgPatternFillUtils$$++) {
      this.$getChildAt$($DvtSvgPatternFillUtils$$).$destroy$()
    }
  };
  $dvt$$9$$.$Container$.prototype.$GetAttributesTransferableToGroup$ = function $$dvt$$9$$$$Container$$$$GetAttributesTransferableToGroup$$() {
    return $dvt$$9$$.$Container$.$AttributesTransferableToGroup$
  };
  $dvt$$9$$.$Container$.prototype.$getElem$ = function $$dvt$$9$$$$Container$$$$getElem$$() {
    return this.$_childGroupElem$ ? this.$_childGroupElem$ : this.$_elem$
  };
  $dvt$$9$$.$Container$.prototype.$CreateChildGroupElem$ = function $$dvt$$9$$$$Container$$$$CreateChildGroupElem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_childGroupElem$ && ($DvtSvgPatternFillUtils$$ || 0 === this.$getNumChildren$())) {
      this.$_childGroupElem$ = $dvt$$9$$.$SvgShapeUtils$.createElement("g", $dvt$$9$$.$Displayable$.$SET_ID_ON_DOM$ && this.$_id$ ? this.$_id$ + "_g" : $JSCompiler_alias_NULL$$);
      var $DvtSvgImageFillUtils$$ = this.getParent();
      $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.$getElem$(), $DvtSvgImageFillUtils$$.replaceChild(this.$_childGroupElem$, this.$_elem$));
      $DvtSvgShadowUtils$$ || $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$_childGroupElem$, this.$_elem$);
      $dvt$$9$$.$Displayable$.$TransferAttributes$(this.$_elem$, this.$_childGroupElem$, this.$GetAttributesTransferableToGroup$());
      this.$_elem$.$_obj$ && (this.$_childGroupElem$.$_obj$ = this.$_elem$.$_obj$);
      $dvt$$9$$.$Agent$.$isEnvironmentTest$() && document.$shapeContainerCount$++
    }else {
      $DvtSvgShadowUtils$$ && this.$removeChildren$()
    }
  };
  $dvt$$9$$.$Container$.prototype.$getDimensionsWithStroke$ = function $$dvt$$9$$$$Container$$$$getDimensionsWithStroke$$() {
    for(var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$getNumChildren$(), $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
      $DvtSvgShadowUtils$$.push(this.$getChildAt$($DvtSvgImageFillUtils$$))
    }
    for(var $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$;0 < $DvtSvgShadowUtils$$.length;) {
      var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.shift();
      ($DvtSvgPatternFillUtils$$ = $DvtSvgFilterUtils$$.$GetDimensionsWithStroke$(this)) && ($DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$.$getUnion$($DvtSvgPatternFillUtils$$) : $DvtSvgPatternFillUtils$$);
      $DvtSvgPatternFillUtils$$ = $DvtSvgFilterUtils$$.$getNumChildren$();
      for($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
        $DvtSvgShadowUtils$$.push($DvtSvgFilterUtils$$.$getChildAt$($DvtSvgImageFillUtils$$))
      }
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Container$.prototype.$GetDimensionsWithStroke$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$Container$.$_reparentChildren$ = function $$dvt$$9$$$$Container$$$_reparentChildren$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.childNodes;
    if($DvtSvgImageFillUtils$$) {
      for(var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.length - 1;0 <= $DvtSvgFilterContext$$;$DvtSvgFilterContext$$--) {
        $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgFilterContext$$], $DvtSvgFilterUtils$$ ? $DvtSvgShadowUtils$$.insertBefore($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) : $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$
      }
    }
  };
  $dvt$$9$$.$Container$.prototype.$getContainerElem$ = function $$dvt$$9$$$$Container$$$$getContainerElem$$() {
    return this.$_anchorElem$ ? this.$_anchorElem$ : this.$getElem$()
  };
  $dvt$$9$$.$Container$.prototype.$dispatchNativeEvent$ = function $$dvt$$9$$$$Container$$$$dispatchNativeEvent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgPatternFillUtils$$ = this.$_bShapeContainer$ ? this.$_childGroupElem$ : this.$_anchorElem$ ? this.$_anchorElem$ : this.$_elem$;
    $DvtSvgPatternFillUtils$$.dispatchEvent && $DvtSvgPatternFillUtils$$.dispatchEvent($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtStage$$, $dvt$$9$$.$Container$);
  $DvtStage$$.prototype.$addChild$ = function $$DvtStage$$$$$addChild$$($DvtSvgShadowUtils$$) {
    $DvtStage$$.$superclass$.$addChild$.call(this, $DvtSvgShadowUtils$$)
  };
  $DvtStage$$.prototype.$appendDefs$ = function $$DvtStage$$$$$appendDefs$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$_elemDefs$, $DvtSvgShadowUtils$$)
  };
  $DvtStage$$.prototype.$getDefs$ = $JSCompiler_get$$("$_elemDefs$");
  $DvtStage$$.prototype.$disableSelection$ = function $$DvtStage$$$$$disableSelection$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.onselectstart = $JSCompiler_returnArg$$($JSCompiler_alias_FALSE$$);
    $DvtSvgShadowUtils$$.onselect = $JSCompiler_returnArg$$($JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$Shape$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Shape$, $dvt$$9$$.$Container$);
  $dvt$$9$$.$Shape$.prototype.Init = function $$dvt$$9$$$$Shape$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$Shape$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$IsSelected$ = this.$_bSelectable$ = $JSCompiler_alias_FALSE$$;
    this.$OriginalStroke$ = this.$SelectedHoverOuterStroke$ = this.$SelectedHoverInnerStroke$ = this.$SelectedOuterStroke$ = this.$SelectedInnerStroke$ = this.$HoverOuterStroke$ = this.$HoverInnerStroke$ = this.$InnerShape$ = $JSCompiler_alias_NULL$$;
    this.$IsShowingHoverEffect$ = this.$_isOriginalStrokeSet$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Shape$.prototype.$setHollow$ = function $$dvt$$9$$$$Shape$$$$setHollow$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(this.$_bHollow$) {
      this.$setFill$(this.$_origFill$), this.$setStroke$(this.$_origStroke$), this.$_bHollow$ = $JSCompiler_alias_FALSE$$
    }else {
      this.$_origFill$ = this.$GetProperty$("fill");
      this.$_origStroke$ = this.$getStroke$();
      var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SolidFill$.$invisibleFill$(), $DvtSvgGradientUtils$$;
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$ ? new $dvt$$9$$.$SolidStroke$($dvt$$9$$.$ColorUtils$.$getRGB$($DvtSvgShadowUtils$$), $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$) : new $dvt$$9$$.$SolidStroke$(this.$GetProperty$("fill").$getColor$(), this.$GetProperty$("fill").$getAlpha$(), $DvtSvgPatternFillUtils$$);
      this.$setFill$($DvtSvgImageFillUtils$$);
      this.$setStroke$($DvtSvgGradientUtils$$);
      this.$_bHollow$ = $JSCompiler_alias_TRUE$$
    }
  };
  $dvt$$9$$.$Shape$.prototype.$destroy$ = function $$dvt$$9$$$$Shape$$$$destroy$$() {
    $dvt$$9$$.$Shape$.$superclass$.$destroy$.call(this);
    this.$setFill$($JSCompiler_alias_NULL$$);
    this.$setStroke$($JSCompiler_alias_NULL$$)
  };
  $dvt$$9$$.$Shape$.prototype.$getDimensionsWithStroke$ = function $$dvt$$9$$$$Shape$$$$getDimensionsWithStroke$$() {
    var $DvtSvgShadowUtils$$ = this.$GetElemDimensionsWithStroke$(), $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Shape$.$superclass$.$getDimensionsWithStroke$.call(this);
    $DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ ? $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getUnion$($DvtSvgPatternFillUtils$$) : $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Shape$.prototype.$GetDimensionsWithStroke$ = function $$dvt$$9$$$$Shape$$$$GetDimensionsWithStroke$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetElemDimensionsWithStroke$();
    return!$DvtSvgShadowUtils$$ || $DvtSvgShadowUtils$$ === this ? $DvtSvgPatternFillUtils$$ : this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Shape$.prototype.$GetElemDimensionsWithStroke$ = function $$dvt$$9$$$$Shape$$$$GetElemDimensionsWithStroke$$() {
    var $DvtSvgShadowUtils$$ = $dvt$$9$$.$Shape$.$superclass$.$GetElemDimensionsWithStroke$.call(this), $DvtSvgPatternFillUtils$$ = this.$getStroke$();
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.getWidth())) {
      var $DvtSvgImageFillUtils$$ = 0.5 * $DvtSvgPatternFillUtils$$;
      $DvtSvgShadowUtils$$.x -= $DvtSvgImageFillUtils$$;
      $DvtSvgShadowUtils$$.y -= $DvtSvgImageFillUtils$$;
      $DvtSvgShadowUtils$$.$w$ += $DvtSvgPatternFillUtils$$;
      $DvtSvgShadowUtils$$.$h$ += $DvtSvgPatternFillUtils$$
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Shape$.prototype.$UpdateSelectionEffect$ = function $$dvt$$9$$$$Shape$$$$UpdateSelectionEffect$$() {
    if(this.$isSelected$() || this.$IsShowingHoverEffect$) {
      var $DvtSvgShadowUtils$$;
      this.$InnerShape$ && ($DvtSvgShadowUtils$$ = this.$InnerShape$.$getStroke$(), this.removeChild(this.$InnerShape$));
      this.$InnerShape$ = this.$copyShape$();
      this.$InnerShape$.$setMouseEnabled$($JSCompiler_alias_FALSE$$);
      this.$InnerShape$.$setFill$(this.$getFill$());
      $DvtSvgShadowUtils$$ && this.$InnerShape$.$setStroke$($DvtSvgShadowUtils$$);
      this.$InnerShape$.$setMouseEnabled$($JSCompiler_alias_FALSE$$);
      this.$InnerShape$.setCursor("pointer");
      this.$AddChildAt$(this.$InnerShape$, 0)
    }
  };
  $dvt$$9$$.$Shape$.prototype.$setHoverStroke$ = function $$dvt$$9$$$$Shape$$$$setHoverStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$HoverInnerStroke$ = $DvtSvgShadowUtils$$;
    this.$HoverOuterStroke$ = $DvtSvgPatternFillUtils$$;
    return this
  };
  $dvt$$9$$.$Shape$.prototype.$setSelectedStroke$ = function $$dvt$$9$$$$Shape$$$$setSelectedStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$SelectedInnerStroke$ = $DvtSvgShadowUtils$$;
    this.$SelectedOuterStroke$ = $DvtSvgPatternFillUtils$$;
    return this
  };
  $dvt$$9$$.$Shape$.prototype.$setSelectedHoverStroke$ = function $$dvt$$9$$$$Shape$$$$setSelectedHoverStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$SelectedHoverInnerStroke$ = $DvtSvgShadowUtils$$;
    this.$SelectedHoverOuterStroke$ = $DvtSvgPatternFillUtils$$;
    return this
  };
  $dvt$$9$$.$Shape$.prototype.$setSelectable$ = function $$dvt$$9$$$$Shape$$$$setSelectable$$($DvtSvgShadowUtils$$) {
    (this.$_bSelectable$ = $DvtSvgShadowUtils$$) ? this.setCursor("pointer") : this.setCursor($JSCompiler_alias_NULL$$)
  };
  $dvt$$9$$.$Shape$.prototype.$isSelectable$ = $JSCompiler_get$$("$_bSelectable$");
  $dvt$$9$$.$Shape$.prototype.$isSelected$ = $JSCompiler_get$$("$IsSelected$");
  $dvt$$9$$.$Shape$.prototype.$setSelected$ = function $$dvt$$9$$$$Shape$$$$setSelected$$($DvtSvgShadowUtils$$) {
    this.$IsSelected$ != $DvtSvgShadowUtils$$ && (this.$_isOriginalStrokeSet$ || (this.$_isOriginalStrokeSet$ = $JSCompiler_alias_TRUE$$, this.$OriginalStroke$ = this.$getStroke$()), this.$IsSelected$ = $DvtSvgShadowUtils$$, this.$isSelected$() ? (this.$UpdateSelectionEffect$(), this.$IsShowingHoverEffect$ ? (this.$CreateSelectedHoverStrokes$(), this.$InnerShape$.$setStroke$(this.$SelectedHoverInnerStroke$), this.$setStroke$(this.$SelectedHoverOuterStroke$)) : (this.$InnerShape$.$setStroke$(this.$SelectedInnerStroke$), 
    this.$setStroke$(this.$SelectedOuterStroke$))) : (this.removeChild(this.$InnerShape$), this.$setStroke$(this.$OriginalStroke$)))
  };
  $dvt$$9$$.$Shape$.prototype.$showHoverEffect$ = function $$dvt$$9$$$$Shape$$$$showHoverEffect$$() {
    this.$IsShowingHoverEffect$ || (this.$IsShowingHoverEffect$ = $JSCompiler_alias_TRUE$$, this.$_isOriginalStrokeSet$ || (this.$_isOriginalStrokeSet$ = $JSCompiler_alias_TRUE$$, this.$OriginalStroke$ = this.$getStroke$()), this.$UpdateSelectionEffect$(), this.$isSelected$() ? (this.$CreateSelectedHoverStrokes$(), this.$InnerShape$.$setStroke$(this.$SelectedHoverInnerStroke$), this.$setStroke$(this.$SelectedHoverOuterStroke$)) : (this.$InnerShape$.$setStroke$(this.$HoverInnerStroke$), this.$setStroke$(this.$HoverOuterStroke$)))
  };
  $dvt$$9$$.$Shape$.prototype.$CreateSelectedHoverStrokes$ = function $$dvt$$9$$$$Shape$$$$CreateSelectedHoverStrokes$$() {
    this.$SelectedHoverInnerStroke$ || (this.$SelectedHoverInnerStroke$ = this.$HoverInnerStroke$.$clone$());
    this.$SelectedHoverOuterStroke$ || (this.$SelectedHoverOuterStroke$ = this.$SelectedOuterStroke$.$clone$(), this.$SelectedHoverOuterStroke$.$setWidth$(this.$SelectedOuterStroke$.getWidth() + (this.$HoverInnerStroke$.getWidth() - this.$SelectedInnerStroke$.getWidth())))
  };
  $dvt$$9$$.$Shape$.prototype.$hideHoverEffect$ = function $$dvt$$9$$$$Shape$$$$hideHoverEffect$$() {
    this.$IsShowingHoverEffect$ && (this.$IsShowingHoverEffect$ = $JSCompiler_alias_FALSE$$, this.$isSelected$() ? (this.$InnerShape$.$setStroke$(this.$SelectedInnerStroke$), this.$setStroke$(this.$SelectedOuterStroke$)) : (this.removeChild(this.$InnerShape$), this.$setStroke$(this.$OriginalStroke$)))
  };
  $dvt$$9$$.$Shape$.prototype.$addChildAt$ = function $$dvt$$9$$$$Shape$$$$addChildAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$9$$.$Shape$.$superclass$.$addChildAt$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ + this.$_getInnerShapeCount$())
  };
  $dvt$$9$$.$Shape$.prototype.$getChildAt$ = function $$dvt$$9$$$$Shape$$$$getChildAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$Shape$.$superclass$.$getChildAt$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ + this.$_getInnerShapeCount$())
  };
  $dvt$$9$$.$Shape$.prototype.$getChildIndex$ = function $$dvt$$9$$$$Shape$$$$getChildIndex$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$Shape$.$superclass$.$getChildIndex$.call(this, $DvtSvgShadowUtils$$);
    return this.$isSelected$() || this.$IsShowingHoverEffect$ ? $DvtSvgShadowUtils$$ + 1 : $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Shape$.prototype.$removeChildAt$ = function $$dvt$$9$$$$Shape$$$$removeChildAt$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Shape$.$superclass$.$removeChildAt$.call(this, $DvtSvgShadowUtils$$ + this.$_getInnerShapeCount$())
  };
  $dvt$$9$$.$Shape$.prototype.$getDimensions$ = function $$dvt$$9$$$$Shape$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    return this.$getDimensionsSelf$ && 0 == this.$getNumChildren$() - this.$_getInnerShapeCount$() ? this.$getDimensionsSelf$($DvtSvgShadowUtils$$) : $dvt$$9$$.$Shape$.$superclass$.$getDimensions$.call(this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Shape$.prototype.$_getInnerShapeCount$ = function $$dvt$$9$$$$Shape$$$$_getInnerShapeCount$$() {
    return this.$isSelected$() || this.$IsShowingHoverEffect$ ? 1 : 0
  };
  $dvt$$9$$.$Shape$.prototype.$SvgPropertyChanged$ = function $$dvt$$9$$$$Shape$$$$SvgPropertyChanged$$() {
    this.$UpdateSelectionEffect$()
  };
  $dvt$$9$$.$Shape$.prototype.$copyShape$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCircularShape$$, $dvt$$9$$.$Shape$);
  $DvtCircularShape$$.prototype.Init = function $$DvtCircularShape$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtCircularShape$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$);
    this.$setCx$($DvtSvgImageFillUtils$$).$setCy$($DvtSvgGradientUtils$$)
  };
  $DvtCircularShape$$.prototype.$getCx$ = function $$DvtCircularShape$$$$$getCx$$() {
    return this.$GetProperty$("cx")
  };
  $DvtCircularShape$$.prototype.$setCx$ = function $$DvtCircularShape$$$$$setCx$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("cx", $DvtSvgShadowUtils$$, 0)
  };
  $DvtCircularShape$$.prototype.$getCy$ = function $$DvtCircularShape$$$$$getCy$$() {
    return this.$GetProperty$("cy")
  };
  $DvtCircularShape$$.prototype.$setCy$ = function $$DvtCircularShape$$$$$setCy$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("cy", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtPolygonalShape$$, $dvt$$9$$.$Shape$);
  $DvtPolygonalShape$$.prototype.Init = function $$DvtPolygonalShape$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtPolygonalShape$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
    $DvtSvgImageFillUtils$$ && this.$setPoints$($DvtSvgImageFillUtils$$)
  };
  $DvtPolygonalShape$$.prototype.$getPoints$ = function $$DvtPolygonalShape$$$$$getPoints$$() {
    return this.$GetProperty$("arPoints")
  };
  $DvtPolygonalShape$$.prototype.$setPoints$ = function $$DvtPolygonalShape$$$$$setPoints$$($DvtSvgShadowUtils$$) {
    this.$SetProperty$("arPoints", $DvtSvgShadowUtils$$);
    return this.$SetSvgProperty$("points", $dvt$$9$$.$SvgShapeUtils$.$convertPointsArray$($DvtSvgShadowUtils$$))
  };
  $DvtPolygonalShape$$.prototype.$getDimensionsSelf$ = function $$DvtPolygonalShape$$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$PolygonUtils$.$getDimensions$(this.$getPoints$());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Arc$ = function $$dvt$$9$$$$Arc$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Arc$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$Arc$.OPEN = "OPEN";
  $dvt$$9$$.$Arc$.$CHORD$ = "CHORD";
  $dvt$$9$$.$Arc$.$PIE$ = "PIE";
  $dvt$$9$$.$Arc$.prototype.Init = function $$dvt$$9$$$$Arc$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    $dvt$$9$$.$Arc$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "path", $DvtDomXmlParser$$);
    this.$_ae$ = this.$_sa$ = 0;
    $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgFilterUtils$$) ? $DvtSvgGradientUtils$$ : $DvtSvgFilterUtils$$;
    this.$_bInInit$ = $JSCompiler_alias_TRUE$$;
    this.$setCx$($DvtSvgPatternFillUtils$$);
    this.$setCy$($DvtSvgImageFillUtils$$);
    this.$setRx$($DvtSvgGradientUtils$$);
    this.$setRy$($DvtSvgFilterUtils$$);
    this.$setAngleStart$($DvtSvgFilterContext$$);
    this.$setAngleExtent$($DvtSvgImplFactory$$);
    this.$setClosure$($DvtHtmlRichTooltipManager$$ ? $DvtHtmlRichTooltipManager$$ : $dvt$$9$$.$Arc$.OPEN);
    this.$_bInInit$ = $JSCompiler_alias_FALSE$$;
    this.$_createArc$()
  };
  $dvt$$9$$.$Arc$.prototype.$_addClosure$ = function $$dvt$$9$$$$Arc$$$$_addClosure$$($DvtSvgShadowUtils$$) {
    this.$_ct$ === $dvt$$9$$.$Arc$.$CHORD$ ? $DvtSvgShadowUtils$$ += " z" : this.$_ct$ === $dvt$$9$$.$Arc$.$PIE$ ? $DvtSvgShadowUtils$$ += " L " + this.$_cx$ + "," + this.$_cy$ + " z" : this.$_ct$ === $dvt$$9$$.$Arc$.OPEN && this.$setFill$($JSCompiler_alias_NULL$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Arc$.prototype.$_createArc$ = function $$dvt$$9$$$$Arc$$$$_createArc$$() {
    if(!this.$_bInInit$) {
      var $DvtSvgShadowUtils$$ = this.$_sa$ * $dvt$$9$$.$Math$.$RADS_PER_DEGREE$, $DvtSvgPatternFillUtils$$ = this.$_ae$ * $dvt$$9$$.$Math$.$RADS_PER_DEGREE$, $DvtSvgShadowUtils$$ = "M " + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(this.$_cx$ + this.$_rx$ * Math.cos($DvtSvgShadowUtils$$)) + " " + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(this.$_cy$ - this.$_ry$ * Math.sin($DvtSvgShadowUtils$$)) + " A " + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(this.$_rx$) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(this.$_ry$) + 
      " 0 " + (180 < Math.abs(this.$_ae$) ? "1" : "0") + "," + (0 < this.$_ae$ ? "0" : "1") + " " + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(this.$_cx$ + this.$_rx$ * Math.cos($DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$)) + "," + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(this.$_cy$ - this.$_ry$ * Math.sin($DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$)), $DvtSvgShadowUtils$$ = this.$_addClosure$($DvtSvgShadowUtils$$);
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "d", $DvtSvgShadowUtils$$);
      this.$_stroke$ !== $JSCompiler_alias_NULL$$ && this.$setStroke$(this.$_stroke$)
    }
  };
  $dvt$$9$$.$Arc$.prototype.$getAngleExtent$ = $JSCompiler_get$$("$_ae$");
  $dvt$$9$$.$Arc$.prototype.$setAngleExtent$ = function $$dvt$$9$$$$Arc$$$$setAngleExtent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.$_ae$ !== $DvtSvgShadowUtils$$ && (360 === $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = 359.99), this.$_ae$ = $DvtSvgShadowUtils$$, this.$_createArc$(), this.$UpdateSelectionEffect$())
  };
  $dvt$$9$$.$Arc$.prototype.$getAngleStart$ = $JSCompiler_get$$("$_sa$");
  $dvt$$9$$.$Arc$.prototype.$setAngleStart$ = function $$dvt$$9$$$$Arc$$$$setAngleStart$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ === $JSCompiler_alias_NULL$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.$_sa$ !== $DvtSvgShadowUtils$$ && (this.$_sa$ = $DvtSvgShadowUtils$$, this.$_createArc$(), this.$UpdateSelectionEffect$())
  };
  $dvt$$9$$.$Arc$.prototype.$setClosure$ = function $$dvt$$9$$$$Arc$$$$setClosure$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_ct$ && (this.$_ct$ = $DvtSvgShadowUtils$$, this.$_createArc$(), this.$UpdateSelectionEffect$())
  };
  $dvt$$9$$.$Arc$.prototype.$getCx$ = $JSCompiler_get$$("$_cx$");
  $dvt$$9$$.$Arc$.prototype.$setCx$ = function $$dvt$$9$$$$Arc$$$$setCx$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_cx$ && (this.$_cx$ = $DvtSvgShadowUtils$$, $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cx", $DvtSvgShadowUtils$$), this.$UpdateSelectionEffect$())
  };
  $dvt$$9$$.$Arc$.prototype.$getCy$ = $JSCompiler_get$$("$_cy$");
  $dvt$$9$$.$Arc$.prototype.$setCy$ = function $$dvt$$9$$$$Arc$$$$setCy$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_cy$ && (this.$_cy$ = $DvtSvgShadowUtils$$, $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cy", $DvtSvgShadowUtils$$), this.$UpdateSelectionEffect$())
  };
  $dvt$$9$$.$Arc$.prototype.$getRx$ = $JSCompiler_get$$("$_rx$");
  $dvt$$9$$.$Arc$.prototype.$setRx$ = function $$dvt$$9$$$$Arc$$$$setRx$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_rx$ && (this.$_rx$ = $DvtSvgShadowUtils$$, $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "rx", this.$_rx$), this.$_createArc$(), this.$UpdateSelectionEffect$())
  };
  $dvt$$9$$.$Arc$.prototype.$getRy$ = $JSCompiler_get$$("$_ry$");
  $dvt$$9$$.$Arc$.prototype.$setRy$ = function $$dvt$$9$$$$Arc$$$$setRy$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_ry$ && (this.$_ry$ = $DvtSvgShadowUtils$$, $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "ry", this.$_ry$), this.$_createArc$(), this.$UpdateSelectionEffect$())
  };
  $dvt$$9$$.$Arc$.prototype.$setRadius$ = function $$dvt$$9$$$$Arc$$$$setRadius$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$setRx$($DvtSvgShadowUtils$$);
    this.$setRy$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Arc$.prototype.$copyShape$ = function $$dvt$$9$$$$Arc$$$$copyShape$$() {
    return new $dvt$$9$$.$Arc$(this.$getCtx$(), this.$getCx$(), this.$getCy$(), this.$getRx$(), this.$getRy$(), this.$getAngleStart$(), this.$getAngleExtent$(), this.$_ct$)
  };
  $dvt$$9$$.$Arc$.prototype.$GetAriaElem$ = function $$dvt$$9$$$$Arc$$$$GetAriaElem$$() {
    $dvt$$9$$.$Agent$.$isTouchDevice$() && this.$CreateChildGroupElem$($JSCompiler_alias_FALSE$$, $JSCompiler_alias_TRUE$$);
    return $dvt$$9$$.$Arc$.$superclass$.$GetAriaElem$.call(this)
  };
  $dvt$$9$$.$Circle$ = function $$dvt$$9$$$$Circle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Circle$, $DvtCircularShape$$);
  $dvt$$9$$.$Circle$.prototype.Init = function $$dvt$$9$$$$Circle$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$9$$.$Circle$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "circle", $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    this.$setRadius$($DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Circle$.prototype.$getRadius$ = function $$dvt$$9$$$$Circle$$$$getRadius$$() {
    return this.$GetProperty$("r")
  };
  $dvt$$9$$.$Circle$.prototype.$setRadius$ = function $$dvt$$9$$$$Circle$$$$setRadius$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("r", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Circle$.prototype.$copyShape$ = function $$dvt$$9$$$$Circle$$$$copyShape$$() {
    return new $dvt$$9$$.$Circle$(this.$getCtx$(), this.$getCx$(), this.$getCy$(), this.$getRadius$())
  };
  $dvt$$9$$.$Circle$.prototype.$getDimensionsSelf$ = function $$dvt$$9$$$$Circle$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Rectangle$(this.$getCx$() - this.$getRadius$(), this.$getCy$() - this.$getRadius$(), 2 * this.$getRadius$(), 2 * this.$getRadius$());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Image$ = function $$dvt$$9$$$$Image$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Image$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$Image$.$XLINK_NS$ = "http://www.w3.org/1999/xlink";
  $dvt$$9$$.$Image$.prototype.Init = function $$dvt$$9$$$$Image$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $dvt$$9$$.$Image$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "image", $DvtSvgImplFactory$$);
    $dvt$$9$$.$Agent$.$isPlatformIE$() && ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "#FFFFFF"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill-opacity", "0"));
    this.$setImage$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$setAriaProperty$("hidden", "true")
  };
  $dvt$$9$$.$Image$.prototype.$getX$ = function $$dvt$$9$$$$Image$$$$getX$$() {
    return this.$GetProperty$("x")
  };
  $dvt$$9$$.$Image$.prototype.$setX$ = function $$dvt$$9$$$$Image$$$$setX$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Image$.prototype.$getY$ = function $$dvt$$9$$$$Image$$$$getY$$() {
    return this.$GetProperty$("y")
  };
  $dvt$$9$$.$Image$.prototype.$setY$ = function $$dvt$$9$$$$Image$$$$setY$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Image$.prototype.getWidth = function $$dvt$$9$$$$Image$$$getWidth$() {
    return this.$GetProperty$("width")
  };
  $dvt$$9$$.$Image$.prototype.$setWidth$ = function $$dvt$$9$$$$Image$$$$setWidth$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("width", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Image$.prototype.getHeight = function $$dvt$$9$$$$Image$$$getHeight$() {
    return this.$GetProperty$("height")
  };
  $dvt$$9$$.$Image$.prototype.$setHeight$ = function $$dvt$$9$$$$Image$$$$setHeight$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("height", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Image$.prototype.$getSrc$ = $JSCompiler_get$$("$_src$");
  $dvt$$9$$.$Image$.prototype.$setSrc$ = function $$dvt$$9$$$$Image$$$$setSrc$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ !== this.$_src$) {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$;
      this.$_src$ = $DvtSvgShadowUtils$$;
      if($dvt$$9$$.$Agent$.$isEnvironmentBatik$() && ($DvtSvgShadowUtils$$ = $dvt$$9$$.$JavaImageLoader$.$getImageInfo$($DvtSvgShadowUtils$$))) {
        $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.uri
      }
      $dvt$$9$$.$ToolkitUtils$.$setAttrNS$(this.$_elem$, $dvt$$9$$.$Image$.$XLINK_NS$, "xlink:href", $DvtSvgPatternFillUtils$$)
    }
    return this
  };
  $dvt$$9$$.$Image$.prototype.$setPos$ = function $$dvt$$9$$$$Image$$$$setPos$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$setX$($DvtSvgShadowUtils$$).$setY$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Image$.prototype.$setImage$ = function $$dvt$$9$$$$Image$$$$setImage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$Image$ ? (this.$setSrc$($DvtSvgShadowUtils$$.src), this.$setPos$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y), this.$setWidth$($DvtSvgShadowUtils$$.$w$), this.$setHeight$($DvtSvgShadowUtils$$.$h$)) : (this.$setSrc$($DvtSvgShadowUtils$$), this.$setPos$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), this.$setWidth$($DvtSvgGradientUtils$$), this.$setHeight$($DvtSvgFilterUtils$$));
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "preserveAspectRatio", "none")
  };
  $dvt$$9$$.$Image$.prototype.$getDimensions$ = function $$dvt$$9$$$$Image$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    if(this.$getDimensionsSelf$ && 0 == this.$getNumChildren$() - this.$_getInnerShapeCount$()) {
      return this.$getDimensionsSelf$($DvtSvgShadowUtils$$)
    }
    var $DvtSvgPatternFillUtils$$ = this.$getElem$().getBBox(), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.width && $DvtSvgPatternFillUtils$$.height ? new $dvt$$9$$.$Rectangle$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y, $DvtSvgPatternFillUtils$$.width, $DvtSvgPatternFillUtils$$.height) : new $dvt$$9$$.$Rectangle$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y, this.getWidth(), this.getHeight());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Image$.prototype.$__setDimensions$ = function $$dvt$$9$$$$Image$$$$__setDimensions$$($DvtSvgShadowUtils$$) {
    this.$setWidth$($DvtSvgShadowUtils$$.width);
    this.$setHeight$($DvtSvgShadowUtils$$.height)
  };
  $dvt$$9$$.$Image$.prototype.$UpdateSelectionEffect$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Image$.prototype.$copyShape$ = function $$dvt$$9$$$$Image$$$$copyShape$$() {
    return new $dvt$$9$$.$Image$(this.$getCtx$(), this.$getSrc$(), this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight())
  };
  $dvt$$9$$.$Image$.prototype.$getDimensionsSelf$ = function $$dvt$$9$$$$Image$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Rectangle$(this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Image$.prototype.$setAriaProperty$ = function $$dvt$$9$$$$Image$$$$setAriaProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$9$$.$Image$.$superclass$.$setAriaProperty$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    "hidden" != $DvtSvgShadowUtils$$ && $dvt$$9$$.$Image$.$superclass$.$setAriaProperty$.call(this, "hidden", $JSCompiler_alias_NULL$$)
  };
  $dvt$$9$$.$Line$ = function $$dvt$$9$$$$Line$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Line$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$Line$.prototype.Init = function $$dvt$$9$$$$Line$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$9$$.$Line$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "line", $DvtSvgFilterContext$$);
    this.$setX1$($DvtSvgPatternFillUtils$$).$setY1$($DvtSvgImageFillUtils$$).$setX2$($DvtSvgGradientUtils$$).$setY2$($DvtSvgFilterUtils$$);
    this.$_bHollow$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Line$.prototype.$getX1$ = function $$dvt$$9$$$$Line$$$$getX1$$() {
    return this.$GetProperty$("x1")
  };
  $dvt$$9$$.$Line$.prototype.$setX1$ = function $$dvt$$9$$$$Line$$$$setX1$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x1", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$Line$.prototype.$getY1$ = function $$dvt$$9$$$$Line$$$$getY1$$() {
    return this.$GetProperty$("y1")
  };
  $dvt$$9$$.$Line$.prototype.$setY1$ = function $$dvt$$9$$$$Line$$$$setY1$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y1", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$Line$.prototype.$getX2$ = function $$dvt$$9$$$$Line$$$$getX2$$() {
    return this.$GetProperty$("x2")
  };
  $dvt$$9$$.$Line$.prototype.$setX2$ = function $$dvt$$9$$$$Line$$$$setX2$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x2", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$Line$.prototype.$getY2$ = function $$dvt$$9$$$$Line$$$$getY2$$() {
    return this.$GetProperty$("y2")
  };
  $dvt$$9$$.$Line$.prototype.$setY2$ = function $$dvt$$9$$$$Line$$$$setY2$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y2", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$Line$.prototype.$setHollow$ = function $$dvt$$9$$$$Line$$$$setHollow$$() {
    var $DvtSvgShadowUtils$$ = this.$_elem$.parentNode;
    if(this.$_bHollow$) {
      this.$_origElem$ && ($DvtSvgShadowUtils$$.replaceChild(this.$_origElem$, this.$_elem$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_origElem$, "opacity", this.$_alpha$), this.$_elem$ = this.$_origElem$, this.$_origElem$ = $JSCompiler_alias_NULL$$, this.$_bHollow$ = $JSCompiler_alias_FALSE$$)
    }else {
      this.$_origElem$ = this.$_elem$;
      var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = this.$getX2$() - this.$getX1$(), $DvtSvgGradientUtils$$ = this.$getY1$() - $DvtSvgImageFillUtils$$ / 2, $DvtSvgFilterUtils$$ = this.$getStroke$();
      $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("rect");
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "x", this.$getX1$());
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "y", $DvtSvgGradientUtils$$);
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "width", this.$getX2$() - this.$getX1$());
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "height", $DvtSvgImageFillUtils$$);
      if($DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$.$getColor$()) {
        $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.$getAlpha$(), $dvt$$9$$.$Agent$.$isBrowserSafari$() && -1 !== $DvtSvgImageFillUtils$$.indexOf("rgba") ? ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke", $dvt$$9$$.$ColorUtils$.$getRGB$($DvtSvgImageFillUtils$$)), $DvtSvgFilterUtils$$ != $JSCompiler_alias_NULL$$ ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke-opacity", $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgImageFillUtils$$) * $DvtSvgFilterUtils$$) : 
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke-opacity", $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgImageFillUtils$$))) : ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke", $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ != $JSCompiler_alias_NULL$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke-opacity", $DvtSvgFilterUtils$$))
      }
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill", "#ffffff");
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill-opacity", "0.001");
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "shape-rendering", "crispEdges");
      $DvtSvgPatternFillUtils$$.$_obj$ = this;
      $DvtSvgShadowUtils$$.replaceChild($DvtSvgPatternFillUtils$$, this.$_elem$);
      this.$_elem$ = $DvtSvgPatternFillUtils$$;
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "opacity", this.$_alpha$);
      this.$_bHollow$ = $JSCompiler_alias_TRUE$$
    }
  };
  $dvt$$9$$.$Line$.prototype.$getDimensions$ = function $$dvt$$9$$$$Line$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$Line$.$superclass$.$getDimensions$.call(this, $DvtSvgShadowUtils$$);
    if(this.$_childGroupElem$ && this.$_elem$) {
      var $DvtSvgPatternFillUtils$$ = this.$_childGroupElem$.getBBox();
      0 == $DvtSvgPatternFillUtils$$.x && (0 == $DvtSvgPatternFillUtils$$.y && 0 == $DvtSvgPatternFillUtils$$.width && 0 == $DvtSvgPatternFillUtils$$.height) && ($DvtSvgShadowUtils$$ = this.$_elem$.getBBox(), $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Rectangle$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$.width, $DvtSvgShadowUtils$$.height))
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Line$.prototype.$copyShape$ = function $$dvt$$9$$$$Line$$$$copyShape$$() {
    return new $dvt$$9$$.$Line$(this.$getCtx$(), this.$getX1$(), this.$getY1$(), this.$getX2$(), this.$getY2$())
  };
  $dvt$$9$$.$Line$.prototype.$getDimensionsSelf$ = function $$dvt$$9$$$$Line$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = Math.min(this.$getX1$(), this.$getX2$()), $DvtSvgImageFillUtils$$ = Math.min(this.$getY1$(), this.$getY2$());
    return this.$ConvertCoordSpaceRect$(new $dvt$$9$$.$Rectangle$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, Math.abs(this.$getX1$() - this.$getX2$()), Math.abs(this.$getY1$() - this.$getY2$())), $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$ = function $$dvt$$9$$$$Marker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Marker$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$Marker$.NONE = "none";
  $dvt$$9$$.$Marker$.$CIRCLE$ = "circle";
  $dvt$$9$$.$Marker$.$SQUARE$ = "square";
  $dvt$$9$$.$Marker$.$DIAMOND$ = "diamond";
  $dvt$$9$$.$Marker$.$TRIANGLE_UP$ = "triangleUp";
  $dvt$$9$$.$Marker$.$TRIANGLE_DOWN$ = "triangleDown";
  $dvt$$9$$.$Marker$.$PLUS$ = "plus";
  $dvt$$9$$.$Marker$.$HUMAN$ = "human";
  $dvt$$9$$.$Marker$.$ROUNDED_RECTANGLE$ = "roundedRect";
  $dvt$$9$$.$Marker$.$CUSTOM$ = "custom";
  $dvt$$9$$.$Marker$.$IMAGE$ = "image";
  $dvt$$9$$.$Marker$.$SELECTION_STROKE_COLOR$ = "#000000";
  $dvt$$9$$.$Marker$.$SELECTION_STROKE_ALPHA$ = 1;
  $dvt$$9$$.$Marker$.$IMAGE_SOURCE$ = 0;
  $dvt$$9$$.$Marker$.$IMAGE_SOURCE_SELECTED$ = 1;
  $dvt$$9$$.$Marker$.$IMAGE_SOURCE_HOVER$ = 2;
  $dvt$$9$$.$Marker$.$IMAGE_SOURCE_HOVER_SELECTED$ = 3;
  $dvt$$9$$.$Marker$.$_REFERENCE_X$ = 0;
  $dvt$$9$$.$Marker$.$_REFERENCE_Y$ = 0;
  $dvt$$9$$.$Marker$.$_REFERENCE_W$ = 10;
  $dvt$$9$$.$Marker$.$_REFERENCE_H$ = 10;
  $dvt$$9$$.$Marker$.$MARKER_CIRCLE_ELEM_NAME$ = "circle";
  $dvt$$9$$.$Marker$.$MARKER_ELLIPSE_ELEM_NAME$ = "ellipse";
  $dvt$$9$$.$Marker$.$MARKER_LINE_ELEM_NAME$ = "line";
  $dvt$$9$$.$Marker$.$MARKER_PATH_ELEM_NAME$ = "path";
  $dvt$$9$$.$Marker$.$MARKER_POLYGON_ELEM_NAME$ = "polygon";
  $dvt$$9$$.$Marker$.$MARKER_POLYLINE_ELEM_NAME$ = "polyline";
  $dvt$$9$$.$Marker$.$MARKER_RECT_ELEM_NAME$ = "rect";
  $dvt$$9$$.$Marker$.prototype.Init = function $$dvt$$9$$$$Marker$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$) {
    this.$_skin$ = $DvtSvgImageFillUtils$$;
    this.$_xx$ = $DvtSvgGradientUtils$$;
    this.$_yy$ = $DvtSvgFilterUtils$$;
    this.$_ww$ = $DvtSvgFilterContext$$;
    this.$_hh$ = $DvtSvgImplFactory$$;
    this.$_sx$ = $DvtDomXmlParser$$ ? $DvtDomXmlParser$$ : 1;
    this.$_sy$ = $DvtContextMenuTooltipItem$$ ? $DvtContextMenuTooltipItem$$ : 1;
    this.$_maintainAspect$ = $DvtCustomTooltipItem$$;
    this.$_initType$ = $DvtSvgPatternFillUtils$$;
    var $DvtCustomTooltip$$, $DvtCircularShape$$;
    if($DvtSvgPatternFillUtils$$ instanceof Array) {
      this.$_setMarkerImageStates$($DvtSvgPatternFillUtils$$), $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Marker$.$IMAGE$
    }else {
      if($dvt$$9$$.$Marker$.$isBuiltInShape$($DvtSvgPatternFillUtils$$)) {
        $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Marker$.$convertShapeString$($DvtSvgPatternFillUtils$$)
      }else {
        if($DvtCircularShape$$ = $dvt$$9$$.$MarkerUtils$.$getCustomMarkerInfo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)) {
          $DvtCustomTooltip$$ = $DvtCircularShape$$ instanceof $dvt$$9$$.$Path$ ? "path" : "g";
          if(!$DvtSvgFilterContext$$ || !$DvtSvgImplFactory$$) {
            $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DisplayableUtils$.$getDimForced$($DvtSvgShadowUtils$$, $DvtCircularShape$$), $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$ ? $DvtSvgFilterContext$$ : $DvtSvgPatternFillUtils$$.$w$, $DvtSvgImplFactory$$ = $DvtSvgImplFactory$$ ? $DvtSvgImplFactory$$ : $DvtSvgPatternFillUtils$$.$h$, this.$_ww$ = $DvtSvgFilterContext$$, this.$_hh$ = $DvtSvgImplFactory$$
          }
          $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Marker$.$CUSTOM$
        }else {
          $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Marker$.$SQUARE$
        }
      }
    }
    $dvt$$9$$.$Marker$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtCustomTooltip$$ ? $DvtCustomTooltip$$ : $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$CIRCLE$ ? "ellipse" : $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$SQUARE$ ? "rect" : $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$ROUNDED_RECTANGLE$ ? "rect" : $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$TRIANGLE_UP$ ? "polygon" : $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$TRIANGLE_DOWN$ ? "polygon" : $DvtSvgPatternFillUtils$$ === 
    $dvt$$9$$.$Marker$.$DIAMOND$ ? "polygon" : $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$PLUS$ ? "polygon" : $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$HUMAN$ ? "path" : $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$IMAGE$ ? "image" : "rect", $DvtHtmlRichTooltipManager$$);
    this.$_type$ = $DvtSvgPatternFillUtils$$;
    this.$_defaultScale$ = 1;
    $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$Marker$.$HUMAN$ && ($DvtCircularShape$$ = $dvt$$9$$.$MarkerUtils$.$getBuiltinMarkerInfo$($DvtSvgShadowUtils$$, "human", this.$getSkin$()));
    $DvtSvgShadowUtils$$ = this.$getScaledWidth$();
    $DvtSvgFilterContext$$ = this.$getScaledHeight$();
    this.$_size$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgFilterContext$$);
    this.$setBounds$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$, $DvtSvgFilterContext$$, $DvtCircularShape$$);
    this.$_dataColor$ = "#000000";
    this.$_savedFill$ = this.$_savedStroke$ = $JSCompiler_alias_NULL$$;
    this.$_bSavedFill$ = this.$_bSavedStroke$ = $JSCompiler_alias_FALSE$$;
    this.$_selStrokeAlpha$ = this.$_selStrokeColor$ = this.$_selStrokeWidth$ = $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Marker$.prototype.$getSize$ = $JSCompiler_get$$("$_size$");
  $dvt$$9$$.$Marker$.prototype.$setBounds$ = function $$dvt$$9$$$$Marker$$$$setBounds$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_shapeInitialized$ || this.$InitShape$(this.$_type$, $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$InitShape$ = function $$dvt$$9$$$$Marker$$$$InitShape$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.$_shapeInitialized$ = $JSCompiler_alias_TRUE$$;
    this.$_x$ = $DvtSvgImageFillUtils$$;
    this.$_y$ = $DvtSvgGradientUtils$$;
    this.$_w$ = $DvtSvgFilterUtils$$;
    this.$_h$ = $DvtSvgFilterContext$$;
    if($DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$CUSTOM$ || $DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$HUMAN$) {
      var $DvtSvgImplFactory$$ = $dvt$$9$$.$DisplayableUtils$.$getDimForced$(this.$getCtx$(), $DvtSvgPatternFillUtils$$), $DvtHtmlRichTooltipManager$$ = Math.max($DvtSvgImplFactory$$.$w$, $DvtSvgImplFactory$$.$h$), $DvtDomXmlParser$$ = 1, $DvtContextMenuTooltipItem$$ = 1;
      $DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$CUSTOM$ ? ($DvtDomXmlParser$$ = $DvtSvgFilterUtils$$ / (this.$getMaintainAspect$() ? $DvtHtmlRichTooltipManager$$ : $DvtSvgImplFactory$$.$w$), $DvtContextMenuTooltipItem$$ = $DvtSvgFilterContext$$ / (this.$getMaintainAspect$() ? $DvtHtmlRichTooltipManager$$ : $DvtSvgImplFactory$$.$h$), $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ + -$DvtSvgImplFactory$$.x * $DvtDomXmlParser$$ + ($DvtSvgFilterUtils$$ - $DvtSvgImplFactory$$.$w$ * $DvtDomXmlParser$$) / 
      2, $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ + -$DvtSvgImplFactory$$.y * $DvtContextMenuTooltipItem$$ + ($DvtSvgFilterContext$$ - $DvtSvgImplFactory$$.$h$ * $DvtContextMenuTooltipItem$$) / 2, this.$_setCustomMarker$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$)) : $DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$HUMAN$ && ($DvtDomXmlParser$$ = $DvtSvgFilterUtils$$ / $DvtHtmlRichTooltipManager$$, $DvtContextMenuTooltipItem$$ = 
      $DvtSvgFilterContext$$ / $DvtHtmlRichTooltipManager$$, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ + -$DvtSvgImplFactory$$.x * $DvtDomXmlParser$$ + ($DvtSvgFilterUtils$$ - $DvtSvgImplFactory$$.$w$ * $DvtDomXmlParser$$) / 2, $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ + -$DvtSvgImplFactory$$.y * $DvtContextMenuTooltipItem$$ + ($DvtSvgFilterContext$$ - $DvtSvgImplFactory$$.$h$ * $DvtContextMenuTooltipItem$$) / 2, $DvtSvgShadowUtils$$ = $dvt$$9$$.$CSSStyle$.$afterSkinAlta$(this.$getSkin$()) ? 
      $dvt$$9$$.$MarkerDef$.$HUMAN2_CMDS$ : $dvt$$9$$.$MarkerDef$.$HUMAN_CMDS$, this.$_setCmds$($dvt$$9$$.$PathUtils$.$transformPath$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$)));
      this.$_defaultScale$ = $DvtSvgImplFactory$$.$h$ === $DvtHtmlRichTooltipManager$$ ? $DvtSvgFilterContext$$ / $DvtHtmlRichTooltipManager$$ : $DvtSvgFilterUtils$$ / $DvtHtmlRichTooltipManager$$
    }else {
      if($DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$IMAGE$) {
        $DvtSvgShadowUtils$$ = this.$GetMarkerImage$($dvt$$9$$.$Marker$.$IMAGE_SOURCE$), this.$_setX$($DvtSvgImageFillUtils$$), this.$_setY$($DvtSvgGradientUtils$$), this.$_setWidth$($DvtSvgFilterUtils$$), this.$_setHeight$($DvtSvgFilterContext$$), this.$setSource$($DvtSvgShadowUtils$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "preserveAspectRatio", "none"), $dvt$$9$$.$Agent$.$isPlatformIE$() && ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "#FFFFFF"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, 
        "fill-opacity", "0"))
      }else {
        if($DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$SQUARE$) {
          this.$_setX$($DvtSvgImageFillUtils$$), this.$_setY$($DvtSvgGradientUtils$$), this.$_setWidth$($DvtSvgFilterUtils$$), this.$_setHeight$($DvtSvgFilterContext$$)
        }else {
          if($DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$ROUNDED_RECTANGLE$) {
            this.$_setX$($DvtSvgImageFillUtils$$);
            this.$_setY$($DvtSvgGradientUtils$$);
            this.$_setWidth$($DvtSvgFilterUtils$$);
            this.$_setHeight$($DvtSvgFilterContext$$);
            $DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$ = 6;
            if($DvtSvgFilterUtils$$ / 4 < $DvtSvgGradientUtils$$ || $DvtSvgFilterContext$$ / 4 < $DvtSvgImageFillUtils$$) {
              $DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$ = Math.min($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) / 4
            }
            this.$_setRX$($DvtSvgGradientUtils$$);
            this.$_setRY$($DvtSvgImageFillUtils$$)
          }else {
            $DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$CIRCLE$ ? (this.$_setCx$($DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$ / 2), this.$_setCy$($DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$ / 2), this.$_setRX$($DvtSvgFilterUtils$$ / 2), this.$_setRY$($DvtSvgFilterContext$$ / 2)) : ($DvtSvgImplFactory$$ = [], $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterUtils$$ / 2, $DvtDomXmlParser$$ = $DvtSvgFilterContext$$ / 2, $DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$TRIANGLE_UP$ ? ($DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$), 
            $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$), this.$_setPolygon$($DvtSvgImplFactory$$)) : $DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$TRIANGLE_DOWN$ ? ($DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$), 
            $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$), this.$_setPolygon$($DvtSvgImplFactory$$)) : $DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$DIAMOND$ ? ($DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + 
            $DvtHtmlRichTooltipManager$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtDomXmlParser$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + 
            $DvtDomXmlParser$$), this.$_setPolygon$($DvtSvgImplFactory$$)) : $DvtSvgShadowUtils$$ === $dvt$$9$$.$Marker$.$PLUS$ && ($DvtSvgShadowUtils$$ = $DvtSvgFilterUtils$$ / 3, $DvtHtmlRichTooltipManager$$ = 2 * $DvtSvgShadowUtils$$, $DvtDomXmlParser$$ = $DvtSvgFilterContext$$ / 3, $DvtContextMenuTooltipItem$$ = 2 * $DvtDomXmlParser$$, $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + 
            $DvtHtmlRichTooltipManager$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtDomXmlParser$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtDomXmlParser$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + 
            $DvtContextMenuTooltipItem$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtContextMenuTooltipItem$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$), 
            $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtContextMenuTooltipItem$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtContextMenuTooltipItem$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtDomXmlParser$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$), 
            $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$ + $DvtDomXmlParser$$), $DvtSvgImplFactory$$.push($DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$), $DvtSvgImplFactory$$.push($DvtSvgGradientUtils$$), this.$_setPolygon$($DvtSvgImplFactory$$)))
          }
        }
      }
    }
  };
  $dvt$$9$$.$Marker$.prototype.$getSkin$ = $JSCompiler_get$$("$_skin$");
  $dvt$$9$$.$Marker$.prototype.$getX$ = $JSCompiler_get$$("$_xx$");
  $dvt$$9$$.$Marker$.prototype.$getY$ = $JSCompiler_get$$("$_yy$");
  $dvt$$9$$.$Marker$.prototype.getWidth = $JSCompiler_get$$("$_ww$");
  $dvt$$9$$.$Marker$.prototype.getHeight = $JSCompiler_get$$("$_hh$");
  $dvt$$9$$.$Marker$.prototype.$getScaledWidth$ = function $$dvt$$9$$$$Marker$$$$getScaledWidth$$() {
    return this.$_sx$ ? this.$_ww$ * this.$_sx$ : this.$_ww$
  };
  $dvt$$9$$.$Marker$.prototype.$getScaledHeight$ = function $$dvt$$9$$$$Marker$$$$getScaledHeight$$() {
    return this.$_sy$ ? this.$_hh$ * this.$_sy$ : this.$_hh$
  };
  $dvt$$9$$.$Marker$.prototype.$getType$ = $JSCompiler_get$$("$_type$");
  $dvt$$9$$.$Marker$.prototype.$getMaintainAspect$ = function $$dvt$$9$$$$Marker$$$$getMaintainAspect$$() {
    return this.$_maintainAspect$ == $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$Marker$.prototype.$GetStrokeWidth$ = function $$dvt$$9$$$$Marker$$$$GetStrokeWidth$$() {
    var $DvtSvgShadowUtils$$ = this.$getStroke$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.getWidth() : 0
  };
  $dvt$$9$$.$Marker$.prototype.$showHoverEffect$ = function $$dvt$$9$$$$Marker$$$$showHoverEffect$$() {
    this.$getType$() === $dvt$$9$$.$Marker$.$IMAGE$ ? (this.$IsShowingHoverEffect$ = $JSCompiler_alias_TRUE$$, this.$isSelected$() ? this.$setSource$(this.$GetMarkerImage$($dvt$$9$$.$Marker$.$IMAGE_SOURCE_HOVER_SELECTED$)) : this.$setSource$(this.$GetMarkerImage$($dvt$$9$$.$Marker$.$IMAGE_SOURCE_HOVER$))) : $dvt$$9$$.$Marker$.$superclass$.$showHoverEffect$.call(this)
  };
  $dvt$$9$$.$Marker$.prototype.$hideHoverEffect$ = function $$dvt$$9$$$$Marker$$$$hideHoverEffect$$() {
    this.$getType$() === $dvt$$9$$.$Marker$.$IMAGE$ ? (this.$IsShowingHoverEffect$ = $JSCompiler_alias_FALSE$$, this.$isSelected$() ? this.$setSource$(this.$GetMarkerImage$($dvt$$9$$.$Marker$.$IMAGE_SOURCE_SELECTED$)) : this.$setSource$(this.$GetMarkerImage$($dvt$$9$$.$Marker$.$IMAGE_SOURCE$))) : $dvt$$9$$.$Marker$.$superclass$.$hideHoverEffect$.call(this)
  };
  $dvt$$9$$.$Marker$.prototype.$setSelected$ = function $$dvt$$9$$$$Marker$$$$setSelected$$($DvtSvgShadowUtils$$) {
    this.$IsSelected$ != $DvtSvgShadowUtils$$ && (this.$getType$() === $dvt$$9$$.$Marker$.$IMAGE$ ? (this.$IsSelected$ = $DvtSvgShadowUtils$$) ? this.$IsShowingHoverEffect$ ? this.$setSource$(this.$GetMarkerImage$($dvt$$9$$.$Marker$.$IMAGE_SOURCE_HOVER_SELECTED$)) : this.$setSource$(this.$GetMarkerImage$($dvt$$9$$.$Marker$.$IMAGE_SOURCE_SELECTED$)) : this.$setSource$(this.$GetMarkerImage$($dvt$$9$$.$Marker$.$IMAGE_SOURCE$)) : $dvt$$9$$.$Marker$.$superclass$.$setSelected$.call(this, $DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$Marker$.prototype.$setDataColor$ = function $$dvt$$9$$$$Marker$$$$setDataColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_dataColor$ = $DvtSvgShadowUtils$$;
    if(!$DvtSvgPatternFillUtils$$) {
      var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$adjustHSL$($DvtSvgShadowUtils$$, 0, 0.15), $DvtSvgGradientUtils$$ = new $dvt$$9$$.$SolidStroke$("#FFFFFF", 1, 1.5);
      this.$setHoverStroke$(new $dvt$$9$$.$SolidStroke$($DvtSvgImageFillUtils$$, 1, 2));
      this.$setSelectedStroke$($DvtSvgGradientUtils$$, new $dvt$$9$$.$SolidStroke$("#5A5A5A", 1, 4.5));
      this.$setSelectedHoverStroke$($DvtSvgGradientUtils$$, new $dvt$$9$$.$SolidStroke$($DvtSvgImageFillUtils$$, 1, 4.5));
      this.$HoverInnerStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$SelectedInnerStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$SelectedOuterStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$SelectedHoverInnerStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$SelectedHoverOuterStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$)
    }
  };
  $dvt$$9$$.$Marker$.prototype.$setHollow$ = function $$dvt$$9$$$$Marker$$$$setHollow$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getScaleX$(), $DvtSvgImageFillUtils$$ = this.$getScaleY$(), $DvtSvgPatternFillUtils$$ = Math.min($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), $DvtSvgImageFillUtils$$ = this.$GetStrokeWidth$();
    $dvt$$9$$.$Marker$.$superclass$.$setHollow$.call(this, $DvtSvgShadowUtils$$, ($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : 1) / $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$setText$ = $JSCompiler_set$$("$_markerText$");
  $dvt$$9$$.$Marker$.prototype.$setAlpha$ = function $$dvt$$9$$$$Marker$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Marker$.$superclass$.$setAlpha$.call(this, $DvtSvgShadowUtils$$);
    this.$_markerText$ && this.$_markerText$.$setAlpha$($DvtSvgShadowUtils$$);
    this.$UpdateSelectionEffect$()
  };
  $dvt$$9$$.$Marker$.prototype.$_setCx$ = function $$dvt$$9$$$$Marker$$$$_setCx$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cx", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setCy$ = function $$dvt$$9$$$$Marker$$$$_setCy$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cy", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setX$ = function $$dvt$$9$$$$Marker$$$$_setX$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "x", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setY$ = function $$dvt$$9$$$$Marker$$$$_setY$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "y", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setWidth$ = function $$dvt$$9$$$$Marker$$$$_setWidth$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "width", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setHeight$ = function $$dvt$$9$$$$Marker$$$$_setHeight$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "height", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setPolygon$ = function $$dvt$$9$$$$Marker$$$$_setPolygon$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "points", $dvt$$9$$.$SvgShapeUtils$.$convertPointsArray$($DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$Marker$.prototype.$_setCmds$ = function $$dvt$$9$$$$Marker$$$$_setCmds$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_cmds$ && (this.$_cmds$ = $DvtSvgShadowUtils$$, $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "d", $DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$Marker$.prototype.$setSource$ = function $$dvt$$9$$$$Marker$$$$setSource$$($DvtSvgShadowUtils$$) {
    if($dvt$$9$$.$Agent$.$isEnvironmentBatik$()) {
      var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$JavaImageLoader$.$getImageInfo$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.uri)
    }
    $dvt$$9$$.$ToolkitUtils$.$setAttrNS$(this.$_elem$, $dvt$$9$$.$Image$.$XLINK_NS$, "xlink:href", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.$convertShapeString$ = function $$dvt$$9$$$$Marker$$$convertShapeString$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$CIRCLE$ || "c" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Marker$.$CIRCLE$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$SQUARE$ || "s" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Marker$.$SQUARE$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$DIAMOND$ || "d" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Marker$.$DIAMOND$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$TRIANGLE_UP$ || "tu" == $DvtSvgShadowUtils$$ || "t" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Marker$.$TRIANGLE_UP$ : 
    $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$TRIANGLE_DOWN$ || "td" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Marker$.$TRIANGLE_DOWN$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$PLUS$ || "p" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Marker$.$PLUS$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$HUMAN$ || "h" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Marker$.$HUMAN$ : $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$ROUNDED_RECTANGLE$ || "rr" == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$Marker$.$ROUNDED_RECTANGLE$ : $dvt$$9$$.$Marker$.NONE
  };
  $dvt$$9$$.$Marker$.prototype.$GetAttributesTransferableToGroup$ = function $$dvt$$9$$$$Marker$$$$GetAttributesTransferableToGroup$$() {
    var $DvtSvgShadowUtils$$ = $dvt$$9$$.$Container$.$AttributesTransferableToGroup$.slice(0);
    if(!this.$getMatrix$()) {
      var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ArrayUtils$.$getIndex$($DvtSvgShadowUtils$$, "transform");
      $DvtSvgShadowUtils$$.splice($DvtSvgPatternFillUtils$$, 1)
    }
    $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ArrayUtils$.$getIndex$($DvtSvgShadowUtils$$, "visibility");
    $DvtSvgShadowUtils$$.splice($DvtSvgPatternFillUtils$$, 1);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Marker$.prototype.$setMouseEnabled$ = function $$dvt$$9$$$$Marker$$$$setMouseEnabled$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Marker$.$superclass$.$setMouseEnabled$.call(this, $DvtSvgShadowUtils$$);
    this.$_childGroupElem$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_childGroupElem$, "pointer-events", $DvtSvgShadowUtils$$ ? "visiblePainted" : "none")
  };
  $dvt$$9$$.$Marker$.prototype.$_setCustomMarker$ = function $$dvt$$9$$$$Marker$$$$_setCustomMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_isMultiPaths$() ? ($DvtSvgShadowUtils$$ = this.$_cloneMultiPaths$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), this.$addChild$($DvtSvgShadowUtils$$)) : this.$_setSingleShape$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setSingleShape$ = function $$dvt$$9$$$$Marker$$$$_setSingleShape$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgShadowUtils$$.$getElem$().nodeName == $dvt$$9$$.$Marker$.$MARKER_PATH_ELEM_NAME$ && this.$_setCmds$($dvt$$9$$.$PathUtils$.$transformPath$($DvtSvgShadowUtils$$.$getCmds$(), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$));
    ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getFill$()) && this.$setFill$($DvtSvgPatternFillUtils$$);
    ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getAlpha$()) && this.$setAlpha$($DvtSvgPatternFillUtils$$);
    if($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getStroke$()) {
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$clone$(), $DvtSvgShadowUtils$$.$setWidth$(Math.min($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) * $DvtSvgShadowUtils$$.getWidth()), this.$setStroke$($DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$Marker$.prototype.$_setRX$ = function $$dvt$$9$$$$Marker$$$$_setRX$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "rx", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setRY$ = function $$dvt$$9$$$$Marker$$$$_setRY$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "ry", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_cloneMultiPaths$ = function $$dvt$$9$$$$Marker$$$$_cloneMultiPaths$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    for(var $DvtSvgFilterContext$$ = this.$getCtx$(), $DvtSvgImplFactory$$ = new $dvt$$9$$.$Container$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$.getId() + "_x"), $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$getNumChildren$(), $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$ = 0;$DvtCustomTooltipItem$$ < $DvtHtmlRichTooltipManager$$;$DvtCustomTooltipItem$$++) {
      $DvtDomXmlParser$$ = $DvtSvgShadowUtils$$.$getChildAt$($DvtCustomTooltipItem$$), $DvtContextMenuTooltipItem$$ = new $dvt$$9$$.$Path$($DvtSvgFilterContext$$, $dvt$$9$$.$PathUtils$.$transformPath$($DvtDomXmlParser$$.$getCmds$(), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $DvtDomXmlParser$$.getId()), $DvtDomXmlParser$$.$getFill$() && $DvtContextMenuTooltipItem$$.$setFill$($DvtDomXmlParser$$.$getFill$()), $DvtDomXmlParser$$.$getAlpha$() && 
      $DvtContextMenuTooltipItem$$.$setAlpha$($DvtDomXmlParser$$.$getAlpha$()), $DvtDomXmlParser$$.$getStroke$() && ($DvtDomXmlParser$$ = $DvtDomXmlParser$$.$getStroke$().$clone$(), $DvtDomXmlParser$$.$setWidth$(Math.min($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) * $DvtDomXmlParser$$.getWidth()), $DvtContextMenuTooltipItem$$.$setStroke$($DvtDomXmlParser$$)), $DvtSvgImplFactory$$.$addChild$($DvtContextMenuTooltipItem$$)
    }
    return $DvtSvgImplFactory$$
  };
  $dvt$$9$$.$Marker$.prototype.$addChild$ = function $$dvt$$9$$$$Marker$$$$addChild$$($DvtSvgShadowUtils$$) {
    this.$_isMultiPaths$() ? $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$getElem$(), $DvtSvgShadowUtils$$.$getOuterElem$()) : $dvt$$9$$.$Marker$.$superclass$.$addChild$.call(this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_isMultiPaths$ = function $$dvt$$9$$$$Marker$$$$_isMultiPaths$$() {
    return"g" == this.$getElem$().nodeName && this.$getType$() != $dvt$$9$$.$Marker$.$IMAGE$
  };
  $dvt$$9$$.$Marker$.prototype.$getDimensions$ = function $$dvt$$9$$$$Marker$$$$getDimensions$$() {
    return this.$_type$ == $dvt$$9$$.$Marker$.$IMAGE$ ? new $dvt$$9$$.$Rectangle$(this.$_x$, this.$_y$, this.$getScaledWidth$(), this.$getScaledHeight$()) : $dvt$$9$$.$Marker$.$superclass$.$getDimensions$.call(this)
  };
  $dvt$$9$$.$Marker$.prototype.$GetElemDimensionsWithStroke$ = function $$dvt$$9$$$$Marker$$$$GetElemDimensionsWithStroke$$() {
    return this.$_type$ == $dvt$$9$$.$Marker$.$IMAGE$ ? this.$getDimensions$() : $dvt$$9$$.$Marker$.$superclass$.$GetElemDimensionsWithStroke$.call(this)
  };
  $dvt$$9$$.$Marker$.prototype.$setVisible$ = function $$dvt$$9$$$$Marker$$$$setVisible$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Marker$.$superclass$.$setVisible$.call(this, $DvtSvgShadowUtils$$);
    this.$_markerText$ && this.$_markerText$.$setVisible$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$_setMarkerImageStates$ = function $$dvt$$9$$$$Marker$$$$_setMarkerImageStates$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[0];
    this.$_imageStates$ = [$DvtSvgPatternFillUtils$$];
    this.$_imageStates$.push($DvtSvgShadowUtils$$[1] ? $DvtSvgShadowUtils$$[1] : $DvtSvgPatternFillUtils$$);
    this.$_imageStates$.push($DvtSvgShadowUtils$$[2] ? $DvtSvgShadowUtils$$[2] : $DvtSvgPatternFillUtils$$);
    this.$_imageStates$.push($DvtSvgShadowUtils$$[3] ? $DvtSvgShadowUtils$$[3] : this.$_imageStates$[1])
  };
  $dvt$$9$$.$Marker$.prototype.$GetMarkerImage$ = function $$dvt$$9$$$$Marker$$$$GetMarkerImage$$($DvtSvgShadowUtils$$) {
    return this.$_imageStates$ ? this.$_imageStates$[$DvtSvgShadowUtils$$] : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Marker$.$isBuiltInShape$ = function $$dvt$$9$$$$Marker$$$isBuiltInShape$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$Marker$.$convertShapeString$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$CIRCLE$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$SQUARE$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$DIAMOND$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$TRIANGLE_UP$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$TRIANGLE_DOWN$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$PLUS$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$HUMAN$ || $DvtSvgShadowUtils$$ == $dvt$$9$$.$Marker$.$ROUNDED_RECTANGLE$ ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Marker$.prototype.$copyShape$ = function $$dvt$$9$$$$Marker$$$$copyShape$$() {
    return new $dvt$$9$$.$Marker$(this.$getCtx$(), this.$_initType$, this.$getSkin$(), this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight(), $JSCompiler_alias_NULL$$, this.$_sx$, this.$_sy$, this.$getMaintainAspect$())
  };
  $dvt$$9$$.$Marker$.prototype.$getDimensions$ = function $$dvt$$9$$$$Marker$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    return this.$InnerShape$ && this.$InnerShape$.getParent() ? this.$InnerShape$.$getDimensions$($DvtSvgShadowUtils$$) : $dvt$$9$$.$Marker$.$superclass$.$getDimensions$.call(this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Marker$.prototype.$getDimensionsSelf$ = function $$dvt$$9$$$$Marker$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Rectangle$(this.$getX$(), this.$getY$(), this.$getScaledWidth$(), this.$getScaledHeight$());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$SimpleMarker$ = function $$dvt$$9$$$$SimpleMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SimpleMarker$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$SimpleMarker$.$CIRCLE$ = "circle";
  $dvt$$9$$.$SimpleMarker$.$ELLIPSE$ = "ellipse";
  $dvt$$9$$.$SimpleMarker$.$SQUARE$ = "square";
  $dvt$$9$$.$SimpleMarker$.$_ROUNDED_SQUARE$ = "roundedSquare";
  $dvt$$9$$.$SimpleMarker$.$RECTANGLE$ = "rectangle";
  $dvt$$9$$.$SimpleMarker$.$_ROUNDED_RECT$ = "roundedRect";
  $dvt$$9$$.$SimpleMarker$.$DIAMOND$ = "diamond";
  $dvt$$9$$.$SimpleMarker$.$TRIANGLE_UP$ = "triangleUp";
  $dvt$$9$$.$SimpleMarker$.$TRIANGLE_DOWN$ = "triangleDown";
  $dvt$$9$$.$SimpleMarker$.$PLUS$ = "plus";
  $dvt$$9$$.$SimpleMarker$.$HUMAN$ = "human";
  $dvt$$9$$.$SimpleMarker$.$STAR$ = "star";
  $dvt$$9$$.$SimpleMarker$.$_CIRCLE_ELEM$ = "circle";
  $dvt$$9$$.$SimpleMarker$.$_ELLIPSE_ELEM$ = "ellipse";
  $dvt$$9$$.$SimpleMarker$.$_RECT_ELEM$ = "rect";
  $dvt$$9$$.$SimpleMarker$.$_PATH_ELEM$ = "path";
  $dvt$$9$$.$SimpleMarker$.$_POLYGON_ELEM$ = "polygon";
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$ = {};
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$CIRCLE$] = $dvt$$9$$.$SimpleMarker$.$_CIRCLE_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$ELLIPSE$] = $dvt$$9$$.$SimpleMarker$.$_ELLIPSE_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$SQUARE$] = $dvt$$9$$.$SimpleMarker$.$_RECT_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$_ROUNDED_SQUARE$] = $dvt$$9$$.$SimpleMarker$.$_PATH_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$RECTANGLE$] = $dvt$$9$$.$SimpleMarker$.$_RECT_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$_ROUNDED_RECT$] = $dvt$$9$$.$SimpleMarker$.$_PATH_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$DIAMOND$] = $dvt$$9$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$TRIANGLE_UP$] = $dvt$$9$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$TRIANGLE_DOWN$] = $dvt$$9$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$PLUS$] = $dvt$$9$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$HUMAN$] = $dvt$$9$$.$SimpleMarker$.$_PATH_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$9$$.$SimpleMarker$.$STAR$] = $dvt$$9$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$9$$.$SimpleMarker$.$DEFAULT_BORDER_RADIUS$ = "6";
  $dvt$$9$$.$SimpleMarker$.prototype.Init = function $$dvt$$9$$$$SimpleMarker$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$) {
    this.$_bMaintainAspectRatio$ = $JSCompiler_alias_TRUE$$;
    $DvtDomXmlParser$$ === $JSCompiler_alias_FALSE$$ && (this.$_bMaintainAspectRatio$ = $JSCompiler_alias_FALSE$$, $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$SimpleMarker$.$CIRCLE$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$SimpleMarker$.$ELLIPSE$));
    $DvtHtmlRichTooltipManager$$ && "0" != $DvtHtmlRichTooltipManager$$ && (this.$_borderRadius$ = $DvtHtmlRichTooltipManager$$, $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$SimpleMarker$.$SQUARE$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$SimpleMarker$.$_ROUNDED_SQUARE$), $DvtSvgPatternFillUtils$$ === $dvt$$9$$.$SimpleMarker$.$RECTANGLE$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$SimpleMarker$.$_ROUNDED_RECT$));
    this.$_skin$ = $DvtSvgImageFillUtils$$;
    this.$_shape$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $dvt$$9$$.$SimpleMarker$.$RECTANGLE$;
    this.$_dataColor$ = "#000000";
    $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$DvtSvgPatternFillUtils$$] : $dvt$$9$$.$SimpleMarker$.$_RECT_ELEM$;
    $DvtSvgImageFillUtils$$ == $JSCompiler_alias_NULL$$ && (this.$_isCustomShape$ = $JSCompiler_alias_TRUE$$, this.$_path$ = new $dvt$$9$$.$Path$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SimpleMarker$.$_PATH_ELEM$);
    $dvt$$9$$.$SimpleMarker$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$);
    if(this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$_ROUNDED_SQUARE$ || this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$_ROUNDED_RECT$) {
      this.$_path$ = this.$_getBorderRadiusPath$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$)
    }
    this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$HUMAN$ && (this.$_path$ = $dvt$$9$$.$MarkerUtils$.$getBuiltinMarkerInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$SimpleMarker$.$HUMAN$, this.$_skin$));
    this.$_propertyChange$ = {};
    this.$setCenter$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $JSCompiler_alias_TRUE$$).$setSize$($DvtSvgFilterContext$$, $DvtSvgImplFactory$$)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$setCenterDimensions$ = function $$dvt$$9$$$$SimpleMarker$$$$setCenterDimensions$$($DvtSvgShadowUtils$$) {
    return this.$setCenter$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $JSCompiler_alias_TRUE$$).$setSize$($DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$getCenterDimensions$ = function $$dvt$$9$$$$SimpleMarker$$$$getCenterDimensions$$() {
    return new $dvt$$9$$.$Rectangle$(this.$_cx$, this.$_cy$, this.$_width$, this.$_height$)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$setSize$ = function $$dvt$$9$$$$SimpleMarker$$$$setSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$setWidth$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$).$setHeight$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$setCenter$ = function $$dvt$$9$$$$SimpleMarker$$$$setCenter$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$setCx$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$).$setCy$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$_updateSvgProperties$ = function $$dvt$$9$$$$SimpleMarker$$$$_updateSvgProperties$$() {
    if(this.$_propertyChange$.width || this.$_propertyChange$.height) {
      var $DvtSvgShadowUtils$$ = Math.min(this.$_width$, this.$_height$);
      this.$_propertyChange$.$s$ = this.$_s$ != $DvtSvgShadowUtils$$;
      this.$_s$ = $DvtSvgShadowUtils$$
    }
    if(this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$SQUARE$) {
      var $DvtSvgShadowUtils$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ : this.$_width$, $DvtSvgPatternFillUtils$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ : this.$_height$;
      (this.$_propertyChange$.$cx$ || this.$_propertyChange$.$s$) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "x", this.$_cx$ - $DvtSvgShadowUtils$$ / 2, 0);
      (this.$_propertyChange$.$cy$ || this.$_propertyChange$.$s$) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "y", this.$_cy$ - $DvtSvgPatternFillUtils$$ / 2, 0);
      if(this.$_bMaintainAspectRatio$ ? this.$_propertyChange$.$s$ : this.$_propertyChange$.width || this.$_propertyChange$.height) {
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "width", $DvtSvgShadowUtils$$, 0), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "height", $DvtSvgPatternFillUtils$$, 0)
      }
    }else {
      this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$RECTANGLE$ ? ((this.$_propertyChange$.$cx$ || this.$_propertyChange$.width) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "x", this.$_cx$ - this.$_width$ / 2, 0), (this.$_propertyChange$.$cy$ || this.$_propertyChange$.height) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "y", this.$_cy$ - this.$_height$ / 2, 0), this.$_propertyChange$.width && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "width", this.$_width$, 0), 
      this.$_propertyChange$.height && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "height", this.$_height$, 0)) : this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$CIRCLE$ || this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$ELLIPSE$ ? (this.$_propertyChange$.$cx$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cx", this.$_cx$, 0), this.$_propertyChange$.$cy$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cy", this.$_cy$, 0), this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$CIRCLE$ ? 
      this.$_propertyChange$.$s$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "r", this.$_s$ / 2, 0) : (this.$_propertyChange$.width && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "rx", this.$_width$ / 2, 0), this.$_propertyChange$.height && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "ry", this.$_height$ / 2, 0))) : this.$_isPolygon$() ? (this.$_propertyChange$.$s$ || this.$_propertyChange$.$cx$ || this.$_propertyChange$.$cy$) && this.$_setPolygon$(this.$_getPolygonArray$()) : 
      this.$_isPath$() && (this.$_propertyChange$.width || this.$_propertyChange$.height || this.$_propertyChange$.$cx$ || this.$_propertyChange$.$cy$) && this.$_setCmds$(this.$_getCmds$())
    }
    this.$UpdateSelectionEffect$();
    this.$_propertyChange$ = {};
    return this
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$getCx$ = $JSCompiler_get$$("$_cx$");
  $dvt$$9$$.$SimpleMarker$.prototype.$setCx$ = function $$dvt$$9$$$$SimpleMarker$$$$setCx$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.$cx$ = this.$_cx$ != $DvtSvgShadowUtils$$;
    this.$_cx$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$()
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$getCy$ = $JSCompiler_get$$("$_cy$");
  $dvt$$9$$.$SimpleMarker$.prototype.$setCy$ = function $$dvt$$9$$$$SimpleMarker$$$$setCy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.$cy$ = this.$_cy$ != $DvtSvgShadowUtils$$;
    this.$_cy$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$()
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$getSize$ = $JSCompiler_get$$("$_s$");
  $dvt$$9$$.$SimpleMarker$.prototype.getWidth = $JSCompiler_get$$("$_width$");
  $dvt$$9$$.$SimpleMarker$.prototype.$setWidth$ = function $$dvt$$9$$$$SimpleMarker$$$$setWidth$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.width = this.$_width$ != $DvtSvgShadowUtils$$;
    this.$_width$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$()
  };
  $dvt$$9$$.$SimpleMarker$.prototype.getHeight = $JSCompiler_get$$("$_height$");
  $dvt$$9$$.$SimpleMarker$.prototype.$setHeight$ = function $$dvt$$9$$$$SimpleMarker$$$$setHeight$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.height = this.$_height$ != $DvtSvgShadowUtils$$;
    this.$_height$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$()
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$_getPolygonArray$ = function $$dvt$$9$$$$SimpleMarker$$$$_getPolygonArray$$() {
    var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$_cx$, $DvtSvgImageFillUtils$$ = this.$_cy$, $DvtSvgGradientUtils$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ / 2 : this.$_width$ / 2, $DvtSvgFilterUtils$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ / 2 : this.$_height$ / 2, $DvtSvgFilterContext$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ / 6 : this.$_width$ / 6, $DvtSvgImplFactory$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ / 6 : this.$_height$ / 6;
    this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$TRIANGLE_UP$ ? $DvtSvgShadowUtils$$ = [$DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$] : this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$TRIANGLE_DOWN$ ? $DvtSvgShadowUtils$$ = [$DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ - 
    $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$] : this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$DIAMOND$ ? $DvtSvgShadowUtils$$ = [$DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, 
    $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$] : this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$PLUS$ ? $DvtSvgShadowUtils$$ = [$DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$, 
    $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ + $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$, 
    $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ + $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgImplFactory$$] : this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$STAR$ && ($DvtSvgShadowUtils$$ = $dvt$$9$$.$MarkerDef$.$SHAPE_STAR_CMDS$, $DvtSvgShadowUtils$$ = $dvt$$9$$.$PolygonUtils$.scale($DvtSvgShadowUtils$$, 
    this.$_bMaintainAspectRatio$ ? this.$_s$ / 100 : this.$_width$ / 100, this.$_bMaintainAspectRatio$ ? this.$_s$ / 100 : this.$_height$ / 100), $DvtSvgShadowUtils$$ = $dvt$$9$$.$PolygonUtils$.translate($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$_setPolygon$ = function $$dvt$$9$$$$SimpleMarker$$$$_setPolygon$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "points", $dvt$$9$$.$SvgShapeUtils$.$convertPointsArray$($DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$_getCmds$ = function $$dvt$$9$$$$SimpleMarker$$$$_getCmds$$() {
    var $DvtSvgShadowUtils$$ = $dvt$$9$$.$DisplayableUtils$.$getDimForced$(this.$getCtx$(), this.$_path$), $DvtSvgPatternFillUtils$$ = Math.max($DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$), $DvtSvgImageFillUtils$$ = this.$_bMaintainAspectRatio$;
    this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$_ROUNDED_RECT$ && ($DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$);
    var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ ? this.$_s$ / $DvtSvgPatternFillUtils$$ : this.$_width$ / $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$ ? this.$_s$ / $DvtSvgPatternFillUtils$$ : this.$_height$ / $DvtSvgShadowUtils$$.$h$;
    return $dvt$$9$$.$PathUtils$.$transformPath$(this.$_path$.$getCmds$(), this.$_cx$ - $DvtSvgShadowUtils$$.x * $DvtSvgGradientUtils$$ - $DvtSvgShadowUtils$$.$w$ * $DvtSvgGradientUtils$$ / 2, this.$_cy$ - $DvtSvgShadowUtils$$.y * $DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$.$h$ * $DvtSvgPatternFillUtils$$ / 2, $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$_setCmds$ = function $$dvt$$9$$$$SimpleMarker$$$$_setCmds$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "d", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$getType$ = $JSCompiler_get$$("$_shape$");
  $dvt$$9$$.$SimpleMarker$.prototype.$_isPolygon$ = function $$dvt$$9$$$$SimpleMarker$$$$_isPolygon$$() {
    return $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[this.$_shape$] == $dvt$$9$$.$SimpleMarker$.$_POLYGON_ELEM$
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$_isPath$ = function $$dvt$$9$$$$SimpleMarker$$$$_isPath$$() {
    return $dvt$$9$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[this.$_shape$] == $dvt$$9$$.$SimpleMarker$.$_PATH_ELEM$ || this.$_isCustomShape$
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$GetStrokeWidth$ = function $$dvt$$9$$$$SimpleMarker$$$$GetStrokeWidth$$() {
    var $DvtSvgShadowUtils$$ = this.$getStroke$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.getWidth() : 0
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$_getBorderRadiusPath$ = function $$dvt$$9$$$$SimpleMarker$$$$_getBorderRadiusPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    if(this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$_ROUNDED_SQUARE$ || this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$_ROUNDED_RECT$) {
      var $DvtSvgImplFactory$$ = Math.min($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
      $DvtSvgGradientUtils$$ = this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$_ROUNDED_SQUARE$ ? $DvtSvgImplFactory$$ : $DvtSvgGradientUtils$$;
      $DvtSvgFilterUtils$$ = this.$_shape$ == $dvt$$9$$.$SimpleMarker$.$_ROUNDED_SQUARE$ ? $DvtSvgImplFactory$$ : $DvtSvgFilterUtils$$;
      $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$PathUtils$.$rectangleWithBorderRadius$($DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$ / 2, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$ / 2, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, "0");
      return new $dvt$$9$$.$Path$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$_getBorderRadius$ = $JSCompiler_get$$("$_borderRadius$");
  $dvt$$9$$.$SimpleMarker$.prototype.$setDataColor$ = function $$dvt$$9$$$$SimpleMarker$$$$setDataColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_dataColor$ = $DvtSvgShadowUtils$$;
    if(!$DvtSvgPatternFillUtils$$) {
      var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SelectionEffectUtils$.$getHoverBorderColor$($DvtSvgShadowUtils$$);
      this.$setHoverStroke$(new $dvt$$9$$.$SolidStroke$("#FFFFFF", 1, 1), new $dvt$$9$$.$SolidStroke$($DvtSvgImageFillUtils$$, 1, 3.5));
      this.$setSelectedStroke$(new $dvt$$9$$.$SolidStroke$("#FFFFFF", 1, 1.5), new $dvt$$9$$.$SolidStroke$("#5A5A5A", 1, 4.5));
      this.$setSelectedHoverStroke$(new $dvt$$9$$.$SolidStroke$("#FFFFFF", 1, 1.5), new $dvt$$9$$.$SolidStroke$($DvtSvgImageFillUtils$$, 1, 4.5));
      this.$HoverInnerStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$HoverOuterStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$SelectedInnerStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$SelectedOuterStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$SelectedHoverInnerStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$);
      this.$SelectedHoverOuterStroke$.$setFixedWidth$($JSCompiler_alias_TRUE$$)
    }
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$setHollow$ = function $$dvt$$9$$$$SimpleMarker$$$$setHollow$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetStrokeWidth$();
    $dvt$$9$$.$SimpleMarker$.$superclass$.$setHollow$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : 1)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$setText$ = $JSCompiler_set$$("$_markerText$");
  $dvt$$9$$.$SimpleMarker$.prototype.$setAlpha$ = function $$dvt$$9$$$$SimpleMarker$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$SimpleMarker$.$superclass$.$setAlpha$.call(this, $DvtSvgShadowUtils$$);
    this.$_markerText$ && this.$_markerText$.$setAlpha$($DvtSvgShadowUtils$$);
    this.$UpdateSelectionEffect$()
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$copyShape$ = function $$dvt$$9$$$$SimpleMarker$$$$copyShape$$() {
    return new $dvt$$9$$.$SimpleMarker$(this.$getCtx$(), this.$_shape$, this.$_skin$, this.$getCx$(), this.$getCy$(), this.getWidth(), this.getHeight(), this.$_getBorderRadius$(), this.$_bMaintainAspectRatio$)
  };
  $dvt$$9$$.$SimpleMarker$.prototype.$getDimensions$ = function $$dvt$$9$$$$SimpleMarker$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getCx$() - this.getWidth() / 2, $DvtSvgImageFillUtils$$ = this.$getCy$() - this.getHeight() / 2, $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Rectangle$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, this.getWidth(), this.getHeight());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$ImageMarker$ = function $$dvt$$9$$$$ImageMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ImageMarker$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$ImageMarker$.prototype.Init = function $$dvt$$9$$$$ImageMarker$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$) {
    $dvt$$9$$.$ImageMarker$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "image", $DvtCustomTooltipItem$$);
    this.$_setMarkerImageStates$($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$);
    this.$_setSource$(this.$_getImage$());
    this.$_propertyChange$ = {};
    this.$setCenter$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$).$setSize$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_updateBorder$($DvtSvgFilterContext$$);
    $dvt$$9$$.$Agent$.$isPlatformIE$() && ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "#FFFFFF"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill-opacity", "0"))
  };
  $dvt$$9$$.$ImageMarker$.prototype.$setPreserveAspectRatio$ = function $$dvt$$9$$$$ImageMarker$$$$setPreserveAspectRatio$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "preserveAspectRatio", $DvtSvgShadowUtils$$, "xMidYMid")
  };
  $dvt$$9$$.$ImageMarker$.prototype.$setCenterDimensions$ = function $$dvt$$9$$$$ImageMarker$$$$setCenterDimensions$$($DvtSvgShadowUtils$$) {
    return this.$setCenter$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $JSCompiler_alias_TRUE$$).$setSize$($DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$)
  };
  $dvt$$9$$.$ImageMarker$.prototype.$getCenterDimensions$ = function $$dvt$$9$$$$ImageMarker$$$$getCenterDimensions$$() {
    return new $dvt$$9$$.$Rectangle$(this.$_cx$, this.$_cy$, this.$_width$, this.$_height$)
  };
  $dvt$$9$$.$ImageMarker$.prototype.$setSize$ = function $$dvt$$9$$$$ImageMarker$$$$setSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$setWidth$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$).$setHeight$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$ImageMarker$.prototype.$getSize$ = function $$dvt$$9$$$$ImageMarker$$$$getSize$$() {
    return Math.max(this.getWidth(), this.getHeight())
  };
  $dvt$$9$$.$ImageMarker$.prototype.$setCenter$ = function $$dvt$$9$$$$ImageMarker$$$$setCenter$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$setCx$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$).$setCy$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_updateSvgProperties$ = function $$dvt$$9$$$$ImageMarker$$$$_updateSvgProperties$$() {
    (this.$_propertyChange$.$cx$ || this.$_propertyChange$.width) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "x", this.$_cx$ - this.$_width$ / 2, 0);
    (this.$_propertyChange$.$cy$ || this.$_propertyChange$.height) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "y", this.$_cy$ - this.$_height$ / 2, 0);
    this.$_propertyChange$.width && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "width", this.$_width$, 0);
    this.$_propertyChange$.height && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "height", this.$_height$, 0);
    this.$_updateBorder$(this.$_borderRadius$);
    this.$UpdateSelectionEffect$();
    this.$_propertyChange$ = {};
    return this
  };
  $dvt$$9$$.$ImageMarker$.prototype.$getCx$ = $JSCompiler_get$$("$_cx$");
  $dvt$$9$$.$ImageMarker$.prototype.$setCx$ = function $$dvt$$9$$$$ImageMarker$$$$setCx$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.$cx$ = this.$_cx$ != $DvtSvgShadowUtils$$;
    this.$_cx$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$()
  };
  $dvt$$9$$.$ImageMarker$.prototype.$getCy$ = $JSCompiler_get$$("$_cy$");
  $dvt$$9$$.$ImageMarker$.prototype.$setCy$ = function $$dvt$$9$$$$ImageMarker$$$$setCy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.$cy$ = this.$_cy$ != $DvtSvgShadowUtils$$;
    this.$_cy$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$()
  };
  $dvt$$9$$.$ImageMarker$.prototype.getWidth = $JSCompiler_get$$("$_width$");
  $dvt$$9$$.$ImageMarker$.prototype.$setWidth$ = function $$dvt$$9$$$$ImageMarker$$$$setWidth$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.width = this.$_width$ != $DvtSvgShadowUtils$$;
    this.$_width$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$()
  };
  $dvt$$9$$.$ImageMarker$.prototype.getHeight = $JSCompiler_get$$("$_height$");
  $dvt$$9$$.$ImageMarker$.prototype.$setHeight$ = function $$dvt$$9$$$$ImageMarker$$$$setHeight$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.height = this.$_height$ != $DvtSvgShadowUtils$$;
    this.$_height$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$()
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_setSource$ = function $$dvt$$9$$$$ImageMarker$$$$_setSource$$($DvtSvgShadowUtils$$) {
    if($dvt$$9$$.$Agent$.$isEnvironmentBatik$()) {
      var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$JavaImageLoader$.$getImageInfo$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.uri)
    }
    $dvt$$9$$.$ToolkitUtils$.$setAttrNS$(this.$_elem$, $dvt$$9$$.$Image$.$XLINK_NS$, "xlink:href", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_setMarkerImageStates$ = function $$dvt$$9$$$$ImageMarker$$$$_setMarkerImageStates$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_imageStates$ = [$DvtSvgShadowUtils$$];
    this.$_imageStates$.push($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgShadowUtils$$);
    this.$_imageStates$.push($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : $DvtSvgShadowUtils$$);
    this.$_imageStates$.push($DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : this.$_imageStates$[1])
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_getImage$ = function $$dvt$$9$$$$ImageMarker$$$$_getImage$$() {
    return this.$_imageStates$[0]
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_getImageSelected$ = function $$dvt$$9$$$$ImageMarker$$$$_getImageSelected$$() {
    return this.$_imageStates$[1]
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_getImageHover$ = function $$dvt$$9$$$$ImageMarker$$$$_getImageHover$$() {
    return this.$_imageStates$[2]
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_getImageHoverSelected$ = function $$dvt$$9$$$$ImageMarker$$$$_getImageHoverSelected$$() {
    return this.$_imageStates$[3]
  };
  $dvt$$9$$.$ImageMarker$.prototype.$showHoverEffect$ = function $$dvt$$9$$$$ImageMarker$$$$showHoverEffect$$() {
    this.$IsShowingHoverEffect$ = $JSCompiler_alias_TRUE$$;
    this.$isSelected$() ? this.$_setSource$(this.$_getImageHoverSelected$()) : this.$_setSource$(this.$_getImageHover$())
  };
  $dvt$$9$$.$ImageMarker$.prototype.$hideHoverEffect$ = function $$dvt$$9$$$$ImageMarker$$$$hideHoverEffect$$() {
    this.$IsShowingHoverEffect$ = $JSCompiler_alias_FALSE$$;
    this.$isSelected$() ? this.$_setSource$(this.$_getImageSelected$()) : this.$_setSource$(this.$_getImage$())
  };
  $dvt$$9$$.$ImageMarker$.prototype.$setSelected$ = function $$dvt$$9$$$$ImageMarker$$$$setSelected$$($DvtSvgShadowUtils$$) {
    this.$IsSelected$ != $DvtSvgShadowUtils$$ && ((this.$IsSelected$ = $DvtSvgShadowUtils$$) ? this.$IsShowingHoverEffect$ ? this.$_setSource$(this.$_getImageHoverSelected$()) : this.$_setSource$(this.$_getImageSelected$()) : this.$_setSource$(this.$_getImage$()))
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_updateBorder$ = function $$dvt$$9$$$$ImageMarker$$$$_updateBorder$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ || this.$_borderPath$) {
      if($DvtSvgShadowUtils$$ && "0" != $DvtSvgShadowUtils$$) {
        var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$PathUtils$.$rectangleWithBorderRadius$(this.$_cx$ - this.$_width$ / 2, this.$_cy$ - this.$_height$ / 2, this.$_width$, this.$_height$, $DvtSvgShadowUtils$$, Math.min(this.$_width$, this.$_height$), "0"), $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$ClipPath$;
        $DvtSvgImageFillUtils$$.$addPath$($DvtSvgPatternFillUtils$$);
        this.$setClipPath$($DvtSvgImageFillUtils$$)
      }
      this.$_borderPath$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$PathUtils$.$rectangleWithBorderRadius$(this.$_cx$ - this.$_width$ / 2 + this.$_borderWidth$ / 2, this.$_cy$ - this.$_height$ / 2 + this.$_borderWidth$ / 2, this.$_width$ - this.$_borderWidth$, this.$_height$ - this.$_borderWidth$, $DvtSvgShadowUtils$$, Math.min(this.$_width$, this.$_height$), "0"), this.$_borderPath$.$setCmds$($DvtSvgPatternFillUtils$$))
    }
    this.$_borderRadius$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$ImageMarker$.prototype.$_getBorderRadius$ = $JSCompiler_get$$("$_borderRadius$");
  $dvt$$9$$.$ImageMarker$.prototype.$setStroke$ = function $$dvt$$9$$$$ImageMarker$$$$setStroke$$($DvtSvgShadowUtils$$) {
    if(!$DvtSvgShadowUtils$$ || 0 >= $DvtSvgShadowUtils$$.getWidth()) {
      this.$_borderWidth$ = 0, this.$_borderPath$ && (this.removeChild(this.$_borderPath$), this.$_borderPath$ = $JSCompiler_alias_NULL$$)
    }else {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getWidth();
      if(!this.$_borderPath$ || $DvtSvgPatternFillUtils$$ != this.$_borderWidth$) {
        var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$PathUtils$.$rectangleWithBorderRadius$(this.$_cx$ - this.$_width$ / 2 + $DvtSvgPatternFillUtils$$ / 2, this.$_cy$ - this.$_height$ / 2 + $DvtSvgPatternFillUtils$$ / 2, this.$_width$ - $DvtSvgPatternFillUtils$$, this.$_height$ - $DvtSvgPatternFillUtils$$, this.$_borderRadius$, Math.min(this.$_width$, this.$_height$), "0");
        this.$_borderPath$ ? this.$_borderPath$.$setCmds$($DvtSvgImageFillUtils$$) : (this.$_borderPath$ = new $dvt$$9$$.$Path$(this.$getCtx$(), $DvtSvgImageFillUtils$$), this.$_borderPath$.$setInvisibleFill$(), this.$addChild$(this.$_borderPath$))
      }
      this.$_borderWidth$ = $DvtSvgPatternFillUtils$$;
      this.$_borderPath$.$setStroke$($DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$ImageMarker$.prototype.$copyShape$ = function $$dvt$$9$$$$ImageMarker$$$$copyShape$$() {
    return new $dvt$$9$$.$ImageMarker$(this.$getCtx$(), this.$getCx$(), this.$getCy$(), this.getWidth(), this.getHeight(), this.$_getBorderRadius$(), this.$_getImage$(), this.$_getImageSelected$(), this.$_getImageHover$(), this.$_getImageHoverSelected$(), $JSCompiler_alias_NULL$$)
  };
  $dvt$$9$$.$Oval$ = function $$dvt$$9$$$$Oval$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Oval$, $DvtCircularShape$$);
  $dvt$$9$$.$Oval$.prototype.Init = function $$dvt$$9$$$$Oval$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$9$$.$Oval$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "ellipse", $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$);
    this.$setRx$($DvtSvgGradientUtils$$).$setRy$($DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Oval$.prototype.$getRx$ = function $$dvt$$9$$$$Oval$$$$getRx$$() {
    return this.$GetProperty$("rx")
  };
  $dvt$$9$$.$Oval$.prototype.$setRx$ = function $$dvt$$9$$$$Oval$$$$setRx$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("rx", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Oval$.prototype.$getRy$ = function $$dvt$$9$$$$Oval$$$$getRy$$() {
    return this.$GetProperty$("ry")
  };
  $dvt$$9$$.$Oval$.prototype.$setRy$ = function $$dvt$$9$$$$Oval$$$$setRy$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("ry", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Oval$.prototype.$copyShape$ = function $$dvt$$9$$$$Oval$$$$copyShape$$() {
    return new $dvt$$9$$.$Oval$(this.$getCtx$(), this.$getCx$(), this.$getCy$(), this.$getRx$(), this.$getRy$())
  };
  $dvt$$9$$.$Oval$.prototype.$getDimensionsSelf$ = function $$dvt$$9$$$$Oval$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    return this.$ConvertCoordSpaceRect$(new $dvt$$9$$.$Rectangle$(this.$getCx$() - this.$getRx$(), this.$getCy$() - this.$getRy$(), 2 * this.$getRx$(), 2 * this.$getRy$()), $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Path$ = function $$dvt$$9$$$$Path$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Path$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$Path$.prototype.Init = function $$dvt$$9$$$$Path$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$Path$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "path", $DvtSvgImageFillUtils$$);
    $dvt$$9$$.$ArrayUtils$.isArray($DvtSvgPatternFillUtils$$) ? this.$setCmds$($dvt$$9$$.$PathUtils$.$getPathString$($DvtSvgPatternFillUtils$$)) : this.$setCmds$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Path$.prototype.$getCmds$ = function $$dvt$$9$$$$Path$$$$getCmds$$() {
    return this.$GetProperty$("d")
  };
  $dvt$$9$$.$Path$.prototype.$setCmds$ = function $$dvt$$9$$$$Path$$$$setCmds$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && this.$SetSvgProperty$("d", $DvtSvgShadowUtils$$);
    this.$SetProperty$("arCmds", $JSCompiler_alias_NULL$$);
    return this
  };
  $dvt$$9$$.$Path$.prototype.$getCommands$ = function $$dvt$$9$$$$Path$$$$getCommands$$() {
    var $DvtSvgShadowUtils$$ = this.$GetProperty$("arCmds");
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$GetProperty$("d") ? $dvt$$9$$.$PathUtils$.$createPathArray$(this.$GetProperty$("d")) : $JSCompiler_alias_NULL$$, this.$SetProperty$("arCmds", $DvtSvgShadowUtils$$));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Path$.prototype.$setCommands$ = function $$dvt$$9$$$$Path$$$$setCommands$$($DvtSvgShadowUtils$$) {
    this.$setCmds$($DvtSvgShadowUtils$$ ? $dvt$$9$$.$PathUtils$.$getPathString$($DvtSvgShadowUtils$$) : $JSCompiler_alias_NULL$$);
    this.$SetProperty$("arCmds", $DvtSvgShadowUtils$$);
    return this
  };
  $dvt$$9$$.$Path$.prototype.$copyShape$ = function $$dvt$$9$$$$Path$$$$copyShape$$() {
    return new $dvt$$9$$.$Path$(this.$getCtx$(), this.$getCmds$())
  };
  $dvt$$9$$.$Path$.prototype.$GetAriaElem$ = function $$dvt$$9$$$$Path$$$$GetAriaElem$$() {
    $dvt$$9$$.$Agent$.$isTouchDevice$() && this.$CreateChildGroupElem$($JSCompiler_alias_FALSE$$, $JSCompiler_alias_TRUE$$);
    return $dvt$$9$$.$Path$.$superclass$.$GetAriaElem$.call(this)
  };
  $dvt$$9$$.$Polygon$ = function $$dvt$$9$$$$Polygon$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Polygon$, $DvtPolygonalShape$$);
  $dvt$$9$$.$Polygon$.prototype.Init = function $$dvt$$9$$$$Polygon$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$Polygon$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "polygon", $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Polygon$.prototype.$copyShape$ = function $$dvt$$9$$$$Polygon$$$$copyShape$$() {
    return new $dvt$$9$$.$Polygon$(this.$getCtx$(), this.$getPoints$())
  };
  $dvt$$9$$.$Polygon$.prototype.$GetAriaElem$ = function $$dvt$$9$$$$Polygon$$$$GetAriaElem$$() {
    $dvt$$9$$.$Agent$.$isTouchDevice$() && this.$CreateChildGroupElem$($JSCompiler_alias_FALSE$$, $JSCompiler_alias_TRUE$$);
    return $dvt$$9$$.$Polygon$.$superclass$.$GetAriaElem$.call(this)
  };
  $dvt$$9$$.$Polyline$ = function $$dvt$$9$$$$Polyline$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Polyline$, $DvtPolygonalShape$$);
  $dvt$$9$$.$Polyline$.prototype.Init = function $$dvt$$9$$$$Polyline$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$Polyline$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "polyline", $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "none")
  };
  $dvt$$9$$.$Polyline$.prototype.$copyShape$ = function $$dvt$$9$$$$Polyline$$$$copyShape$$() {
    return new $dvt$$9$$.$Polyline$(this.$getCtx$(), this.$getPoints$())
  };
  $dvt$$9$$.$Rect$ = function $$dvt$$9$$$$Rect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Rect$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$Rect$.$_cssAttrs$ = ["background-color", "border-color", "border-width"];
  $dvt$$9$$.$Rect$.prototype.Init = function $$dvt$$9$$$$Rect$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$9$$.$Rect$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "rect", $DvtSvgFilterContext$$);
    this.$setX$($DvtSvgPatternFillUtils$$).$setY$($DvtSvgImageFillUtils$$).$setWidth$($DvtSvgGradientUtils$$).$setHeight$($DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Rect$.prototype.$getX$ = function $$dvt$$9$$$$Rect$$$$getX$$() {
    return this.$GetProperty$("x")
  };
  $dvt$$9$$.$Rect$.prototype.$setX$ = function $$dvt$$9$$$$Rect$$$$setX$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$Rect$.prototype.$getY$ = function $$dvt$$9$$$$Rect$$$$getY$$() {
    return this.$GetProperty$("y")
  };
  $dvt$$9$$.$Rect$.prototype.$setY$ = function $$dvt$$9$$$$Rect$$$$setY$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$Rect$.prototype.getWidth = function $$dvt$$9$$$$Rect$$$getWidth$() {
    return this.$GetProperty$("width")
  };
  $dvt$$9$$.$Rect$.prototype.$setWidth$ = function $$dvt$$9$$$$Rect$$$$setWidth$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("width", $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgShadowUtils$$ : 0)
  };
  $dvt$$9$$.$Rect$.prototype.getHeight = function $$dvt$$9$$$$Rect$$$getHeight$() {
    return this.$GetProperty$("height")
  };
  $dvt$$9$$.$Rect$.prototype.$setHeight$ = function $$dvt$$9$$$$Rect$$$$setHeight$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("height", $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgShadowUtils$$ : 0)
  };
  $dvt$$9$$.$Rect$.prototype.$getRx$ = function $$dvt$$9$$$$Rect$$$$getRx$$() {
    return this.$GetProperty$("rx")
  };
  $dvt$$9$$.$Rect$.prototype.$setRx$ = function $$dvt$$9$$$$Rect$$$$setRx$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("rx", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Rect$.prototype.$getRy$ = function $$dvt$$9$$$$Rect$$$$getRy$$() {
    return this.$GetProperty$("ry")
  };
  $dvt$$9$$.$Rect$.prototype.$setRy$ = function $$dvt$$9$$$$Rect$$$$setRy$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("ry", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Rect$.prototype.$setCSSStyle$ = function $$dvt$$9$$$$Rect$$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Rect$.$superclass$.$setCSSStyle$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$_elem$;
    if($DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("background-color");
      $DvtSvgImageFillUtils$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("border-color")) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("border-width")) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke-width", $DvtSvgImageFillUtils$$);
      if($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("border-radius")) {
        $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgImageFillUtils$$).split(" "), 0 < $DvtSvgShadowUtils$$.length && $DvtSvgShadowUtils$$[0] && this.$setRx$($DvtSvgShadowUtils$$[0]), 1 < $DvtSvgShadowUtils$$.length && $DvtSvgShadowUtils$$[1] && this.$setRy$($DvtSvgShadowUtils$$[1])
      }
    }else {
      $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "style")
    }
  };
  $dvt$$9$$.$Rect$.prototype.$setPos$ = function $$dvt$$9$$$$Rect$$$$setPos$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$setX$($DvtSvgShadowUtils$$).$setY$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Rect$.prototype.$setCornerRadius$ = function $$dvt$$9$$$$Rect$$$$setCornerRadius$$($DvtSvgShadowUtils$$) {
    this.$setRx$($DvtSvgShadowUtils$$).$setRy$($JSCompiler_alias_VOID$$)
  };
  $dvt$$9$$.$Rect$.prototype.$setRect$ = function $$dvt$$9$$$$Rect$$$$setRect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$Rectangle$ ? this.$setX$($DvtSvgShadowUtils$$.x).$setY$($DvtSvgShadowUtils$$.y).$setWidth$($DvtSvgShadowUtils$$.$w$).$setHeight$($DvtSvgShadowUtils$$.$h$) : this.$setX$($DvtSvgShadowUtils$$).$setY$($DvtSvgPatternFillUtils$$).$setWidth$($DvtSvgImageFillUtils$$).$setHeight$($DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Rect$.prototype.$copyShape$ = function $$dvt$$9$$$$Rect$$$$copyShape$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Rect$(this.$getCtx$(), this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight());
    $DvtSvgShadowUtils$$.$setRx$(this.$getRx$()).$setRy$(this.$getRy$());
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Rect$.prototype.$getDimensionsSelf$ = function $$dvt$$9$$$$Rect$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Rectangle$(this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$OutputText$ = function $$dvt$$9$$$$OutputText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$OutputText$, $dvt$$9$$.$Shape$);
  $dvt$$9$$.$OutputText$.$ELLIPSIS$ = "\u2026";
  $dvt$$9$$.$OutputText$.$REPRESENTATIVE_TEXT$ = "MW";
  $dvt$$9$$.$OutputText$.$BIDI_ZERO_WIDTH$ = "\u200b";
  $dvt$$9$$.$OutputText$.$H_ALIGN_LEFT$ = "left";
  $dvt$$9$$.$OutputText$.$H_ALIGN_CENTER$ = "center";
  $dvt$$9$$.$OutputText$.$H_ALIGN_RIGHT$ = "right";
  $dvt$$9$$.$OutputText$.$V_ALIGN_TOP$ = "top";
  $dvt$$9$$.$OutputText$.$V_ALIGN_MIDDLE$ = "middle";
  $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ = "bottom";
  $dvt$$9$$.$OutputText$.$V_ALIGN_AUTO$ = "auto";
  $dvt$$9$$.$OutputText$.prototype.Init = function $$dvt$$9$$$$OutputText$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$9$$.$OutputText$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "text", $DvtSvgFilterUtils$$);
    this.$_x$ = $DvtSvgImageFillUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgImageFillUtils$$ : 0;
    this.$_baseline$ = $JSCompiler_alias_NULL$$;
    this.$alignLeft$();
    this.$alignTop$();
    this.$setTextString$($DvtSvgPatternFillUtils$$);
    this.$setX$($DvtSvgImageFillUtils$$);
    this.$setY$($DvtSvgGradientUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getElem$(), "fill");
    $dvt$$9$$.$Agent$.$isRightToLeft$($DvtSvgShadowUtils$$) && $dvt$$9$$.$Agent$.$isPlatformIE$() && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "unicode-bidi", "embed");
    this.$setAriaProperty$("hidden", "true")
  };
  $dvt$$9$$.$OutputText$.prototype.$getTextString$ = $JSCompiler_get$$("$_textString$");
  $dvt$$9$$.$OutputText$.prototype.$setTextString$ = function $$dvt$$9$$$$OutputText$$$$setTextString$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ ? $dvt$$9$$.$StringUtils$.trim(String($DvtSvgShadowUtils$$)) : "";
    $dvt$$9$$.$OutputText$.$needsTextAnchorAdjustment$() && ($dvt$$9$$.$Agent$.$isPlatformIE$() && $DvtSvgShadowUtils$$.charAt(0) != $dvt$$9$$.$OutputText$.$BIDI_ZERO_WIDTH$) && ($DvtSvgShadowUtils$$ = $dvt$$9$$.$OutputText$.$BIDI_ZERO_WIDTH$ + $DvtSvgShadowUtils$$);
    this.$_textString$ = $DvtSvgShadowUtils$$;
    var $DvtSvgPatternFillUtils$$ = this.$getElem$().firstChild;
    $DvtSvgPatternFillUtils$$ !== $JSCompiler_alias_NULL$$ ? $DvtSvgPatternFillUtils$$.nodeValue = $DvtSvgShadowUtils$$ : ($DvtSvgPatternFillUtils$$ = document.createTextNode($DvtSvgShadowUtils$$), $dvt$$9$$.$ToolkitUtils$.$appendChildElem$(this.$getElem$(), $DvtSvgPatternFillUtils$$));
    $dvt$$9$$.$Agent$.$isPlatformIE$() && this.$setX$(this.$_x$);
    return this
  };
  $dvt$$9$$.$OutputText$.prototype.$isTruncated$ = function $$dvt$$9$$$$OutputText$$$$isTruncated$$() {
    return this.$getUntruncatedTextString$() != $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$OutputText$.prototype.$getUntruncatedTextString$ = $JSCompiler_get$$("$_untruncatedTextString$");
  $dvt$$9$$.$OutputText$.prototype.$setUntruncatedTextString$ = function $$dvt$$9$$$$OutputText$$$$setUntruncatedTextString$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ != this.$getTextString$() && (this.$_untruncatedTextString$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$OutputText$.prototype.$getX$ = function $$dvt$$9$$$$OutputText$$$$getX$$() {
    var $DvtSvgShadowUtils$$;
    return($DvtSvgShadowUtils$$ = $dvt$$9$$.$Agent$.$isPlatformIE$() ? this.$_x$ : this.$GetProperty$("x")) ? $DvtSvgShadowUtils$$ : 0
  };
  $dvt$$9$$.$OutputText$.prototype.$setX$ = function $$dvt$$9$$$$OutputText$$$$setX$$($DvtSvgShadowUtils$$) {
    this.$_x$ = $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgShadowUtils$$ : 0;
    return $dvt$$9$$.$Agent$.$isPlatformIE$() ? this.$SetSvgProperty$("x", this.$_x$ + this.$_getIEAlignmentOffset$(), 0) : this.$SetSvgProperty$("x", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$OutputText$.prototype.$_getIEAlignmentOffset$ = function $$dvt$$9$$$$OutputText$$$$_getIEAlignmentOffset$$() {
    var $DvtSvgShadowUtils$$ = this.$getHorizAlignment$(), $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Agent$.$isRightToLeft$();
    if($DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_LEFT$) {
      return $DvtSvgPatternFillUtils$$ ? this.$measureDimensions$().$w$ : 0
    }
    if($DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_CENTER$) {
      return $DvtSvgPatternFillUtils$$ ? this.$measureDimensions$().$w$ / 2 : -this.$measureDimensions$().$w$ / 2
    }
    if($DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_RIGHT$) {
      return $DvtSvgPatternFillUtils$$ ? 0 : -this.$measureDimensions$().$w$
    }
  };
  $dvt$$9$$.$OutputText$.prototype.$getY$ = function $$dvt$$9$$$$OutputText$$$$getY$$() {
    var $DvtSvgShadowUtils$$ = this.$GetProperty$("y");
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0
  };
  $dvt$$9$$.$OutputText$.prototype.$setY$ = function $$dvt$$9$$$$OutputText$$$$setY$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y", $DvtSvgShadowUtils$$, 0)
  };
  $dvt$$9$$.$OutputText$.prototype.$setFontSize$ = function $$dvt$$9$$$$OutputText$$$$setFontSize$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getCSSStyle$(), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$.$clone$() : new $dvt$$9$$.$CSSStyle$;
    $DvtSvgPatternFillUtils$$.$setFontSize$($dvt$$9$$.$CSSStyle$.$FONT_SIZE$, String($DvtSvgShadowUtils$$));
    this.$setCSSStyle$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$OutputText$.prototype.$getHorizAlignment$ = $JSCompiler_get$$("$_horizAlign$");
  $dvt$$9$$.$OutputText$.prototype.$setHorizAlignment$ = function $$dvt$$9$$$$OutputText$$$$setHorizAlignment$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_LEFT$ ? this.$alignLeft$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_CENTER$ ? this.$alignCenter$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_RIGHT$ && this.$alignRight$()
  };
  $dvt$$9$$.$OutputText$.prototype.$getVertAlignment$ = $JSCompiler_get$$("$_vertAlign$");
  $dvt$$9$$.$OutputText$.prototype.$setVertAlignment$ = function $$dvt$$9$$$$OutputText$$$$setVertAlignment$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_TOP$ ? this.$alignTop$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_MIDDLE$ ? this.$alignMiddle$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ ? this.$alignBottom$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_AUTO$ && this.$alignAuto$()
  };
  $dvt$$9$$.$OutputText$.prototype.$alignLeft$ = function $$dvt$$9$$$$OutputText$$$$alignLeft$$() {
    if(this.$_horizAlign$ != $dvt$$9$$.$OutputText$.$H_ALIGN_LEFT$) {
      if(this.$_horizAlign$ = $dvt$$9$$.$OutputText$.$H_ALIGN_LEFT$, $dvt$$9$$.$Agent$.$isPlatformIE$()) {
        this.$setX$(this.$_x$)
      }else {
        var $DvtSvgShadowUtils$$ = $dvt$$9$$.$OutputText$.$needsTextAnchorAdjustment$();
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "text-anchor", $DvtSvgShadowUtils$$ ? "end" : "start", "start")
      }
    }
  };
  $dvt$$9$$.$OutputText$.prototype.$alignCenter$ = function $$dvt$$9$$$$OutputText$$$$alignCenter$$() {
    this.$_horizAlign$ != $dvt$$9$$.$OutputText$.$H_ALIGN_CENTER$ && (this.$_horizAlign$ = $dvt$$9$$.$OutputText$.$H_ALIGN_CENTER$, $dvt$$9$$.$Agent$.$isPlatformIE$() ? this.$setX$(this.$_x$) : $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "text-anchor", "middle", "start"))
  };
  $dvt$$9$$.$OutputText$.prototype.$alignRight$ = function $$dvt$$9$$$$OutputText$$$$alignRight$$() {
    if(this.$_horizAlign$ != $dvt$$9$$.$OutputText$.$H_ALIGN_RIGHT$) {
      if(this.$_horizAlign$ = $dvt$$9$$.$OutputText$.$H_ALIGN_RIGHT$, $dvt$$9$$.$Agent$.$isPlatformIE$()) {
        this.$setX$(this.$_x$)
      }else {
        var $DvtSvgShadowUtils$$ = $dvt$$9$$.$OutputText$.$needsTextAnchorAdjustment$();
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "text-anchor", $DvtSvgShadowUtils$$ ? "start" : "end", "start")
      }
    }
  };
  $dvt$$9$$.$OutputText$.prototype.$alignTop$ = function $$dvt$$9$$$$OutputText$$$$alignTop$$() {
    this.$_vertAlign$ != $dvt$$9$$.$OutputText$.$V_ALIGN_TOP$ && (this.$_vertAlign$ == $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ && $dvt$$9$$.$Agent$.$isBrowserSafari$() && this.$SetBaseline$(0), this.$_vertAlign$ = $dvt$$9$$.$OutputText$.$V_ALIGN_TOP$, $dvt$$9$$.$Agent$.$isPlatformIE$() ? this.$SetBaseline$(1) : this.$SetDominantBaselineAttr$("text-before-edge"))
  };
  $dvt$$9$$.$OutputText$.prototype.$alignMiddle$ = function $$dvt$$9$$$$OutputText$$$$alignMiddle$$() {
    this.$_vertAlign$ != $dvt$$9$$.$OutputText$.$V_ALIGN_MIDDLE$ && (this.$_vertAlign$ == $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ && $dvt$$9$$.$Agent$.$isBrowserSafari$() && this.$SetBaseline$(0), this.$_vertAlign$ = $dvt$$9$$.$OutputText$.$V_ALIGN_MIDDLE$, $dvt$$9$$.$Agent$.$isPlatformIE$() ? this.$SetBaseline$(0.4) : this.$SetDominantBaselineAttr$("middle"))
  };
  $dvt$$9$$.$OutputText$.prototype.$alignBottom$ = function $$dvt$$9$$$$OutputText$$$$alignBottom$$() {
    this.$_vertAlign$ != $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ && (this.$_vertAlign$ = $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$, $dvt$$9$$.$Agent$.$isPlatformIE$() ? this.$SetBaseline$(-0.2) : $dvt$$9$$.$Agent$.$isBrowserSafari$() ? (this.$SetBaseline$(-0.2), this.$SetDominantBaselineAttr$($JSCompiler_alias_NULL$$)) : this.$SetDominantBaselineAttr$("text-after-edge"))
  };
  $dvt$$9$$.$OutputText$.prototype.$alignAuto$ = function $$dvt$$9$$$$OutputText$$$$alignAuto$$() {
    this.$_vertAlign$ != $dvt$$9$$.$OutputText$.$V_ALIGN_AUTO$ && (this.$_vertAlign$ == $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ && $dvt$$9$$.$Agent$.$isBrowserSafari$() && this.$SetBaseline$(0), this.$_vertAlign$ = $dvt$$9$$.$OutputText$.$V_ALIGN_AUTO$, $dvt$$9$$.$Agent$.$isPlatformIE$() ? this.$SetBaseline$(0) : this.$SetDominantBaselineAttr$($JSCompiler_alias_NULL$$))
  };
  $dvt$$9$$.$OutputText$.prototype.$SetBaseline$ = function $$dvt$$9$$$$OutputText$$$$SetBaseline$$($DvtSvgShadowUtils$$) {
    this.$_baseline$ = $DvtSvgShadowUtils$$;
    this.$setMatrix$(this.$getMatrix$())
  };
  $dvt$$9$$.$OutputText$.prototype.$SetDominantBaselineAttr$ = function $$dvt$$9$$$$OutputText$$$$SetDominantBaselineAttr$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "dominant-baseline", $DvtSvgShadowUtils$$) : $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getElem$(), "dominant-baseline")
  };
  $dvt$$9$$.$OutputText$.prototype.$setCSSStyle$ = function $$dvt$$9$$$$OutputText$$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$OutputText$.$superclass$.$setCSSStyle$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$getOuterElem$();
    if($DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("color");
      if(($DvtSvgImageFillUtils$$ = $dvt$$9$$.$ColorUtils$.$fixColorForPlatform$($DvtSvgImageFillUtils$$)) && $DvtSvgImageFillUtils$$.color) {
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill", $DvtSvgImageFillUtils$$.color), $DvtSvgImageFillUtils$$.alpha != $JSCompiler_alias_NULL$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill-opacity", $DvtSvgImageFillUtils$$.alpha, 1)
      }
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("font-family")) && !this.$getCtx$().$isDefaultFontFamily$($DvtSvgImageFillUtils$$) ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "font-family", $DvtSvgImageFillUtils$$) : $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgPatternFillUtils$$, "font-family");
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("font-size")) && $DvtSvgImageFillUtils$$ != this.$getCtx$().$getDefaultFontSize$() ? ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "font-size", $DvtSvgImageFillUtils$$), ($dvt$$9$$.$Agent$.$isPlatformIE$() || $dvt$$9$$.$Agent$.$isBrowserSafari$()) && this.$setMatrix$(this.$getMatrix$())) : $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgPatternFillUtils$$, "font-size");
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("font-style")) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "font-style", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("font-weight")) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "font-weight", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("text-decoration")) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "text-decoration", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("cursor")) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "cursor", $DvtSvgImageFillUtils$$);
      $dvt$$9$$.$Agent$.$isPlatformIE$() && this.$setX$(this.$_x$)
    }
  };
  $dvt$$9$$.$OutputText$.prototype.$_getBaselineTranslation$ = function $$dvt$$9$$$$OutputText$$$$_getBaselineTranslation$$() {
    var $DvtSvgShadowUtils$$ = 0;
    if(this.$_baseline$ != $JSCompiler_alias_NULL$$) {
      if(this.$_textString$ && !this.$_isRepresentativeText$()) {
        $DvtSvgShadowUtils$$ = $dvt$$9$$.$TextUtils$.$getTextStringHeight$(this.$getCtx$(), this.$getCSSStyle$())
      }else {
        if(($DvtSvgShadowUtils$$ = $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$(this.$getElem$(), "font-size")) || ($DvtSvgShadowUtils$$ = $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$(this.$getOuterElem$(), "font-size")), !$DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) && -1 == $DvtSvgShadowUtils$$.indexOf("px")) {
          $DvtSvgShadowUtils$$ = $dvt$$9$$.$StyleUtils$.$DEFAULT_FONT_SIZE$
        }
      }
      $DvtSvgShadowUtils$$ = this.$_baseline$ * parseFloat($DvtSvgShadowUtils$$)
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$OutputText$.prototype.$_getBaselineAdjustedMatrix$ = function $$dvt$$9$$$$OutputText$$$$_getBaselineAdjustedMatrix$$($DvtSvgShadowUtils$$) {
    if(this.$_baseline$ != $JSCompiler_alias_NULL$$) {
      $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = new $dvt$$9$$.$Matrix$);
      var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Matrix$($JSCompiler_alias_NULL$$, $JSCompiler_alias_NULL$$, $JSCompiler_alias_NULL$$, $JSCompiler_alias_NULL$$, $JSCompiler_alias_NULL$$, this.$_getBaselineTranslation$());
      $DvtSvgPatternFillUtils$$.concat($DvtSvgShadowUtils$$);
      $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$OutputText$.prototype.$setMatrix$ = function $$dvt$$9$$$$OutputText$$$$setMatrix$$($DvtSvgShadowUtils$$) {
    if($dvt$$9$$.$Agent$.$isPlatformIE$() || $dvt$$9$$.$Agent$.$isBrowserSafari$()) {
      this.$_matrixForIE$ = $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$ = this.$_getBaselineAdjustedMatrix$($DvtSvgShadowUtils$$)
    }
    $dvt$$9$$.$OutputText$.$superclass$.$setMatrix$.call(this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$OutputText$.prototype.$getMatrix$ = function $$dvt$$9$$$$OutputText$$$$getMatrix$$() {
    var $DvtSvgShadowUtils$$ = $JSCompiler_alias_NULL$$;
    if($dvt$$9$$.$Agent$.$isPlatformIE$() || $dvt$$9$$.$Agent$.$isBrowserSafari$()) {
      $DvtSvgShadowUtils$$ = this.$_matrixForIE$
    }
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = $dvt$$9$$.$OutputText$.$superclass$.$getMatrix$.call(this));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$OutputText$.prototype.$_isRepresentativeText$ = function $$dvt$$9$$$$OutputText$$$$_isRepresentativeText$$() {
    return this.$_textString$ == $dvt$$9$$.$OutputText$.$REPRESENTATIVE_TEXT$ || this.$_textString$ == $dvt$$9$$.$OutputText$.$BIDI_ZERO_WIDTH$ || this.$_textString$ == $dvt$$9$$.$OutputText$.$BIDI_ZERO_WIDTH$ + $dvt$$9$$.$OutputText$.$REPRESENTATIVE_TEXT$
  };
  $dvt$$9$$.$OutputText$.prototype.$GetSvgDimensions$ = function $$dvt$$9$$$$OutputText$$$$GetSvgDimensions$$() {
    var $DvtSvgShadowUtils$$ = $dvt$$9$$.$OutputText$.$superclass$.$GetSvgDimensions$.call(this);
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.y += this.$_getBaselineTranslation$());
    this.$_isRepresentativeText$() || ($DvtSvgShadowUtils$$.$h$ = $dvt$$9$$.$TextUtils$.$getTextStringHeight$(this.$getCtx$(), this.$getCSSStyle$()));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$OutputText$.prototype.$UpdateSelectionEffect$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$OutputText$.prototype.$getOptimalFontSize$ = function $$dvt$$9$$$$OutputText$$$$getOptimalFontSize$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = Math.max(Math.min($DvtSvgShadowUtils$$.$w$ / this.$getTextString$().length, $DvtSvgShadowUtils$$.$h$ / 2), 9);51 > $DvtSvgPatternFillUtils$$;$DvtSvgPatternFillUtils$$ += 1) {
      this.$setFontSize$($DvtSvgPatternFillUtils$$);
      var $DvtSvgImageFillUtils$$ = this.$measureDimensions$();
      if($DvtSvgImageFillUtils$$.$w$ > $DvtSvgShadowUtils$$.$w$ || $DvtSvgImageFillUtils$$.$h$ > $DvtSvgShadowUtils$$.$h$) {
        return Math.min($DvtSvgPatternFillUtils$$ - 1, 50)
      }
    }
    return 50
  };
  $dvt$$9$$.$OutputText$.prototype.$measureDimensions$ = function $$dvt$$9$$$$OutputText$$$$measureDimensions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getTextString$() != $JSCompiler_alias_NULL$$ ? this.$getTextString$() : "", $DvtSvgImageFillUtils$$ = this.$getHorizAlignment$(), $DvtSvgGradientUtils$$ = this.$getVertAlignment$();
    $dvt$$9$$.$OutputText$.$_cache$ || ($dvt$$9$$.$OutputText$.$_cache$ = new $dvt$$9$$.$Cache$);
    var $DvtSvgFilterUtils$$ = this.$getCSSStyle$(), $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgFilterUtils$$.$hashCodeForTextMeasurement$() : "", $DvtSvgFilterUtils$$ = 0 < $DvtSvgPatternFillUtils$$.length ? $DvtSvgPatternFillUtils$$ + $DvtSvgFilterUtils$$ : "";
    $DvtSvgGradientUtils$$ === $dvt$$9$$.$OutputText$.$V_ALIGN_AUTO$ && ($DvtSvgFilterUtils$$ += $dvt$$9$$.$OutputText$.$V_ALIGN_AUTO$);
    var $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = $dvt$$9$$.$OutputText$.$_cache$.get($DvtSvgFilterUtils$$);
    if($DvtSvgImplFactory$$ != $JSCompiler_alias_NULL$$) {
      $DvtSvgFilterContext$$ = new $dvt$$9$$.$Rectangle$($DvtSvgImplFactory$$.x + this.$getX$(), $DvtSvgImplFactory$$.y + this.$getY$(), $DvtSvgImplFactory$$.$w$, $DvtSvgImplFactory$$.$h$)
    }else {
      $DvtSvgImplFactory$$ = $dvt$$9$$.$Agent$.$isRightToLeft$(this.$getCtx$());
      $dvt$$9$$.$Agent$.$isPlatformIE$() ? $DvtSvgImplFactory$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "unicode-bidi", $JSCompiler_alias_NULL$$) : this.$alignLeft$();
      $DvtSvgGradientUtils$$ !== $dvt$$9$$.$OutputText$.$V_ALIGN_AUTO$ && this.$alignTop$();
      for(var $DvtHtmlRichTooltipManager$$ = $JSCompiler_alias_FALSE$$, $DvtDomXmlParser$$ = this.$getCtx$().$_stage$, $DvtContextMenuTooltipItem$$ = this.getParent();$DvtContextMenuTooltipItem$$;) {
        if($DvtContextMenuTooltipItem$$ == $DvtDomXmlParser$$) {
          $DvtHtmlRichTooltipManager$$ = $JSCompiler_alias_TRUE$$;
          break
        }
        $DvtContextMenuTooltipItem$$ = $DvtContextMenuTooltipItem$$.getParent()
      }
      $DvtHtmlRichTooltipManager$$ && ($DvtSvgFilterContext$$ = this.$GetSvgDimensions$());
      $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = new $dvt$$9$$.$Rectangle$(0, 0, 0, 0));
      if(0 >= $DvtSvgFilterContext$$.$w$ && 0 >= $DvtSvgFilterContext$$.$h$ && 0 < $DvtSvgPatternFillUtils$$.length) {
        var $DvtSvgPatternFillUtils$$ = this.getParent(), $DvtCustomTooltipItem$$;
        $DvtSvgPatternFillUtils$$ && ($DvtCustomTooltipItem$$ = $DvtSvgPatternFillUtils$$.$getChildIndex$(this));
        $DvtDomXmlParser$$.$addChild$(this);
        $DvtSvgFilterContext$$ = this.$GetSvgDimensions$();
        $DvtDomXmlParser$$.removeChild(this);
        $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$addChildAt$(this, $DvtCustomTooltipItem$$)
      }
      $dvt$$9$$.$Agent$.$isPlatformIE$() ? ($DvtSvgImplFactory$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "unicode-bidi", "embed"), $DvtSvgImageFillUtils$$ === $dvt$$9$$.$OutputText$.$H_ALIGN_RIGHT$ ? $DvtSvgFilterContext$$.x += $DvtSvgFilterContext$$.$w$ : $DvtSvgImageFillUtils$$ === $dvt$$9$$.$OutputText$.$H_ALIGN_CENTER$ && ($DvtSvgFilterContext$$.x += $DvtSvgFilterContext$$.$w$ / 2)) : this.$setHorizAlignment$($DvtSvgImageFillUtils$$);
      this.$setVertAlignment$($DvtSvgGradientUtils$$);
      $DvtSvgImplFactory$$ = new $dvt$$9$$.$Rectangle$($DvtSvgFilterContext$$.x - this.$getX$(), $DvtSvgFilterContext$$.y - this.$getY$(), $DvtSvgFilterContext$$.$w$, $DvtSvgFilterContext$$.$h$);
      $dvt$$9$$.$OutputText$.$_cache$.put($DvtSvgFilterUtils$$, $DvtSvgImplFactory$$)
    }
    $DvtSvgImageFillUtils$$ === $dvt$$9$$.$OutputText$.$H_ALIGN_RIGHT$ ? $DvtSvgFilterContext$$.x -= $DvtSvgFilterContext$$.$w$ : $DvtSvgImageFillUtils$$ === $dvt$$9$$.$OutputText$.$H_ALIGN_CENTER$ && ($DvtSvgFilterContext$$.x -= $DvtSvgFilterContext$$.$w$ / 2);
    $DvtSvgGradientUtils$$ === $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ ? $DvtSvgFilterContext$$.y -= $DvtSvgFilterContext$$.$h$ : $DvtSvgGradientUtils$$ === $dvt$$9$$.$OutputText$.$V_ALIGN_MIDDLE$ && ($DvtSvgFilterContext$$.y -= $DvtSvgFilterContext$$.$h$ / 2);
    return!$DvtSvgShadowUtils$$ || $DvtSvgShadowUtils$$ === this ? $DvtSvgFilterContext$$ : this.$ConvertCoordSpaceRect$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$OutputText$.prototype.$copyShape$ = function $$dvt$$9$$$$OutputText$$$$copyShape$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$OutputText$(this.$getCtx$(), this.$getTextString$(), this.$getX$(), this.$getY$());
    $DvtSvgShadowUtils$$.$setCSSStyle$(this.$getCSSStyle$());
    $DvtSvgShadowUtils$$.$setHorizAlignment$(this.$getHorizAlignment$());
    $DvtSvgShadowUtils$$.$setVertAlignment$(this.$getVertAlignment$());
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$OutputText$.prototype.$addChild$ = function $$dvt$$9$$$$OutputText$$$$addChild$$() {
    $dvt$$9$$.$Agent$.$isEnvironmentTest$() && (print("dvt.OutputText.prototype.addChild: Text should not be used as a shape container."), $JSCompiler_alias_NULL$$.$errorShouldOccurDueToInvalidAddChild$())
  };
  $dvt$$9$$.$OutputText$.$needsTextAnchorAdjustment$ = function $$dvt$$9$$$$OutputText$$$needsTextAnchorAdjustment$$() {
    return $dvt$$9$$.$Agent$.$isRightToLeft$() && !$dvt$$9$$.$Agent$.$isEnvironmentBatik$()
  };
  $dvt$$9$$.$OutputText$.prototype.$getDimensionsSelf$ = function $$dvt$$9$$$$OutputText$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    return this.$measureDimensions$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$OutputText$.$getCachedDimensions$ = function $$dvt$$9$$$$OutputText$$$getCachedDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgPatternFillUtils$$.$hashCodeForTextMeasurement$() : "", $DvtSvgImageFillUtils$$ = 0 < $DvtSvgShadowUtils$$.length ? $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ : "";
    return $dvt$$9$$.$OutputText$.$_cache$ ? $dvt$$9$$.$OutputText$.$_cache$.get($DvtSvgImageFillUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$BackgroundOutputText$ = function $$dvt$$9$$$$BackgroundOutputText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$BackgroundOutputText$, $dvt$$9$$.$Container$);
  $dvt$$9$$.$BackgroundOutputText$.$_PADDING$ = 0.15;
  $dvt$$9$$.$BackgroundOutputText$.prototype.Init = function $$dvt$$9$$$$BackgroundOutputText$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$9$$.$BackgroundOutputText$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "g", $DvtSvgFilterContext$$);
    this.$TextInstance$ = this.$CreateTextInstance$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$);
    this.$_backgroundRect$ = $JSCompiler_alias_NULL$$;
    $DvtSvgFilterUtils$$ && this.$setCSSStyle$($DvtSvgFilterUtils$$);
    this.$addChild$(this.$TextInstance$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getTextString$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getTextString$$() {
    return this.$TextInstance$.$getTextString$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setTextString$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setTextString$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setTextString$($DvtSvgShadowUtils$$);
    return this
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$isTruncated$ = function $$dvt$$9$$$$BackgroundOutputText$$$$isTruncated$$() {
    return this.$TextInstance$.$isTruncated$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getUntruncatedTextString$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getUntruncatedTextString$$() {
    return this.$TextInstance$.$getUntruncatedTextString$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setUntruncatedTextString$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setUntruncatedTextString$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setUntruncatedTextString$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getX$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getX$$() {
    return this.$TextInstance$.$getX$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setX$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setX$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$ = this.$TextInstance$.$setX$($DvtSvgShadowUtils$$);
    this.$_realignBackground$();
    return this
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getY$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getY$$() {
    return this.$TextInstance$.$getY$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setY$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setY$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$ = this.$TextInstance$.$setY$($DvtSvgShadowUtils$$);
    this.$_realignBackground$();
    return this
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setFontSize$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setFontSize$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setFontSize$($DvtSvgShadowUtils$$);
    this.$_style$.$setFontSize$($dvt$$9$$.$CSSStyle$.$FONT_SIZE$, String($DvtSvgShadowUtils$$));
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getHorizAlignment$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getHorizAlignment$$() {
    return this.$TextInstance$.$getHorizAlignment$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setHorizAlignment$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setHorizAlignment$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setHorizAlignment$($DvtSvgShadowUtils$$);
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getVertAlignment$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getVertAlignment$$() {
    return this.$TextInstance$.$getVertAlignment$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setVertAlignment$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setVertAlignment$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setVertAlignment$($DvtSvgShadowUtils$$);
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$alignLeft$ = function $$dvt$$9$$$$BackgroundOutputText$$$$alignLeft$$() {
    this.$TextInstance$.$alignLeft$();
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$alignCenter$ = function $$dvt$$9$$$$BackgroundOutputText$$$$alignCenter$$() {
    this.$TextInstance$.$alignCenter$();
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$alignRight$ = function $$dvt$$9$$$$BackgroundOutputText$$$$alignRight$$() {
    this.$TextInstance$.$alignRight$();
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$alignTop$ = function $$dvt$$9$$$$BackgroundOutputText$$$$alignTop$$() {
    this.$TextInstance$.$alignTop$();
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$alignMiddle$ = function $$dvt$$9$$$$BackgroundOutputText$$$$alignMiddle$$() {
    this.$TextInstance$.$alignMiddle$();
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$alignBottom$ = function $$dvt$$9$$$$BackgroundOutputText$$$$alignBottom$$() {
    this.$TextInstance$.$alignBottom$();
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$alignAuto$ = function $$dvt$$9$$$$BackgroundOutputText$$$$alignAuto$$() {
    this.$TextInstance$.$alignAuto$();
    this.$_realignBackground$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setCSSStyle$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BACKGROUND_COLOR$) && !$DvtSvgShadowUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$COLOR$) && $DvtSvgShadowUtils$$.$setStyle$($dvt$$9$$.$CSSStyle$.$COLOR$, $dvt$$9$$.$ColorUtils$.$getContrastingTextColor$($DvtSvgShadowUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BACKGROUND_COLOR$)));
    this.$TextInstance$ && this.$TextInstance$.$setCSSStyle$($DvtSvgShadowUtils$$);
    if(this.$_backgroundRect$ || $dvt$$9$$.$BackgroundOutputText$.$_hasBackgroundStyles$($DvtSvgShadowUtils$$)) {
      this.$_backgroundRect$ || (this.$_backgroundRect$ = this.$CreateBackground$(this.$getCtx$(), this.$TextInstance$), this.$addChildAt$(this.$_backgroundRect$, 0)), this.$_setBackgroundCSSStyle$(this.$_backgroundRect$, $DvtSvgShadowUtils$$)
    }
    this.$_style$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getCSSStyle$ = $JSCompiler_get$$("$_style$");
  $dvt$$9$$.$BackgroundOutputText$.prototype.$setMatrix$ = function $$dvt$$9$$$$BackgroundOutputText$$$$setMatrix$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setMatrix$($DvtSvgShadowUtils$$);
    this.$_backgroundRect$ && this.$_backgroundRect$.$setMatrix$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getMatrix$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getMatrix$$() {
    return this.$TextInstance$.$getMatrix$()
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getOptimalFontSize$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getOptimalFontSize$$($DvtSvgShadowUtils$$) {
    return this.$TextInstance$.$getOptimalFontSize$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$measureDimensions$ = function $$dvt$$9$$$$BackgroundOutputText$$$$measureDimensions$$($DvtSvgShadowUtils$$) {
    return this.$getDimensions$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getTextDimensions$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getTextDimensions$$() {
    return this.$TextInstance$.$getDimensions$($JSCompiler_alias_VOID$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$getDimensions$ = function $$dvt$$9$$$$BackgroundOutputText$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$TextInstance$.$getDimensions$($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$h$ * $dvt$$9$$.$BackgroundOutputText$.$_PADDING$;
    $DvtSvgShadowUtils$$.x -= $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$.$w$ += 2 * $DvtSvgPatternFillUtils$$;
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$copyShape$ = function $$dvt$$9$$$$BackgroundOutputText$$$$copyShape$$() {
    return this.$TextInstance$.$copyShape$()
  };
  $dvt$$9$$.$BackgroundOutputText$.$needsTextAnchorAdjustment$ = function $$dvt$$9$$$$BackgroundOutputText$$$needsTextAnchorAdjustment$$($DvtSvgShadowUtils$$) {
    return this.$TextInstance$.$needsTextAnchorAdjustment$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.$getCachedDimensions$ = function $$dvt$$9$$$$BackgroundOutputText$$$getCachedDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$TextInstance$.$getCachedDimensions$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$CreateTextInstance$ = function $$dvt$$9$$$$BackgroundOutputText$$$$CreateTextInstance$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    return new $dvt$$9$$.$OutputText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$CreateBackground$ = function $$dvt$$9$$$$BackgroundOutputText$$$$CreateBackground$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getDimensions$(), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$h$ * $dvt$$9$$.$BackgroundOutputText$.$_PADDING$;
    return new $dvt$$9$$.$Rect$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.x - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.y, $DvtSvgImageFillUtils$$.$w$ + 2 * $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.$h$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$_realignBackground$ = function $$dvt$$9$$$$BackgroundOutputText$$$$_realignBackground$$() {
    if(this.$_backgroundRect$) {
      var $DvtSvgShadowUtils$$ = this.$TextInstance$.$getDimensions$(), $DvtSvgPatternFillUtils$$ = 0.15 * $DvtSvgShadowUtils$$.$h$, $DvtSvgImageFillUtils$$ = this.$getHorizAlignment$(), $DvtSvgGradientUtils$$ = this.$getVertAlignment$();
      $DvtSvgImageFillUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_LEFT$ ? this.$_backgroundRect$.$setX$(this.$getX$() - $DvtSvgPatternFillUtils$$) : $DvtSvgImageFillUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_CENTER$ ? this.$_backgroundRect$.$setX$(this.$getX$() - 0.5 * $DvtSvgShadowUtils$$.$w$ - $DvtSvgPatternFillUtils$$) : $DvtSvgImageFillUtils$$ == $dvt$$9$$.$OutputText$.$H_ALIGN_RIGHT$ && this.$_backgroundRect$.$setX$(this.$getX$() - $DvtSvgShadowUtils$$.$w$ - $DvtSvgPatternFillUtils$$);
      var $DvtSvgFilterUtils$$ = parseFloat(this.$_style$.$getFontSize$());
      isNaN($DvtSvgFilterUtils$$) && ($DvtSvgFilterUtils$$ = 0);
      $DvtSvgImageFillUtils$$ = 0;
      ($dvt$$9$$.$Agent$.$isBrowserChrome$() || $dvt$$9$$.$Agent$.$isEnvironmentTest$()) && $DvtSvgGradientUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_MIDDLE$ ? $DvtSvgImageFillUtils$$ = 0.12 * $DvtSvgFilterUtils$$ : $dvt$$9$$.$Agent$.$isPlatformIE$() && $DvtSvgGradientUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ && ($DvtSvgImageFillUtils$$ = 0.4 * -$DvtSvgFilterUtils$$);
      $DvtSvgFilterUtils$$ = this.$GetTextDimensionsForRealign$($DvtSvgShadowUtils$$);
      $DvtSvgGradientUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_TOP$ ? this.$_backgroundRect$.$setY$(this.$getY$()) : $DvtSvgGradientUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_MIDDLE$ ? this.$_backgroundRect$.$setY$(this.$getY$() - 0.5 * $DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$) : $DvtSvgGradientUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_BOTTOM$ ? this.$_backgroundRect$.$setY$(this.$getY$() - $DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$) : $DvtSvgGradientUtils$$ == $dvt$$9$$.$OutputText$.$V_ALIGN_AUTO$ && 
      this.$_backgroundRect$.$setY$($DvtSvgShadowUtils$$.y);
      this.$_backgroundRect$.$setWidth$($DvtSvgShadowUtils$$.$w$ + 2 * $DvtSvgPatternFillUtils$$);
      this.$_backgroundRect$.$setHeight$($DvtSvgShadowUtils$$.$h$)
    }
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$_setBackgroundCSSStyle$ = function $$dvt$$9$$$$BackgroundOutputText$$$$_setBackgroundCSSStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgPatternFillUtils$$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BACKGROUND_COLOR$);
      $DvtSvgImageFillUtils$$ != $JSCompiler_alias_NULL$$ ? $DvtSvgShadowUtils$$.$setSolidFill$($DvtSvgImageFillUtils$$) : $DvtSvgShadowUtils$$.$setInvisibleFill$();
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_COLOR$), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$), $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_RADIUS$);
      if($DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$ || $DvtSvgFilterUtils$$) {
        var $DvtSvgFilterContext$$ = new $dvt$$9$$.$CSSStyle$;
        $DvtSvgFilterContext$$.$setStyle$($dvt$$9$$.$CSSStyle$.$BORDER_COLOR$, $DvtSvgImageFillUtils$$);
        $DvtSvgFilterContext$$.$setStyle$($dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$, $DvtSvgGradientUtils$$);
        $DvtSvgFilterContext$$.$setStyle$($dvt$$9$$.$CSSStyle$.$BORDER_RADIUS$, $DvtSvgFilterUtils$$);
        $DvtSvgShadowUtils$$.$setCSSStyle$($DvtSvgFilterContext$$)
      }
    }else {
      $DvtSvgShadowUtils$$.$setInvisibleFill$()
    }
    $DvtSvgShadowUtils$$.$setMouseEnabled$($JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$BackgroundOutputText$.prototype.$GetTextDimensionsForRealign$ = function $$dvt$$9$$$$BackgroundOutputText$$$$GetTextDimensionsForRealign$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.$h$
  };
  $dvt$$9$$.$BackgroundOutputText$.$_hasBackgroundStyles$ = function $$dvt$$9$$$$BackgroundOutputText$$$_hasBackgroundStyles$$($DvtSvgShadowUtils$$) {
    return!$DvtSvgShadowUtils$$ ? $JSCompiler_alias_FALSE$$ : $DvtSvgShadowUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_COLOR$) || $DvtSvgShadowUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$) || $DvtSvgShadowUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_RADIUS$) || $DvtSvgShadowUtils$$.$getStyle$($dvt$$9$$.$CSSStyle$.$BACKGROUND_COLOR$) ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$MultilineText$ = function $$dvt$$9$$$$MultilineText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$MultilineText$, $dvt$$9$$.$Container$);
  $dvt$$9$$.$MultilineText$.$_LINE_SPACE$ = 0;
  $dvt$$9$$.$MultilineText$.$H_ALIGN_LEFT$ = "left";
  $dvt$$9$$.$MultilineText$.$H_ALIGN_CENTER$ = "center";
  $dvt$$9$$.$MultilineText$.$H_ALIGN_RIGHT$ = "right";
  $dvt$$9$$.$MultilineText$.$V_ALIGN_TOP$ = "top";
  $dvt$$9$$.$MultilineText$.$V_ALIGN_MIDDLE$ = "middle";
  $dvt$$9$$.$MultilineText$.$V_ALIGN_BOTTOM$ = "bottom";
  $dvt$$9$$.$MultilineText$.prototype.Init = function $$dvt$$9$$$$MultilineText$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$9$$.$MultilineText$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgFilterUtils$$);
    this.$_textInstance$ = $JSCompiler_alias_NULL$$;
    this.$_additionalLines$ = [];
    this.$_yCoord$ = this.$_lineHeight$ = $JSCompiler_alias_NULL$$;
    this.$_noWrap$ = $JSCompiler_alias_FALSE$$;
    this.$setTextString$($DvtSvgPatternFillUtils$$);
    this.$setX$($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : 0);
    this.$setY$($DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : 0);
    this.$setMaxLines$(Infinity)
  };
  $dvt$$9$$.$MultilineText$.prototype.$getTextString$ = $JSCompiler_get$$("$_textString$");
  $dvt$$9$$.$MultilineText$.prototype.$setTextString$ = function $$dvt$$9$$$$MultilineText$$$$setTextString$$($DvtSvgShadowUtils$$) {
    this.$_textString$ = $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ ? String($DvtSvgShadowUtils$$) : $JSCompiler_alias_NULL$$;
    this.$_textInstance$ ? (this.$_textInstance$.$setTextString$($DvtSvgShadowUtils$$), this.$_removeAdditionalLines$()) : (this.$_textInstance$ = new $dvt$$9$$.$OutputText$(this.$getCtx$(), this.$_textString$), this.$addChild$(this.$_textInstance$));
    this.$_bTruncated$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$MultilineText$.prototype.$_getTextLines$ = function $$dvt$$9$$$$MultilineText$$$$_getTextLines$$() {
    var $DvtSvgShadowUtils$$ = this.$_additionalLines$.slice();
    this.$_textInstance$.getParent() == this && $DvtSvgShadowUtils$$.unshift(this.$_textInstance$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$MultilineText$.prototype.$getX$ = function $$dvt$$9$$$$MultilineText$$$$getX$$() {
    return this.$_textInstance$.$getX$()
  };
  $dvt$$9$$.$MultilineText$.prototype.$setX$ = function $$dvt$$9$$$$MultilineText$$$$setX$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgPatternFillUtils$$) {
      $DvtSvgPatternFillUtils$$.$setX$($DvtSvgShadowUtils$$)
    });
    return this
  };
  $dvt$$9$$.$MultilineText$.prototype.$getY$ = function $$dvt$$9$$$$MultilineText$$$$getY$$() {
    return this.$_textInstance$.$getY$()
  };
  $dvt$$9$$.$MultilineText$.prototype.$getYAlignCoord$ = $JSCompiler_get$$("$_yCoord$");
  $dvt$$9$$.$MultilineText$.prototype.$setY$ = function $$dvt$$9$$$$MultilineText$$$$setY$$($DvtSvgShadowUtils$$) {
    this.$_yCoord$ = $DvtSvgShadowUtils$$;
    if(this.$_vertAlign$) {
      this.$_alignVerticalText$()
    }else {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ - this.$_textInstance$.$getY$();
      $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$);
      $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getY$();
        $DvtSvgShadowUtils$$.$setY$($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ + $DvtSvgPatternFillUtils$$ : $DvtSvgPatternFillUtils$$)
      })
    }
    return this
  };
  $dvt$$9$$.$MultilineText$.prototype.$getMaxLines$ = function $$dvt$$9$$$$MultilineText$$$$getMaxLines$$() {
    return this.$GetProperty$("maxLines")
  };
  $dvt$$9$$.$MultilineText$.prototype.$setMaxLines$ = function $$dvt$$9$$$$MultilineText$$$$setMaxLines$$($DvtSvgShadowUtils$$) {
    0 < $DvtSvgShadowUtils$$ && this.$SetProperty$("maxLines", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$MultilineText$.prototype.$isTruncated$ = $JSCompiler_get$$("$_bTruncated$");
  $dvt$$9$$.$MultilineText$.prototype.$getHorizAlignment$ = function $$dvt$$9$$$$MultilineText$$$$getHorizAlignment$$() {
    return this.$_textInstance$.$getHorizAlignment$()
  };
  $dvt$$9$$.$MultilineText$.prototype.$setHorizAlignment$ = function $$dvt$$9$$$$MultilineText$$$$setHorizAlignment$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgPatternFillUtils$$) {
      $DvtSvgPatternFillUtils$$.$setHorizAlignment$($DvtSvgShadowUtils$$)
    });
    return this
  };
  $dvt$$9$$.$MultilineText$.prototype.$alignLeft$ = function $$dvt$$9$$$$MultilineText$$$$alignLeft$$() {
    this.$_horizAlign$ != $dvt$$9$$.$MultilineText$.$H_ALIGN_LEFT$ && (this.$_horizAlign$ = $dvt$$9$$.$MultilineText$.$H_ALIGN_LEFT$, $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignLeft$()
    }))
  };
  $dvt$$9$$.$MultilineText$.prototype.$alignCenter$ = function $$dvt$$9$$$$MultilineText$$$$alignCenter$$() {
    this.$_horizAlign$ != $dvt$$9$$.$MultilineText$.$H_ALIGN_CENTER$ && (this.$_horizAlign$ = $dvt$$9$$.$MultilineText$.$H_ALIGN_CENTER$, $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignCenter$()
    }))
  };
  $dvt$$9$$.$MultilineText$.prototype.$alignRight$ = function $$dvt$$9$$$$MultilineText$$$$alignRight$$() {
    this.$_horizAlign$ != $dvt$$9$$.$MultilineText$.$H_ALIGN_RIGHT$ && (this.$_horizAlign$ = $dvt$$9$$.$MultilineText$.$H_ALIGN_RIGHT$, $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignRight$()
    }))
  };
  $dvt$$9$$.$MultilineText$.prototype.$alignTop$ = function $$dvt$$9$$$$MultilineText$$$$alignTop$$() {
    this.$_vertAlign$ != $dvt$$9$$.$MultilineText$.$V_ALIGN_TOP$ && (this.$_vertAlign$ = $dvt$$9$$.$MultilineText$.$V_ALIGN_TOP$, this.$_alignVerticalText$(), $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignTop$()
    }))
  };
  $dvt$$9$$.$MultilineText$.prototype.$alignMiddle$ = function $$dvt$$9$$$$MultilineText$$$$alignMiddle$$() {
    this.$_vertAlign$ != $dvt$$9$$.$MultilineText$.$V_ALIGN_MIDDLE$ && (this.$_vertAlign$ = $dvt$$9$$.$MultilineText$.$V_ALIGN_MIDDLE$, this.$_alignVerticalText$(), $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignMiddle$()
    }))
  };
  $dvt$$9$$.$MultilineText$.prototype.$alignBottom$ = function $$dvt$$9$$$$MultilineText$$$$alignBottom$$() {
    this.$_vertAlign$ != $dvt$$9$$.$MultilineText$.$V_ALIGN_BOTTOM$ && (this.$_vertAlign$ = $dvt$$9$$.$MultilineText$.$V_ALIGN_BOTTOM$, this.$_alignVerticalText$(), $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignBottom$()
    }))
  };
  $dvt$$9$$.$MultilineText$.prototype.$_alignVerticalText$ = function $$dvt$$9$$$$MultilineText$$$$_alignVerticalText$$() {
    if(this.$_vertAlign$) {
      for(var $DvtSvgShadowUtils$$ = this.$getYAlignCoord$(), $DvtSvgPatternFillUtils$$ = this.$getLineCount$(), $DvtSvgImageFillUtils$$ = this.$getLineHeight$(), $DvtSvgGradientUtils$$ = this.$_getTextLines$(), $DvtSvgFilterUtils$$ = 0, $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgGradientUtils$$.length;$DvtSvgFilterContext$$++) {
        var $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$[$DvtSvgFilterContext$$];
        this.$_vertAlign$ == $dvt$$9$$.$MultilineText$.$V_ALIGN_TOP$ ? $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ * $DvtSvgFilterContext$$ : this.$_vertAlign$ == $dvt$$9$$.$MultilineText$.$V_ALIGN_MIDDLE$ ? $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ * $DvtSvgFilterContext$$ - $DvtSvgImageFillUtils$$ * ($DvtSvgPatternFillUtils$$ - 1) / 2 : this.$_vertAlign$ == $dvt$$9$$.$MultilineText$.$V_ALIGN_BOTTOM$ && ($DvtSvgFilterUtils$$ = -$DvtSvgImageFillUtils$$ * ($DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$ - 
        1));
        $DvtSvgImplFactory$$.$setY$($DvtSvgShadowUtils$$ + $DvtSvgFilterUtils$$)
      }
    }
  };
  $dvt$$9$$.$MultilineText$.prototype.$getCSSStyle$ = function $$dvt$$9$$$$MultilineText$$$$getCSSStyle$$() {
    return this.$_textInstance$.$getCSSStyle$()
  };
  $dvt$$9$$.$MultilineText$.prototype.$setCSSStyle$ = function $$dvt$$9$$$$MultilineText$$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgPatternFillUtils$$) {
      $DvtSvgPatternFillUtils$$.$setCSSStyle$($DvtSvgShadowUtils$$)
    });
    return this
  };
  $dvt$$9$$.$MultilineText$.prototype.$copyShape$ = function $$dvt$$9$$$$MultilineText$$$$copyShape$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$MultilineText$(this.$getCtx$(), this.$getTextString$(), this.$getX$(), this.$getY$());
    $DvtSvgShadowUtils$$.$setCSSStyle$(this.$getCSSStyle$()).$setHorizAlignment$(this.$getHorizAlignment$()).$setMaxLines$(this.$getMaxLines$());
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$MultilineText$.prototype.$_removeAdditionalLines$ = function $$dvt$$9$$$$MultilineText$$$$_removeAdditionalLines$$() {
    for(var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_additionalLines$.length;$DvtSvgShadowUtils$$++) {
      this.removeChild(this.$_additionalLines$[$DvtSvgShadowUtils$$])
    }
    this.$_additionalLines$ = []
  };
  $dvt$$9$$.$MultilineText$.prototype.$__fitText$ = function $$dvt$$9$$$$MultilineText$$$$__fitText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_textInstance$.$setTextString$(this.$getTextString$());
    this.$_removeAdditionalLines$();
    if($dvt$$9$$.$TextUtils$.$fitText$(this.$_textInstance$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, this, $DvtSvgImageFillUtils$$)) {
      if(this.$_textInstance$.$isTruncated$()) {
        if(!this.$isWrapEnabled$()) {
          return $JSCompiler_alias_TRUE$$
        }
      }else {
        return $JSCompiler_alias_TRUE$$
      }
    }else {
      return this.getParent().removeChild(this), $JSCompiler_alias_FALSE$$
    }
    return this.$wrapText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$MultilineText$.prototype.$wrapText$ = function $$dvt$$9$$$$MultilineText$$$$wrapText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = this.$getLineHeight$(), $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$ * $dvt$$9$$.$MultilineText$.$_LINE_SPACE$;
    $DvtSvgPatternFillUtils$$ = Math.min($DvtSvgPatternFillUtils$$, this.$getMaxLines$() * ($DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$) - $DvtSvgFilterContext$$) - $DvtSvgFilterUtils$$ - $DvtSvgFilterContext$$;
    1 < this.$getLineCount$() && this.$_removeAdditionalLines$();
    var $DvtSvgImplFactory$$ = this.$getTextString$().split(" ");
    $DvtSvgImplFactory$$.reverse();
    for(var $DvtHtmlRichTooltipManager$$ = this.$_textInstance$, $DvtDomXmlParser$$ = $JSCompiler_alias_NULL$$;0 < $DvtSvgImplFactory$$.length;) {
      var $DvtContextMenuTooltipItem$$ = $DvtSvgImplFactory$$.pop(), $DvtCustomTooltipItem$$ = $DvtDomXmlParser$$ ? $DvtDomXmlParser$$ + " " + $DvtContextMenuTooltipItem$$ : $DvtContextMenuTooltipItem$$;
      $DvtHtmlRichTooltipManager$$.$setTextString$($DvtCustomTooltipItem$$);
      $DvtHtmlRichTooltipManager$$.$setUntruncatedTextString$($JSCompiler_alias_NULL$$);
      if($dvt$$9$$.$TextUtils$.$fitText$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, Infinity, this, $DvtSvgImageFillUtils$$)) {
        if($DvtHtmlRichTooltipManager$$.$isTruncated$()) {
          if($DvtSvgPatternFillUtils$$ < $DvtSvgFilterContext$$ + $DvtSvgFilterUtils$$) {
            this.$_bTruncated$ = $JSCompiler_alias_TRUE$$;
            break
          }
          if($DvtDomXmlParser$$) {
            $DvtHtmlRichTooltipManager$$.$setTextString$($DvtDomXmlParser$$), $DvtSvgImplFactory$$.push($DvtContextMenuTooltipItem$$)
          }else {
            if($DvtSvgGradientUtils$$) {
              return this.$_textInstance$.$setTextString$(this.$getTextString$()), this.$_removeAdditionalLines$(), $JSCompiler_alias_FALSE$$
            }
            this.$_bTruncated$ = $JSCompiler_alias_TRUE$$
          }
          0 < $DvtSvgImplFactory$$.length && ($DvtDomXmlParser$$ = $DvtHtmlRichTooltipManager$$.$copyShape$(), $DvtDomXmlParser$$.$setY$($DvtHtmlRichTooltipManager$$.$getY$() + $DvtSvgFilterContext$$ + $DvtSvgFilterUtils$$), this.$addChild$($DvtDomXmlParser$$), this.$_additionalLines$.push($DvtDomXmlParser$$), $DvtHtmlRichTooltipManager$$ = $DvtDomXmlParser$$, $DvtDomXmlParser$$ = $JSCompiler_alias_NULL$$, $DvtSvgPatternFillUtils$$ -= $DvtSvgFilterContext$$ + $DvtSvgFilterUtils$$)
        }else {
          $DvtDomXmlParser$$ = $DvtCustomTooltipItem$$
        }
      }else {
        break
      }
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$MultilineText$.prototype.$GetSvgDimensions$ = function $$dvt$$9$$$$MultilineText$$$$GetSvgDimensions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $dvt$$9$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgImageFillUtils$$) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$.$getUnion$($DvtSvgImageFillUtils$$.$measureDimensions$($DvtSvgShadowUtils$$)) : $DvtSvgImageFillUtils$$.$measureDimensions$($DvtSvgShadowUtils$$)
    });
    return $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : new $dvt$$9$$.$Rectangle$(0, 0, 0, 0)
  };
  $dvt$$9$$.$MultilineText$.prototype.$getLineCount$ = function $$dvt$$9$$$$MultilineText$$$$getLineCount$$() {
    return this.$_additionalLines$.length + 1
  };
  $dvt$$9$$.$MultilineText$.prototype.$getLineHeight$ = function $$dvt$$9$$$$MultilineText$$$$getLineHeight$$() {
    this.$_lineHeight$ || (this.$_lineHeight$ = this.$_textInstance$.$measureDimensions$().$h$);
    return this.$_lineHeight$
  };
  $dvt$$9$$.$MultilineText$.prototype.$setWrapEnabled$ = function $$dvt$$9$$$$MultilineText$$$$setWrapEnabled$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $JSCompiler_alias_FALSE$$ && (this.$_textInstance$.getParent() != this && this.$addChild$(this.$_textInstance$), this.$_textInstance$.$getTextString$() || this.$_textInstance$.$setTextString$(this.$getTextString$()), this.$_removeAdditionalLines$());
    this.$_noWrap$ = !$DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$MultilineText$.prototype.$isWrapEnabled$ = function $$dvt$$9$$$$MultilineText$$$$isWrapEnabled$$() {
    return this.$_noWrap$ == $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$MultilineText$.prototype.$getUntruncatedTextString$ = function $$dvt$$9$$$$MultilineText$$$$getUntruncatedTextString$$() {
    return this.$isTruncated$() ? this.$getTextString$() : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$MultilineText$.prototype.$setUntruncatedTextString$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$MultilineText$.prototype.$measureDimensions$ = function $$dvt$$9$$$$MultilineText$$$$measureDimensions$$($DvtSvgShadowUtils$$) {
    return this.$GetSvgDimensions$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$MultilineText$.prototype.$getDimensions$ = function $$dvt$$9$$$$MultilineText$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    return this.$GetSvgDimensions$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$MultilineText$.prototype.$UpdateSelectionEffect$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$MultilineText$.prototype.$getHorizAlignment$ = $JSCompiler_get$$("$_horizAlign$");
  $dvt$$9$$.$MultilineText$.prototype.$setHorizAlignment$ = function $$dvt$$9$$$$MultilineText$$$$setHorizAlignment$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $dvt$$9$$.$MultilineText$.$H_ALIGN_LEFT$ ? this.$alignLeft$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$MultilineText$.$H_ALIGN_CENTER$ ? this.$alignCenter$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$MultilineText$.$H_ALIGN_RIGHT$ && this.$alignRight$()
  };
  $dvt$$9$$.$MultilineText$.prototype.$getVertAlignment$ = $JSCompiler_get$$("$_vertAlign$");
  $dvt$$9$$.$MultilineText$.prototype.$setVertAlignment$ = function $$dvt$$9$$$$MultilineText$$$$setVertAlignment$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $dvt$$9$$.$MultilineText$.$V_ALIGN_TOP$ ? this.$alignTop$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$MultilineText$.$V_ALIGN_MIDDLE$ ? this.$alignMiddle$() : $DvtSvgShadowUtils$$ == $dvt$$9$$.$MultilineText$.$V_ALIGN_BOTTOM$ && this.$alignBottom$()
  };
  $dvt$$9$$.$BackgroundMultilineText$ = function $$dvt$$9$$$$BackgroundMultilineText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$BackgroundMultilineText$, $dvt$$9$$.$BackgroundOutputText$);
  $dvt$$9$$.$BackgroundMultilineText$.prototype.Init = function $$dvt$$9$$$$BackgroundMultilineText$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$9$$.$BackgroundMultilineText$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$wrapText$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$wrapText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return this.$TextInstance$.$wrapText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$CreateTextInstance$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$CreateTextInstance$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    return new $dvt$$9$$.$MultilineText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$GetTextDimensionsForRealign$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$GetTextDimensionsForRealign$$() {
    return this.$getLineHeight$()
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$measureDimensions$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$measureDimensions$$() {
    return this.$TextInstance$.$measureDimensions$()
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$__fitText$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$__fitText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$TextInstance$.$__fitText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$_getTextLines$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$_getTextLines$$() {
    return this.$TextInstance$.$_getTextLines$()
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$getLineHeight$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$getLineHeight$$() {
    return this.$TextInstance$.$getLineHeight$()
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$getLineCount$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$getLineCount$$() {
    return this.$TextInstance$.$getLineCount$()
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$getYAlignCoord$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$getYAlignCoord$$() {
    return this.$TextInstance$.$getYAlignCoord$()
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$setWrapEnabled$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$setWrapEnabled$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setWrapEnabled$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$isWrapEnabled$ = function $$dvt$$9$$$$BackgroundMultilineText$$$$isWrapEnabled$$() {
    return this.$TextInstance$.$isWrapEnabled$()
  };
  $dvt$$9$$.$BackgroundMultilineText$.prototype.$UpdateSelectionEffect$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$StyleUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$StyleUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$StyleUtils$.$DEFAULT_FONT_FAMILY$ = "Tahoma,Verdana,Helvetica,sans-serif";
  $dvt$$9$$.$StyleUtils$.$DEFAULT_FONT_SIZE$ = "11px";
  $dvt$$9$$.$StyleUtils$.$DEFAULT_FONT_COLOR$ = "black";
  $dvt$$9$$.$StyleUtils$.$getStyle$ = function $$dvt$$9$$$$StyleUtils$$$getStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] !== $JSCompiler_alias_NULL$$ && "undefined" !== typeof $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] ? $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] : $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$StyleUtils$.$setStyle$ = function $$dvt$$9$$$$StyleUtils$$$setStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgImageFillUtils$$ !== $JSCompiler_alias_NULL$$ && "undefined" !== typeof $DvtSvgImageFillUtils$$) && ($DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$StyleUtils$.$getShadow$ = function $$dvt$$9$$$$StyleUtils$$$getShadow$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_NULL$$;
    if($DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && "none" != $DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ = 0, $DvtSvgFilterUtils$$ = 0, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.replace(/, /g, ",").split(" ");
      $DvtSvgShadowUtils$$.match(/rgb/i) == $JSCompiler_alias_NULL$$ && ($DvtSvgFilterContext$$[$DvtSvgFilterContext$$.length] = "rgba(0, 0, 0, 0.2)");
      if(3 > $DvtSvgFilterContext$$.length) {
        return $JSCompiler_alias_NULL$$
      }
      for($DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < $DvtSvgFilterContext$$.length;$DvtSvgShadowUtils$$++) {
        0 == $DvtSvgShadowUtils$$ ? $DvtSvgPatternFillUtils$$ = parseInt($DvtSvgFilterContext$$[0]) : 1 == $DvtSvgShadowUtils$$ ? $DvtSvgGradientUtils$$ = parseInt($DvtSvgFilterContext$$[1]) : 2 == $DvtSvgShadowUtils$$ && $DvtSvgFilterContext$$[$DvtSvgShadowUtils$$].match(/rgb/i) == $JSCompiler_alias_NULL$$ ? $DvtSvgFilterUtils$$ = parseInt($DvtSvgFilterContext$$[$DvtSvgShadowUtils$$]) : $DvtSvgFilterContext$$[$DvtSvgShadowUtils$$].match(/rgb/i) && ($DvtSvgImageFillUtils$$ = $DvtSvgFilterContext$$[$DvtSvgShadowUtils$$])
      }
      $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Shadow$($DvtSvgImageFillUtils$$, Math.sqrt($DvtSvgPatternFillUtils$$ * $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$, 180 * Math.atan2($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$) / Math.PI, 1, 3, $JSCompiler_alias_FALSE$$, $JSCompiler_alias_FALSE$$, $JSCompiler_alias_FALSE$$)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$StyleUtils$.$getTimeMilliseconds$ = function $$dvt$$9$$$$StyleUtils$$$getTimeMilliseconds$$($DvtSvgShadowUtils$$) {
    "string" == typeof $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = "ms" == $DvtSvgShadowUtils$$.slice(-2) ? parseInt($DvtSvgShadowUtils$$.slice(0, -2)) : "s" == $DvtSvgShadowUtils$$.slice(-1) ? 1E3 * parseFloat($DvtSvgShadowUtils$$.slice(0, -1)) : parseInt($DvtSvgShadowUtils$$));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$CSSGradient$ = function $$dvt$$9$$$$CSSGradient$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CSSGradient$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$CSSGradient$.LINEAR = 0;
  $dvt$$9$$.$CSSGradient$.$RADIAL$ = 1;
  $dvt$$9$$.$CSSGradient$.prototype.Init = $JSCompiler_set$$("$_type$");
  $dvt$$9$$.$CSSGradient$.prototype.$setAlphas$ = $JSCompiler_set$$("$_arAlphas$");
  $dvt$$9$$.$CSSGradient$.prototype.$setColors$ = $JSCompiler_set$$("$_arColors$");
  $dvt$$9$$.$CSSGradient$.prototype.$setRatios$ = $JSCompiler_set$$("$_arRatios$");
  $dvt$$9$$.$Obj$.$createSubclass$($DvtLinearGradient$$, $dvt$$9$$.$CSSGradient$);
  $DvtLinearGradient$$.$LEFT$ = 0;
  $DvtLinearGradient$$.$BOTTOM_LEFT$ = 45;
  $DvtLinearGradient$$.$BOTTOM$ = 90;
  $DvtLinearGradient$$.$BOTTOM_RIGHT$ = 135;
  $DvtLinearGradient$$.$RIGHT$ = 180;
  $DvtLinearGradient$$.$TOP_RIGHT$ = 225;
  $DvtLinearGradient$$.$TOP$ = 270;
  $DvtLinearGradient$$.$TOP_LEFT$ = 315;
  $DvtLinearGradient$$.prototype.Init = function $$DvtLinearGradient$$$$Init$() {
    $DvtLinearGradient$$.$superclass$.Init.call(this, $dvt$$9$$.$CSSGradient$.LINEAR)
  };
  $DvtLinearGradient$$.prototype.$getAngle$ = $JSCompiler_get$$("$_angle$");
  $DvtLinearGradient$$.prototype.$setAngle$ = $JSCompiler_set$$("$_angle$");
  $dvt$$9$$.$GradientParser$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$GradientParser$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$GradientParser$.$WEBKIT_GD_LINEAR$ = "-webkit-linear-gradient";
  $dvt$$9$$.$GradientParser$.$FIREFOX_GD_LINEAR$ = "-moz-linear-gradient";
  $dvt$$9$$.$GradientParser$.$IE_GD_LINEAR$ = "progid:DXImageTransform.Microsoft.gradient";
  $dvt$$9$$.$GradientParser$.$IE_GD_LINEAR2$ = "progid:DXImageTransform.Microsoft.Gradient";
  $dvt$$9$$.$GradientParser$.$IE7_GD_FILTER$ = "filter";
  $dvt$$9$$.$GradientParser$.$IE8_GD_FILTER$ = "-ms-filter";
  $dvt$$9$$.$GradientParser$.$IE10_GD_LINEAR$ = "-ms-linear-gradient";
  $dvt$$9$$.$GradientParser$.$IE_GD_START_COLOR_STR$ = "startColorstr";
  $dvt$$9$$.$GradientParser$.$IE_GD_END_COLOR_STR$ = "endColorstr";
  $dvt$$9$$.$GradientParser$.$IE_GD_GRADIENT_TYPE$ = "GradientType";
  $dvt$$9$$.$GradientParser$.$OLD_WEBKIT_GD_LINEAR$ = "-webkit-gradient";
  $dvt$$9$$.$GradientParser$.$GD_LINEAR$ = "linear-gradient";
  $dvt$$9$$.$GradientParser$.$GD_RADIAL$ = "radial-gradient";
  $dvt$$9$$.$GradientParser$.$GD_TOP$ = "top";
  $dvt$$9$$.$GradientParser$.$GD_BOTTOM$ = "bottom";
  $dvt$$9$$.$GradientParser$.$GD_LEFT$ = "left";
  $dvt$$9$$.$GradientParser$.$GD_RIGHT$ = "right";
  $dvt$$9$$.$GradientParser$.$GD_CENTER$ = "center";
  $dvt$$9$$.$GradientParser$.$GD_TO$ = "to";
  $dvt$$9$$.$GradientParser$.$parseCSSGradient$ = function $$dvt$$9$$$$GradientParser$$$parseCSSGradient$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$) {
      $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
      if($dvt$$9$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$WEBKIT_GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$9$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$WEBKIT_GD_LINEAR$), $dvt$$9$$.$GradientParser$.$_parseLinearGradient$($DvtSvgShadowUtils$$)
      }
      if($dvt$$9$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$FIREFOX_GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$9$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$FIREFOX_GD_LINEAR$), $dvt$$9$$.$GradientParser$.$_parseLinearGradient$($DvtSvgShadowUtils$$)
      }
      if($dvt$$9$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$IE_GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$9$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$IE_GD_LINEAR$), $dvt$$9$$.$GradientParser$.$_parseIELinearGradient$($DvtSvgShadowUtils$$)
      }
      if($dvt$$9$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$IE_GD_LINEAR2$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$9$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$IE_GD_LINEAR2$), $dvt$$9$$.$GradientParser$.$_parseIELinearGradient$($DvtSvgShadowUtils$$)
      }
      if($dvt$$9$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$IE10_GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$9$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$IE10_GD_LINEAR$), $dvt$$9$$.$GradientParser$.$_parseLinearGradient$($DvtSvgShadowUtils$$)
      }
      if($dvt$$9$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$9$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$9$$.$GradientParser$.$GD_LINEAR$), $dvt$$9$$.$GradientParser$.$_parseLinearGradient$($DvtSvgShadowUtils$$)
      }
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$GradientParser$.$_parseLinearGradient$ = function $$dvt$$9$$$$GradientParser$$$_parseLinearGradient$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = /(left|right)/, $DvtSvgImageFillUtils$$ = /(top|bottom)/, $DvtSvgGradientUtils$$ = RegExp("(?:" + /(-?(?:\d*\.)?\d+)/.source + /(deg|rad|grad|turn)/.source + ")"), $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.match(RegExp("(?:\\s*" + RegExp("(?:" + $DvtSvgGradientUtils$$.source + "|(?:" + /(?:(to)\s+)/.source + "?" + RegExp("(?:" + RegExp("(?:" + $DvtSvgPatternFillUtils$$.source + "(?:\\s+" + $DvtSvgImageFillUtils$$.source + ")?)").source + "|" + RegExp("(?:" + 
    $DvtSvgImageFillUtils$$.source + "(?:\\s+" + $DvtSvgPatternFillUtils$$.source + ")?)").source + ")").source + "))").source + "\\s*,\\s*)", "i"));
    if($DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$ || 0 == $DvtSvgPatternFillUtils$$.length) {
      return $JSCompiler_alias_NULL$$
    }
    var $DvtSvgImageFillUtils$$ = new $DvtLinearGradient$$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[5] == $dvt$$9$$.$GradientParser$.$GD_TOP$ || $DvtSvgPatternFillUtils$$[6] == $dvt$$9$$.$GradientParser$.$GD_TOP$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$[5] == $dvt$$9$$.$GradientParser$.$GD_BOTTOM$ || $DvtSvgPatternFillUtils$$[6] == $dvt$$9$$.$GradientParser$.$GD_BOTTOM$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$[4] == $dvt$$9$$.$GradientParser$.$GD_LEFT$ || $DvtSvgPatternFillUtils$$[7] == 
    $dvt$$9$$.$GradientParser$.$GD_LEFT$, $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$[4] == $dvt$$9$$.$GradientParser$.$GD_RIGHT$ || $DvtSvgPatternFillUtils$$[7] == $dvt$$9$$.$GradientParser$.$GD_RIGHT$;
    if($DvtSvgPatternFillUtils$$[3] == $dvt$$9$$.$GradientParser$.$GD_TO$) {
      if($DvtSvgGradientUtils$$ || $DvtSvgFilterUtils$$) {
        $DvtSvgGradientUtils$$ = !$DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = !$DvtSvgFilterUtils$$
      }
      if($DvtSvgFilterContext$$ || $DvtSvgImplFactory$$) {
        $DvtSvgFilterContext$$ = !$DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = !$DvtSvgImplFactory$$
      }
    }
    $DvtSvgGradientUtils$$ ? $DvtSvgFilterContext$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$TOP_LEFT$) : $DvtSvgImplFactory$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$TOP_RIGHT$) : $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$TOP$) : $DvtSvgFilterUtils$$ ? $DvtSvgFilterContext$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$BOTTOM_LEFT$) : $DvtSvgImplFactory$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$BOTTOM_RIGHT$) : 
    $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$BOTTOM$) : $DvtSvgFilterContext$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$LEFT$) : $DvtSvgImplFactory$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$RIGHT$) : $DvtSvgPatternFillUtils$$[2] && ($DvtSvgGradientUtils$$ = parseFloat($DvtSvgPatternFillUtils$$[1]), isNaN($DvtSvgGradientUtils$$) || ("grad" == $DvtSvgPatternFillUtils$$[2] ? $DvtSvgGradientUtils$$ = 180 * ($DvtSvgGradientUtils$$ / 200) : "rad" == 
    $DvtSvgPatternFillUtils$$[2] ? $DvtSvgGradientUtils$$ = 180 * ($DvtSvgGradientUtils$$ / Math.PI) : "turn" == $DvtSvgPatternFillUtils$$[2] && ($DvtSvgGradientUtils$$ = 180 * ($DvtSvgGradientUtils$$ / 0.5)), $DvtSvgImageFillUtils$$.$setAngle$($DvtSvgGradientUtils$$)));
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring($DvtSvgPatternFillUtils$$[0].length);
    $dvt$$9$$.$GradientParser$.$_parseCSSColorStops$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$GradientParser$.$_parseIELinearGradient$ = function $$dvt$$9$$$$GradientParser$$$_parseIELinearGradient$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.split(",");
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = new $DvtLinearGradient$$;
    $DvtSvgFilterUtils$$.$setAngle$($DvtLinearGradient$$.$TOP$);
    for(var $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgPatternFillUtils$$;$DvtSvgFilterContext$$++) {
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$[$DvtSvgFilterContext$$]).split("\x3d"), 2 == $DvtSvgImageFillUtils$$.length && ($DvtSvgImageFillUtils$$[0] = $dvt$$9$$.$StringUtils$.trim($DvtSvgImageFillUtils$$[0]), $DvtSvgImageFillUtils$$[0] == $dvt$$9$$.$GradientParser$.$IE_GD_START_COLOR_STR$ ? $DvtSvgGradientUtils$$[0] = $dvt$$9$$.$GradientParser$.$removeQuotes$($DvtSvgImageFillUtils$$[1], $dvt$$9$$.$CSSStyle$.$SINGLE_QUOTE$) : $DvtSvgImageFillUtils$$[0] == $dvt$$9$$.$GradientParser$.$IE_GD_END_COLOR_STR$ ? 
      $DvtSvgGradientUtils$$[1] = $dvt$$9$$.$GradientParser$.$removeQuotes$($DvtSvgImageFillUtils$$[1], $dvt$$9$$.$CSSStyle$.$SINGLE_QUOTE$) : $DvtSvgImageFillUtils$$[0] == $dvt$$9$$.$GradientParser$.$IE_GD_GRADIENT_TYPE$ && "1" == $DvtSvgImageFillUtils$$[1] && $DvtSvgFilterUtils$$.$setAngle$($DvtLinearGradient$$.$LEFT$))
    }
    $dvt$$9$$.$GradientParser$.$_parseColorStops$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    return $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$GradientParser$.$_parseCSSColorStops$ = function $$dvt$$9$$$$GradientParser$$$_parseCSSColorStops$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.match(/(#[0-9a-f]+|rgb\(\s*(\d+),\s*(\d+),\s*(\d+)\s*\)|rgba\(\s*(\d+),\s*(\d+),\s*(\d+),\s*(\d?)(\.\d+)?\s*\)|[a-z]+)(\s+\d+\.?\d*%)?/gi);
    $DvtSvgImageFillUtils$$ != $JSCompiler_alias_NULL$$ && 0 < $DvtSvgImageFillUtils$$.length && $dvt$$9$$.$GradientParser$.$_parseColorStops$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$GradientParser$.$_parseColorStops$ = function $$dvt$$9$$$$GradientParser$$$_parseColorStops$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = [], $DvtSvgFilterContext$$ = [], $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = $JSCompiler_alias_TRUE$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$ = [], $DvtCustomTooltipItem$$ = 0;$DvtCustomTooltipItem$$ < $DvtSvgShadowUtils$$.length;$DvtCustomTooltipItem$$++) {
      $DvtDomXmlParser$$ = $dvt$$9$$.$CSSStyle$.$parseBorderColor$($DvtSvgShadowUtils$$[$DvtCustomTooltipItem$$], $DvtContextMenuTooltipItem$$), $DvtSvgImplFactory$$ = $DvtContextMenuTooltipItem$$.pop(), $DvtSvgFilterUtils$$[$DvtCustomTooltipItem$$] = $DvtSvgImplFactory$$, $DvtSvgGradientUtils$$[$DvtCustomTooltipItem$$] = $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgImplFactory$$), $DvtDomXmlParser$$ = $dvt$$9$$.$StringUtils$.trim($DvtDomXmlParser$$), 0 < $DvtDomXmlParser$$.length && ($DvtSvgImplFactory$$ = 
      parseFloat($DvtDomXmlParser$$), !isNaN($DvtSvgImplFactory$$) && $dvt$$9$$.$StringUtils$.endsWith($DvtDomXmlParser$$, "%") && ($DvtSvgFilterContext$$[$DvtCustomTooltipItem$$] = $DvtSvgImplFactory$$ / 100, $DvtHtmlRichTooltipManager$$ = $JSCompiler_alias_FALSE$$))
    }
    if(1 < $DvtSvgImageFillUtils$$ && $DvtHtmlRichTooltipManager$$) {
      for($DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgImageFillUtils$$;$DvtHtmlRichTooltipManager$$++) {
        $DvtSvgFilterContext$$[$DvtHtmlRichTooltipManager$$] = $DvtHtmlRichTooltipManager$$ / ($DvtSvgImageFillUtils$$ - 1)
      }
    }else {
      $DvtHtmlRichTooltipManager$$ && ($DvtSvgFilterContext$$[0] = 0)
    }
    $DvtSvgPatternFillUtils$$.$setColors$($DvtSvgFilterUtils$$);
    $DvtSvgPatternFillUtils$$.$setAlphas$($DvtSvgGradientUtils$$);
    $DvtSvgPatternFillUtils$$.$setRatios$($DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$GradientParser$.$_removeParenthesis$ = function $$dvt$$9$$$$GradientParser$$$_removeParenthesis$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(")" != $DvtSvgShadowUtils$$.charAt($DvtSvgShadowUtils$$.length - 1)) {
      return $JSCompiler_alias_NULL$$
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring($DvtSvgPatternFillUtils$$.length);
    return $dvt$$9$$.$GradientParser$.$removeQuotes$($DvtSvgShadowUtils$$, "(", ")")
  };
  $dvt$$9$$.$GradientParser$.$removeQuotes$ = function $$dvt$$9$$$$GradientParser$$$removeQuotes$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    if($DvtSvgShadowUtils$$.charAt(0) != $DvtSvgPatternFillUtils$$) {
      return $DvtSvgShadowUtils$$
    }
    $DvtSvgImageFillUtils$$ == $JSCompiler_alias_NULL$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$);
    $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf($DvtSvgImageFillUtils$$);
    return 0 > $DvtSvgPatternFillUtils$$ ? $DvtSvgShadowUtils$$.substring(1) : $DvtSvgShadowUtils$$.substring(1, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$GradientParser$.$_startsWith$ = function $$dvt$$9$$$$GradientParser$$$_startsWith$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 == $DvtSvgShadowUtils$$.indexOf($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$CSSStyle$ = function $$dvt$$9$$$$CSSStyle$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CSSStyle$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$CSSStyle$.$SKIN_FUSION$ = "fusion";
  $dvt$$9$$.$CSSStyle$.$SKIN_SKYROS$ = "skyros";
  $dvt$$9$$.$CSSStyle$.$SKIN_ALTA$ = "alta";
  $dvt$$9$$.$CSSStyle$.$SKIN_NEXT$ = "next";
  $dvt$$9$$.$CSSStyle$.$BACKGROUND$ = "background";
  $dvt$$9$$.$CSSStyle$.$BACKGROUND_COLOR$ = "background-color";
  $dvt$$9$$.$CSSStyle$.$BACKGROUND_IMAGE$ = "background-image";
  $dvt$$9$$.$CSSStyle$.$BACKGROUND_REPEAT$ = "background-repeat";
  $dvt$$9$$.$CSSStyle$.$BACKGROUND_POSITION$ = "background-position";
  $dvt$$9$$.$CSSStyle$.$BORDER$ = "border";
  $dvt$$9$$.$CSSStyle$.$BORDER_TOP$ = "border-top";
  $dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM$ = "border-bottom";
  $dvt$$9$$.$CSSStyle$.$BORDER_LEFT$ = "border-left";
  $dvt$$9$$.$CSSStyle$.$BORDER_RIGHT$ = "border-right";
  $dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$ = "border-width";
  $dvt$$9$$.$CSSStyle$.$BORDER_TOP_WIDTH$ = "border-top-width";
  $dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$ = "border-bottom-width";
  $dvt$$9$$.$CSSStyle$.$BORDER_LEFT_WIDTH$ = "border-left-width";
  $dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$ = "border-right-width";
  $dvt$$9$$.$CSSStyle$.$BORDER_COLOR$ = "border-color";
  $dvt$$9$$.$CSSStyle$.$BORDER_TOP_COLOR$ = "border-top-color";
  $dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$ = "border-bottom-color";
  $dvt$$9$$.$CSSStyle$.$BORDER_LEFT_COLOR$ = "border-left-color";
  $dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_COLOR$ = "border-right-color";
  $dvt$$9$$.$CSSStyle$.$BORDER_STYLE$ = "border-style";
  $dvt$$9$$.$CSSStyle$.$BORDER_RADIUS$ = "border-radius";
  $dvt$$9$$.$CSSStyle$.$BORDER_TOP_LEFT_RADIUS$ = "border-top-left-radius";
  $dvt$$9$$.$CSSStyle$.$BORDER_TOP_RIGHT_RADIUS$ = "border-top-right-radius";
  $dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_RIGHT_RADIUS$ = "border-bottom-right-radius";
  $dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_LEFT_RADIUS$ = "border-bottom-left-radius";
  $dvt$$9$$.$CSSStyle$.$MARGIN$ = "margin";
  $dvt$$9$$.$CSSStyle$.$MARGIN_TOP$ = "margin-top";
  $dvt$$9$$.$CSSStyle$.$MARGIN_BOTTOM$ = "margin-bottom";
  $dvt$$9$$.$CSSStyle$.$MARGIN_LEFT$ = "margin-left";
  $dvt$$9$$.$CSSStyle$.$MARGIN_RIGHT$ = "margin-right";
  $dvt$$9$$.$CSSStyle$.$PADDING$ = "padding";
  $dvt$$9$$.$CSSStyle$.$PADDING_TOP$ = "padding-top";
  $dvt$$9$$.$CSSStyle$.$PADDING_BOTTOM$ = "padding-bottom";
  $dvt$$9$$.$CSSStyle$.$PADDING_LEFT$ = "padding-left";
  $dvt$$9$$.$CSSStyle$.$PADDING_RIGHT$ = "padding-right";
  $dvt$$9$$.$CSSStyle$.$COLOR$ = "color";
  $dvt$$9$$.$CSSStyle$.$FONT_FAMILY$ = "font-family";
  $dvt$$9$$.$CSSStyle$.$FONT_SIZE$ = "font-size";
  $dvt$$9$$.$CSSStyle$.$FONT_STYLE$ = "font-style";
  $dvt$$9$$.$CSSStyle$.$FONT_WEIGHT$ = "font-weight";
  $dvt$$9$$.$CSSStyle$.$TEXT_DECORATION$ = "text-decoration";
  $dvt$$9$$.$CSSStyle$.$TEXT_ALIGN$ = "text-align";
  $dvt$$9$$.$CSSStyle$.$BORDER_BOX$ = "border-box";
  $dvt$$9$$.$CSSStyle$.$CONTENT_BOX$ = "content-box";
  $dvt$$9$$.$CSSStyle$.$HEIGHT$ = "height";
  $dvt$$9$$.$CSSStyle$.$WIDTH$ = "width";
  $dvt$$9$$.$CSSStyle$.NONE = "none";
  $dvt$$9$$.$CSSStyle$.$NO_REPEAT$ = "no-repeat";
  $dvt$$9$$.$CSSStyle$.REPEAT = "repeat";
  $dvt$$9$$.$CSSStyle$.$REPEAT_X$ = "repeat-x";
  $dvt$$9$$.$CSSStyle$.$REPEAT_Y$ = "repeat-y";
  $dvt$$9$$.$CSSStyle$.$AUTO$ = "auto";
  $dvt$$9$$.$CSSStyle$.$AUTO_MARGIN$ = "8";
  $dvt$$9$$.$CSSStyle$.$BORDER_TYPE$ = "border-type";
  $dvt$$9$$.$CSSStyle$.$FILL_TYPE$ = "fill-type";
  $dvt$$9$$.$CSSStyle$.$CONTENT$ = "content";
  $dvt$$9$$.$CSSStyle$.$INNER_COLOR$ = "-tr-inner-color";
  $dvt$$9$$.$CSSStyle$.$OUTER_COLOR$ = "-tr-outer-color";
  $dvt$$9$$.$CSSStyle$.$WHITE_SPACE$ = "white-space";
  $dvt$$9$$.$CSSStyle$.$_NAMED_FONT_SIZE_MAP$ = {"xx-small":"9", "x-small":"10", small:"13", medium:"16", large:"18", "x-large":"24", "xx-large":"32"};
  $dvt$$9$$.$CSSStyle$.$_NAMED_WIDTH_MAP$ = {$thin$:"2", $medium$:"4", $thick$:"6"};
  $dvt$$9$$.$CSSStyle$.$_NAMED_COLOR_MAP$ = {aqua:"#00FFFF", black:"#000000", blue:"#0000FF", white:"#FFFFFF", fuchsia:"#FF00FF", gray:"#848284", lime:"#00FF00", maroon:"#840000", green:"#008200", navy:"#000084", olive:"#848200", red:"#FF0000", silver:"#C6C3C6", teal:"#008284", yellow:"#FFFF00", purple:"#800080", cyan:"#D2B48C", goldenrod:"#DAA520", lightblue:"#ADD8E6", lightyellow:"#FFFFE0", orange:"#FFA500", paleGoldenRod:"#EEE8AA", paleturquoise:"#AFEEEE", peachpuff:"#FFDAB9", pink:"#FFC0CB", 
  tan:"#D2B48C", thistle:"#D8BFD8", transparent:"transparent"};
  $dvt$$9$$.$CSSStyle$.$_numericAttrsList$ = [$dvt$$9$$.$CSSStyle$.$WIDTH$, $dvt$$9$$.$CSSStyle$.$HEIGHT$, $dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$, $dvt$$9$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $dvt$$9$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $dvt$$9$$.$CSSStyle$.$MARGIN$, $dvt$$9$$.$CSSStyle$.$MARGIN_TOP$, $dvt$$9$$.$CSSStyle$.$MARGIN_BOTTOM$, $dvt$$9$$.$CSSStyle$.$MARGIN_LEFT$, $dvt$$9$$.$CSSStyle$.$MARGIN_RIGHT$, $dvt$$9$$.$CSSStyle$.$PADDING$, 
  $dvt$$9$$.$CSSStyle$.$PADDING_TOP$, $dvt$$9$$.$CSSStyle$.$PADDING_BOTTOM$, $dvt$$9$$.$CSSStyle$.$PADDING_LEFT$, $dvt$$9$$.$CSSStyle$.$PADDING_RIGHT$];
  $dvt$$9$$.$CSSStyle$.$_DOUBLE_QUOTE$ = '"';
  $dvt$$9$$.$CSSStyle$.$_SINGLE_QUOTE$ = "'";
  $dvt$$9$$.$CSSStyle$.$COLORS_SKYROS$ = "#003366 #CC3300 #666699 #006666 #FF9900 #993366 #99CC33 #624390 #669933 #FFCC33 #006699 #EBEA79".split(" ");
  $dvt$$9$$.$CSSStyle$.$COLORS_ALTA$ = "#267db3 #68c182 #fad55c #ed6647 #8561c8 #6ddbdb #ffb54d #e371b2 #47bdef #a2bf39 #a75dba #f7f37b".split(" ");
  $dvt$$9$$.$CSSStyle$.prototype.Init = function $$dvt$$9$$$$CSSStyle$$$Init$($DvtSvgShadowUtils$$) {
    this.$_styleMap$ = {};
    this.$parseInlineStyle$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$parseInlineStyle$ = function $$dvt$$9$$$$CSSStyle$$$$parseInlineStyle$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length) {
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.split(";");
      for(var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
        if($DvtSvgImageFillUtils$$ && 0 < $DvtSvgImageFillUtils$$.length) {
          var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.indexOf(":");
          if(-1 < $DvtSvgGradientUtils$$) {
            var $DvtSvgFilterUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgImageFillUtils$$.substring(0, $DvtSvgGradientUtils$$)), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgImageFillUtils$$.substring($DvtSvgGradientUtils$$ + 1));
            $DvtSvgFilterUtils$$ && (0 < $DvtSvgFilterUtils$$.length && $DvtSvgImageFillUtils$$ && 0 < $DvtSvgImageFillUtils$$.length) && ($DvtSvgFilterUtils$$ == $dvt$$9$$.$CSSStyle$.$BACKGROUND_IMAGE$ && 0 <= $DvtSvgImageFillUtils$$.indexOf("data:image/") && ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ + ";" + $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$ + 1], $DvtSvgPatternFillUtils$$++), this.$setStyle$($DvtSvgFilterUtils$$, $DvtSvgImageFillUtils$$))
          }
        }
      }
    }
  };
  $dvt$$9$$.$CSSStyle$.prototype.$setStyle$ = function $$dvt$$9$$$$CSSStyle$$$$setStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$) {
      this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
    }else {
      switch($DvtSvgShadowUtils$$) {
        case "background-repeat":
          this.$_setBackgroundRepeat$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "color":
        ;
        case "background-color":
        ;
        case "border-top-color":
        ;
        case "border-bottom-color":
        ;
        case "border-left-color":
        ;
        case "border-right-color":
          this.$_setColorAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "border-top":
        ;
        case "border-bottom":
        ;
        case "border-left":
        ;
        case "border-right":
          this.$_setBorderSide$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "border":
          this.$_setBorderShorthand$($DvtSvgPatternFillUtils$$);
          break;
        case "border-color":
          this.$_setBorderColorShorthand$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "border-width":
          this.$_setBorderWidthShorthand$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "border-radius":
          this.$_setBorderRadius$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "padding":
          this.$_setPaddingShorthand$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "margin":
          this.$_setMarginShorthand$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "font-size":
          this.$setFontSize$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "background-image":
          var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$GradientParser$.$parseCSSGradient$($DvtSvgPatternFillUtils$$);
          $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$);
          this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case $dvt$$9$$.$GradientParser$.$IE7_GD_FILTER$:
        ;
        case $dvt$$9$$.$GradientParser$.$IE8_GD_FILTER$:
          $DvtSvgImageFillUtils$$ = $dvt$$9$$.$GradientParser$.$removeQuotes$($DvtSvgPatternFillUtils$$, $dvt$$9$$.$CSSStyle$.$_DOUBLE_QUOTE$);
          if($DvtSvgImageFillUtils$$ = $dvt$$9$$.$GradientParser$.$parseCSSGradient$($DvtSvgImageFillUtils$$)) {
            $DvtSvgShadowUtils$$ = $dvt$$9$$.$CSSStyle$.$BACKGROUND_IMAGE$, $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$
          }
          this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        default:
          this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
      }
    }
    return this
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getStyle$ = function $$dvt$$9$$$$CSSStyle$$$$getStyle$$($DvtSvgShadowUtils$$) {
    return this.$_styleMap$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setStyleAttr$ = function $$dvt$$9$$$$CSSStyle$$$$_setStyleAttr$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$ ? this.$_styleMap$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$ : delete this.$_styleMap$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$CSSStyle$.prototype.$setFontSize$ = function $$dvt$$9$$$$CSSStyle$$$$setFontSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$CSSStyle$.$_NAMED_FONT_SIZE_MAP$[$DvtSvgImageFillUtils$$];
    $DvtSvgGradientUtils$$ ? this.$_setStyleAttr$($DvtSvgShadowUtils$$, String($DvtSvgGradientUtils$$) + "px") : this.$_setStyleAttr$($DvtSvgShadowUtils$$, isNaN(parseFloat($DvtSvgImageFillUtils$$)) ? $dvt$$9$$.$StyleUtils$.$DEFAULT_FONT_SIZE$ : $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setBorderWidthShorthand$ = function $$dvt$$9$$$$CSSStyle$$$$_setBorderWidthShorthand$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" "), $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$;
    switch($DvtSvgImageFillUtils$$.length) {
      case 1:
        this.$_setStyleAttr$($DvtSvgShadowUtils$$, $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[0]));
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $JSCompiler_alias_NULL$$);
        break;
      case 2:
        $DvtSvgGradientUtils$$ = $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[0]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $DvtSvgGradientUtils$$);
        $DvtSvgGradientUtils$$ = $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $DvtSvgGradientUtils$$);
        break;
      case 3:
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[0]));
        $DvtSvgGradientUtils$$ = $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[2]));
        break;
      case 4:
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[0])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[1])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[2])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $dvt$$9$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[3]))
    }
  };
  $dvt$$9$$.$CSSStyle$.$_getBorderWidth$ = function $$dvt$$9$$$$CSSStyle$$$_getBorderWidth$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$CSSStyle$.$_NAMED_WIDTH_MAP$[$DvtSvgShadowUtils$$];
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = isNaN(parseFloat($DvtSvgShadowUtils$$)) ? "0px" : $DvtSvgShadowUtils$$);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setBorderSide$ = function $$dvt$$9$$$$CSSStyle$$$$_setBorderSide$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" "), $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgFilterUtils$$ = $JSCompiler_alias_FALSE$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgImplFactory$$++) {
      if($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgImplFactory$$], $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$, 0 == $DvtSvgGradientUtils$$.indexOf("rgb")) {
        for(var $DvtHtmlRichTooltipManager$$ = $DvtSvgImplFactory$$ + 1;$DvtHtmlRichTooltipManager$$ < $DvtSvgImageFillUtils$$.length && !($DvtSvgGradientUtils$$ += $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImplFactory$$++, -1 != $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$].indexOf(")"));$DvtHtmlRichTooltipManager$$++) {
        }
        $dvt$$9$$.$StringUtils$.endsWith($DvtSvgShadowUtils$$, "-" + $dvt$$9$$.$CSSStyle$.$COLOR$) || ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$ + "-" + $dvt$$9$$.$CSSStyle$.$COLOR$);
        this.$_setStyleAttr$($DvtSvgFilterContext$$, $DvtSvgGradientUtils$$)
      }else {
        $dvt$$9$$.$CSSStyle$.$_isColorValue$($DvtSvgGradientUtils$$) ? ($dvt$$9$$.$StringUtils$.endsWith($DvtSvgShadowUtils$$, "-" + $dvt$$9$$.$CSSStyle$.$COLOR$) || ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$ + "-" + $dvt$$9$$.$CSSStyle$.$COLOR$), this.$_setStyleAttr$($DvtSvgFilterContext$$, $dvt$$9$$.$CSSStyle$.$_parseHexColor$($DvtSvgGradientUtils$$))) : $dvt$$9$$.$CSSStyle$.$_isBorderWidthValue$($DvtSvgGradientUtils$$) ? ($dvt$$9$$.$StringUtils$.endsWith($DvtSvgShadowUtils$$, "-" + $dvt$$9$$.$CSSStyle$.$WIDTH$) || 
        ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$ + "-" + $dvt$$9$$.$CSSStyle$.$WIDTH$), this.$_setStyleAttr$($DvtSvgFilterContext$$, $DvtSvgGradientUtils$$)) : "none" == $DvtSvgPatternFillUtils$$ && ($DvtSvgFilterUtils$$ = $JSCompiler_alias_TRUE$$)
      }
    }
    $DvtSvgFilterUtils$$ && this.$_setStyleAttr$($DvtSvgShadowUtils$$ + "-" + $dvt$$9$$.$CSSStyle$.$WIDTH$, "0")
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getBorderSideWidth$ = function $$dvt$$9$$$$CSSStyle$$$$getBorderSideWidth$$($DvtSvgShadowUtils$$) {
    return this.$_getSideWidth$($DvtSvgShadowUtils$$, $dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getMargin$ = function $$dvt$$9$$$$CSSStyle$$$$getMargin$$($DvtSvgShadowUtils$$) {
    return this.$_getSideWidth$($DvtSvgShadowUtils$$, $dvt$$9$$.$CSSStyle$.$MARGIN$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getPadding$ = function $$dvt$$9$$$$CSSStyle$$$$getPadding$$($DvtSvgShadowUtils$$) {
    return this.$_getSideWidth$($DvtSvgShadowUtils$$, $dvt$$9$$.$CSSStyle$.$PADDING$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getBorderWidth$ = function $$dvt$$9$$$$CSSStyle$$$$getBorderWidth$$() {
    var $DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$);
    return $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_WIDTH$)) || ($DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$)) || ($DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$)) ? $dvt$$9$$.$CSSStyle$.$toNumber$($DvtSvgShadowUtils$$) : ($DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_WIDTH$)) ? $dvt$$9$$.$CSSStyle$.$toNumber$($DvtSvgShadowUtils$$) : 0
  };
  $dvt$$9$$.$CSSStyle$.prototype.getWidth = function $$dvt$$9$$$$CSSStyle$$$getWidth$() {
    return this.$getStyle$($dvt$$9$$.$CSSStyle$.$WIDTH$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.getHeight = function $$dvt$$9$$$$CSSStyle$$$getHeight$() {
    return this.$getStyle$($dvt$$9$$.$CSSStyle$.$HEIGHT$)
  };
  $dvt$$9$$.$CSSStyle$.$toNumber$ = function $$dvt$$9$$$$CSSStyle$$$toNumber$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ ? ($DvtSvgShadowUtils$$ = parseFloat($DvtSvgShadowUtils$$), isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$) : 0
  };
  $dvt$$9$$.$CSSStyle$.$isInheritable$ = function $$dvt$$9$$$$CSSStyle$$$isInheritable$$($DvtSvgShadowUtils$$) {
    switch($DvtSvgShadowUtils$$) {
      case $dvt$$9$$.$CSSStyle$.$COLOR$:
      ;
      case $dvt$$9$$.$CSSStyle$.$FONT_FAMILY$:
      ;
      case $dvt$$9$$.$CSSStyle$.$FONT_SIZE$:
      ;
      case $dvt$$9$$.$CSSStyle$.$FONT_STYLE$:
      ;
      case $dvt$$9$$.$CSSStyle$.$FONT_WEIGHT$:
      ;
      case $dvt$$9$$.$CSSStyle$.$TEXT_ALIGN$:
        return $JSCompiler_alias_TRUE$$;
      default:
        return $JSCompiler_alias_FALSE$$
    }
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setBorderColorShorthand$ = function $$dvt$$9$$$$CSSStyle$$$$_setBorderColorShorthand$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$CSSStyle$.$_parseBorderColorString$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$;
    switch($DvtSvgImageFillUtils$$.length) {
      case 1:
        this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$[0]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_COLOR$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_COLOR$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_COLOR$, $JSCompiler_alias_NULL$$);
        break;
      case 2:
        $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[0];
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_COLOR$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$, $DvtSvgGradientUtils$$);
        $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[1];
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_COLOR$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_COLOR$, $DvtSvgGradientUtils$$);
        break;
      case 3:
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_COLOR$, $DvtSvgImageFillUtils$$[0]);
        $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[1];
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_COLOR$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_COLOR$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$, $DvtSvgImageFillUtils$$[2]);
        break;
      case 4:
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_COLOR$, $DvtSvgImageFillUtils$$[0]), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_RIGHT_COLOR$, $DvtSvgImageFillUtils$$[1]), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$, $DvtSvgImageFillUtils$$[2]), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_LEFT_COLOR$, $DvtSvgImageFillUtils$$[3])
    }
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setPaddingShorthand$ = function $$dvt$$9$$$$CSSStyle$$$$_setPaddingShorthand$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" "), $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$;
    switch($DvtSvgImageFillUtils$$.length) {
      case 1:
        this.$_setStyleAttr$($DvtSvgShadowUtils$$, this.$_getPercent$($DvtSvgImageFillUtils$$[0]));
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_TOP$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_BOTTOM$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_RIGHT$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_LEFT$, $JSCompiler_alias_NULL$$);
        break;
      case 2:
        $DvtSvgGradientUtils$$ = this.$_getPercent$($DvtSvgImageFillUtils$$[0]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_TOP$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_BOTTOM$, $DvtSvgGradientUtils$$);
        $DvtSvgGradientUtils$$ = this.$_getPercent$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_LEFT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_RIGHT$, $DvtSvgGradientUtils$$);
        break;
      case 3:
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_TOP$, this.$_getPercent$($DvtSvgImageFillUtils$$[0]));
        $DvtSvgGradientUtils$$ = this.$_getPercent$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_LEFT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_RIGHT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_BOTTOM$, this.$_getPercent$($DvtSvgImageFillUtils$$[2]));
        break;
      case 4:
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_TOP$, this.$_getPercent$($DvtSvgImageFillUtils$$[0])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_RIGHT$, this.$_getPercent$($DvtSvgImageFillUtils$$[1])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_BOTTOM$, this.$_getPercent$($DvtSvgImageFillUtils$$[2])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$PADDING_LEFT$, this.$_getPercent$($DvtSvgImageFillUtils$$[3]))
    }
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setMarginShorthand$ = function $$dvt$$9$$$$CSSStyle$$$$_setMarginShorthand$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" "), $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$;
    switch($DvtSvgImageFillUtils$$.length) {
      case 1:
        this.$_setStyleAttr$($DvtSvgShadowUtils$$, this.$_getMargin$($DvtSvgImageFillUtils$$[0]));
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_TOP$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_BOTTOM$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_RIGHT$, $JSCompiler_alias_NULL$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_LEFT$, $JSCompiler_alias_NULL$$);
        break;
      case 2:
        $DvtSvgGradientUtils$$ = this.$_getMargin$($DvtSvgImageFillUtils$$[0]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_TOP$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_BOTTOM$, $DvtSvgGradientUtils$$);
        $DvtSvgGradientUtils$$ = this.$_getMargin$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_LEFT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_RIGHT$, $DvtSvgGradientUtils$$);
        break;
      case 3:
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_TOP$, this.$_getMargin$($DvtSvgImageFillUtils$$[0]));
        $DvtSvgGradientUtils$$ = this.$_getMargin$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_LEFT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_RIGHT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_BOTTOM$, this.$_getMargin$($DvtSvgImageFillUtils$$[2]));
        break;
      case 4:
        this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_TOP$, this.$_getMargin$($DvtSvgImageFillUtils$$[0])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_RIGHT$, this.$_getMargin$($DvtSvgImageFillUtils$$[1])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_BOTTOM$, this.$_getMargin$($DvtSvgImageFillUtils$$[2])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$MARGIN_LEFT$, this.$_getMargin$($DvtSvgImageFillUtils$$[3]))
    }
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_getMargin$ = function $$dvt$$9$$$$CSSStyle$$$$_getMargin$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return $dvt$$9$$.$CSSStyle$.$AUTO$ == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$CSSStyle$.$AUTO_MARGIN$ : this.$_getPercent$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_getPercent$ = function $$dvt$$9$$$$CSSStyle$$$$_getPercent$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setBorderShorthand$ = function $$dvt$$9$$$$CSSStyle$$$$_setBorderShorthand$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.split(" "), $DvtSvgImageFillUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$ = $JSCompiler_alias_FALSE$$, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++) {
      if($DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$], 0 == $DvtSvgImageFillUtils$$.indexOf("rgb")) {
        for(var $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$ + 1;$DvtSvgFilterContext$$ < $DvtSvgPatternFillUtils$$.length && !($DvtSvgImageFillUtils$$ += $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$], $DvtSvgFilterUtils$$++, -1 != $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$].indexOf(")"));$DvtSvgFilterContext$$++) {
        }
        this.$_setBorderColorShorthand$($dvt$$9$$.$CSSStyle$.$BORDER_COLOR$, $DvtSvgImageFillUtils$$)
      }else {
        $dvt$$9$$.$CSSStyle$.$_isColorValue$($DvtSvgImageFillUtils$$) ? this.$_setBorderColorShorthand$($dvt$$9$$.$CSSStyle$.$BORDER_COLOR$, $DvtSvgImageFillUtils$$) : $dvt$$9$$.$CSSStyle$.$_isBorderWidthValue$($DvtSvgImageFillUtils$$) ? this.$_setBorderWidthShorthand$($dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$, $DvtSvgImageFillUtils$$) : "none" == $DvtSvgShadowUtils$$ && ($DvtSvgGradientUtils$$ = $JSCompiler_alias_TRUE$$)
      }
    }
    $DvtSvgGradientUtils$$ && this.$_setBorderWidthShorthand$($dvt$$9$$.$CSSStyle$.$BORDER_WIDTH$, "0")
  };
  $dvt$$9$$.$CSSStyle$.$_getBorderRadius$ = function $$dvt$$9$$$$CSSStyle$$$_getBorderRadius$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return isNaN(parseFloat($DvtSvgShadowUtils$$)) ? "0px" : $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setBorderRadius$ = function $$dvt$$9$$$$CSSStyle$$$$_setBorderRadius$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split("/");
    if($DvtSvgImageFillUtils$$[0] == $JSCompiler_alias_NULL$$) {
      this.$_setStyleAttr$($DvtSvgShadowUtils$$, "0px")
    }else {
      var $DvtSvgGradientUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgImageFillUtils$$[0]).split(" ");
      switch($DvtSvgGradientUtils$$.length) {
        default:
          this.$_setStyleAttr$($DvtSvgShadowUtils$$, $dvt$$9$$.$CSSStyle$.$_getBorderRadius$($DvtSvgGradientUtils$$[0])), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_LEFT_RADIUS$, $JSCompiler_alias_NULL$$), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_TOP_RIGHT_RADIUS$, $JSCompiler_alias_NULL$$), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_RIGHT_RADIUS$, $JSCompiler_alias_NULL$$), this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$BORDER_BOTTOM_LEFT_RADIUS$, $JSCompiler_alias_NULL$$)
      }
      if(2 == $DvtSvgImageFillUtils$$.length && $DvtSvgImageFillUtils$$[1] != $JSCompiler_alias_NULL$$) {
        switch($DvtSvgImageFillUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgImageFillUtils$$[1]).split(" "), $DvtSvgImageFillUtils$$.length) {
          case 1:
            this.$getStyle$($DvtSvgShadowUtils$$) ? this.$_setStyleAttr$($DvtSvgShadowUtils$$, this.$getStyle$($DvtSvgShadowUtils$$) + " " + $dvt$$9$$.$CSSStyle$.$_getBorderRadius$($DvtSvgImageFillUtils$$[0])) : this.$_setStyleAttr$($DvtSvgShadowUtils$$, $dvt$$9$$.$CSSStyle$.$_getBorderRadius$($DvtSvgImageFillUtils$$[0]))
        }
      }
    }
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getBorderRadius$ = function $$dvt$$9$$$$CSSStyle$$$$getBorderRadius$$() {
    return"undefined" !== this.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_RADIUS$) && this.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_RADIUS$) !== $JSCompiler_alias_NULL$$ ? $dvt$$9$$.$CSSStyle$.$toNumber$(this.$getStyle$($dvt$$9$$.$CSSStyle$.$BORDER_RADIUS$)) : 0
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setBackgroundRepeat$ = function $$dvt$$9$$$$CSSStyle$$$$_setBackgroundRepeat$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" ");
    2 == $DvtSvgImageFillUtils$$.length && ($DvtSvgImageFillUtils$$[0] == $DvtSvgImageFillUtils$$[1] ? $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$[0] : $DvtSvgImageFillUtils$$[0] == $dvt$$9$$.$CSSStyle$.REPEAT && $DvtSvgImageFillUtils$$[1] == $dvt$$9$$.$CSSStyle$.$NO_REPEAT$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$CSSStyle$.$REPEAT_X$), $DvtSvgImageFillUtils$$[0] == $dvt$$9$$.$CSSStyle$.$NO_REPEAT$ && $DvtSvgImageFillUtils$$[1] == $dvt$$9$$.$CSSStyle$.REPEAT && ($DvtSvgPatternFillUtils$$ = 
    $dvt$$9$$.$CSSStyle$.$REPEAT_Y$));
    this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_setColorAttr$ = function $$dvt$$9$$$$CSSStyle$$$$_setColorAttr$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$CSSStyle$.$_toColorVal$($DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$ ? this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) : $dvt$$9$$.$CSSStyle$.$_isColorValue$($DvtSvgPatternFillUtils$$) && this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.$_toColorVal$ = function $$dvt$$9$$$$CSSStyle$$$_toColorVal$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return($DvtSvgShadowUtils$$ = $dvt$$9$$.$CSSStyle$.$_NAMED_COLOR_MAP$[$DvtSvgShadowUtils$$.toLowerCase()]) ? $DvtSvgShadowUtils$$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$setColor$ = function $$dvt$$9$$$$CSSStyle$$$$setColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.$_isValueInEM$ = function $$dvt$$9$$$$CSSStyle$$$_isValueInEM$$($DvtSvgShadowUtils$$) {
    return 0 <= $DvtSvgShadowUtils$$.toLowerCase().indexOf("em")
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_resolveEMx$ = function $$dvt$$9$$$$CSSStyle$$$$_resolveEMx$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getStyle$($DvtSvgShadowUtils$$);
    return $DvtSvgImageFillUtils$$ && $dvt$$9$$.$CSSStyle$.$_isValueInEM$($DvtSvgImageFillUtils$$) ? $DvtSvgPatternFillUtils$$ ? (this.$_setStyleAttr$($DvtSvgShadowUtils$$, String(Math.round(parseFloat($DvtSvgImageFillUtils$$) * parseFloat($DvtSvgPatternFillUtils$$))) + "px"), $JSCompiler_alias_TRUE$$) : $JSCompiler_alias_FALSE$$ : $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getAbsoluteFontSize$ = function $$dvt$$9$$$$CSSStyle$$$$getAbsoluteFontSize$$() {
    var $DvtSvgShadowUtils$$ = this.$getFontSize$();
    return $DvtSvgShadowUtils$$ && !$dvt$$9$$.$CSSStyle$.$_isValueInEM$($DvtSvgShadowUtils$$) ? $DvtSvgShadowUtils$$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$resolveEM$ = function $$dvt$$9$$$$CSSStyle$$$$resolveEM$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getFontSize$();
    $DvtSvgPatternFillUtils$$ && ($dvt$$9$$.$CSSStyle$.$_isValueInEM$($DvtSvgPatternFillUtils$$) ? this.$_resolveEMx$($dvt$$9$$.$CSSStyle$.$FONT_SIZE$, $DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$);
    for(var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$CSSStyle$.$_numericAttrsList$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length && this.$_resolveEMx$($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgShadowUtils$$);$DvtSvgImageFillUtils$$++) {
    }
  };
  $dvt$$9$$.$CSSStyle$.prototype.$clone$ = function $$dvt$$9$$$$CSSStyle$$$$clone$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$9$$.$CSSStyle$, $DvtSvgPatternFillUtils$$;
    for($DvtSvgPatternFillUtils$$ in this.$_styleMap$) {
      $DvtSvgShadowUtils$$.$_setStyleAttr$($DvtSvgPatternFillUtils$$, this.$getStyle$($DvtSvgPatternFillUtils$$))
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$merge$ = function $$dvt$$9$$$$CSSStyle$$$$merge$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      for(var $DvtSvgPatternFillUtils$$ in $DvtSvgShadowUtils$$.$_styleMap$) {
        this.$_setStyleAttr$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.$getStyle$($DvtSvgPatternFillUtils$$))
      }
    }
    return this
  };
  $dvt$$9$$.$CSSStyle$.prototype.$mergeUnder$ = function $$dvt$$9$$$$CSSStyle$$$$mergeUnder$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      for(var $DvtSvgPatternFillUtils$$ in $DvtSvgShadowUtils$$.$_styleMap$) {
        this.$getStyle$($DvtSvgPatternFillUtils$$) || this.$_setStyleAttr$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.$getStyle$($DvtSvgPatternFillUtils$$))
      }
    }
    return this
  };
  $dvt$$9$$.$CSSStyle$.prototype.toString = function $$dvt$$9$$$$CSSStyle$$$toString$() {
    var $DvtSvgShadowUtils$$ = "", $DvtSvgPatternFillUtils$$;
    for($DvtSvgPatternFillUtils$$ in this.$_styleMap$) {
      $DvtSvgShadowUtils$$ += $DvtSvgPatternFillUtils$$ + ":" + this.$getStyle$($DvtSvgPatternFillUtils$$) + "; "
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getBackgroundImage$ = function $$dvt$$9$$$$CSSStyle$$$$getBackgroundImage$$() {
    var $DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$9$$.$CSSStyle$.$BACKGROUND_IMAGE$), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$;
    if($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$CSSGradient$) {
      return $DvtSvgShadowUtils$$
    }
    $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.indexOf("url("), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf(")"), 0 == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$.length - 1 && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(4, $DvtSvgImageFillUtils$$)));
    $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.indexOf($dvt$$9$$.$CSSStyle$.$_SINGLE_QUOTE$), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf($dvt$$9$$.$CSSStyle$.$_SINGLE_QUOTE$), 0 == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$.length - 1 ? $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(1, $DvtSvgImageFillUtils$$) : ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.indexOf($dvt$$9$$.$CSSStyle$.$_DOUBLE_QUOTE$), $DvtSvgImageFillUtils$$ = 
    $DvtSvgShadowUtils$$.lastIndexOf($dvt$$9$$.$CSSStyle$.$_DOUBLE_QUOTE$), 0 == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$.length - 1 && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(1, $DvtSvgImageFillUtils$$))));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$CSSStyle$.$_isColorValue$ = function $$dvt$$9$$$$CSSStyle$$$_isColorValue$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return 0 == $DvtSvgShadowUtils$$.indexOf("rgb") || 0 == $DvtSvgShadowUtils$$.indexOf("#") || $dvt$$9$$.$CSSStyle$.$_NAMED_COLOR_MAP$[$DvtSvgShadowUtils$$.toLowerCase()] ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$CSSStyle$.$_isBorderWidthValue$ = function $$dvt$$9$$$$CSSStyle$$$_isBorderWidthValue$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return $dvt$$9$$.$CSSStyle$.$_NAMED_WIDTH_MAP$[$DvtSvgShadowUtils$$] ? $JSCompiler_alias_TRUE$$ : !isNaN(parseFloat($DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$CSSStyle$.$_parseBorderColorString$ = function $$dvt$$9$$$$CSSStyle$$$_parseBorderColorString$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    for(var $DvtSvgPatternFillUtils$$ = [];$DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && 0 < $DvtSvgShadowUtils$$.length;) {
      $DvtSvgShadowUtils$$ = $dvt$$9$$.$CSSStyle$.$parseBorderColor$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$CSSStyle$.$parseBorderColor$ = function $$dvt$$9$$$$CSSStyle$$$parseBorderColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = -1;
    if(!$DvtSvgShadowUtils$$) {
      return $DvtSvgShadowUtils$$
    }
    if(0 == $DvtSvgShadowUtils$$.indexOf("rgb")) {
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.indexOf(")") + 1, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.slice(0, $DvtSvgGradientUtils$$)
    }else {
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.indexOf(" ");
      -1 == $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$);
      var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.slice(0, $DvtSvgGradientUtils$$);
      ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$CSSStyle$.$_toColorVal$($DvtSvgFilterUtils$$)) || ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$CSSStyle$.$_parseHexColor$($DvtSvgFilterUtils$$))
    }
    $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$.push($DvtSvgImageFillUtils$$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.slice($DvtSvgGradientUtils$$));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$CSSStyle$.$_parseHexColor$ = function $$dvt$$9$$$$CSSStyle$$$_parseHexColor$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length && ($DvtSvgPatternFillUtils$$ = 7 < $DvtSvgShadowUtils$$.length ? "#" + $DvtSvgShadowUtils$$.substring(3) : $DvtSvgShadowUtils$$);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$_getSideWidth$ = function $$dvt$$9$$$$CSSStyle$$$$_getSideWidth$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getStyle$($DvtSvgShadowUtils$$);
    $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = this.$getStyle$($DvtSvgPatternFillUtils$$));
    return $dvt$$9$$.$CSSStyle$.$toNumber$($DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getFontSize$ = function $$dvt$$9$$$$CSSStyle$$$$getFontSize$$() {
    return this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_SIZE$)
  };
  $dvt$$9$$.$CSSStyle$.$mergeStyles$ = function $$dvt$$9$$$$CSSStyle$$$mergeStyles$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$CSSStyle$;
    if($DvtSvgShadowUtils$$) {
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgPatternFillUtils$$.$merge$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$])
      }
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$isEmpty$ = function $$dvt$$9$$$$CSSStyle$$$$isEmpty$$() {
    for(var $DvtSvgShadowUtils$$ in this.$_styleMap$) {
      return $JSCompiler_alias_FALSE$$
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$isTextAlignEnd$ = function $$dvt$$9$$$$CSSStyle$$$$isTextAlignEnd$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getStyle$($dvt$$9$$.$CSSStyle$.$TEXT_ALIGN$);
    return"end" == $DvtSvgPatternFillUtils$$ ? $JSCompiler_alias_TRUE$$ : $dvt$$9$$.$Agent$.$isRightToLeft$($DvtSvgShadowUtils$$) ? "left" == $DvtSvgPatternFillUtils$$ : "right" == $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$parseBackgroundPosition$ = function $$dvt$$9$$$$CSSStyle$$$$parseBackgroundPosition$$() {
    var $DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$9$$.$CSSStyle$.$BACKGROUND_POSITION$);
    if(!$DvtSvgShadowUtils$$) {
      return $JSCompiler_alias_NULL$$
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.split(" ");
    if(0 == $DvtSvgShadowUtils$$.length) {
      return["0%", "0%"]
    }
    var $DvtSvgPatternFillUtils$$ = ["50%", "50%"], $DvtSvgImageFillUtils$$;
    0 < $DvtSvgShadowUtils$$.length && ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$[0]), "left" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[0] = "0%" : "right" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[0] = "100%" : "top" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[1] = "0%" : "bottom" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[1] = "100%" : "center" != $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$[0] = $DvtSvgImageFillUtils$$));
    1 < $DvtSvgShadowUtils$$.length && ($DvtSvgImageFillUtils$$ = $dvt$$9$$.$StringUtils$.trim($DvtSvgShadowUtils$$[1]), "left" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[0] = "0%" : "right" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[0] = "100%" : "top" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[1] = "0%" : "bottom" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[1] = "100%" : "center" != $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$[1] = $DvtSvgImageFillUtils$$));
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$CSSStyle$.prototype.$getIconUrl$ = function $$dvt$$9$$$$CSSStyle$$$$getIconUrl$$() {
    return this.$getStyle$($dvt$$9$$.$CSSStyle$.$CONTENT$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$setIconUrl$ = function $$dvt$$9$$$$CSSStyle$$$$setIconUrl$$($DvtSvgShadowUtils$$) {
    this.$_setStyleAttr$($dvt$$9$$.$CSSStyle$.$CONTENT$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$CSSStyle$.prototype.$hashCodeForTextMeasurement$ = function $$dvt$$9$$$$CSSStyle$$$$hashCodeForTextMeasurement$$() {
    var $DvtSvgShadowUtils$$ = "";
    this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_FAMILY$) && ($DvtSvgShadowUtils$$ += this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_FAMILY$));
    this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_SIZE$) && ($DvtSvgShadowUtils$$ += this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_SIZE$));
    this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_STYLE$) && ($DvtSvgShadowUtils$$ += this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_STYLE$));
    this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_WEIGHT$) && ($DvtSvgShadowUtils$$ += this.$getStyle$($dvt$$9$$.$CSSStyle$.$FONT_WEIGHT$));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$CSSStyle$.$afterSkinAlta$ = function $$dvt$$9$$$$CSSStyle$$$afterSkinAlta$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && $DvtSvgShadowUtils$$ != $dvt$$9$$.$CSSStyle$.$SKIN_FUSION$ && $DvtSvgShadowUtils$$ != $dvt$$9$$.$CSSStyle$.$SKIN_SKYROS$
  };
  $dvt$$9$$.$BaseComponent$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$BaseComponent$, $dvt$$9$$.$Container$);
  $dvt$$9$$.$BaseComponent$.prototype.Init = function $$dvt$$9$$$$BaseComponent$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$BaseComponent$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
    this.$Options$ = this.$Defaults$ = $JSCompiler_alias_NULL$$;
    this.$Height$ = this.$Width$ = 0;
    this.$_optionsCache$ = {};
    this.$_renderCache$ = {}
  };
  $dvt$$9$$.$BaseComponent$.prototype.$GetDefaults$ = function $$dvt$$9$$$$BaseComponent$$$$GetDefaults$$() {
    return this.$Defaults$ ? this.$Defaults$.$getDefaults$($JSCompiler_alias_VOID$$) : {}
  };
  $dvt$$9$$.$BaseComponent$.prototype.$GetComponentDescription$ = function $$dvt$$9$$$$BaseComponent$$$$GetComponentDescription$$() {
    return $dvt$$9$$.$Bundle$.$getTranslation$(this.$getOptions$(), "componentName")
  };
  $dvt$$9$$.$BaseComponent$.prototype.$IsParentRoot$ = function $$dvt$$9$$$$BaseComponent$$$$IsParentRoot$$() {
    return this.getParent() == this.$getCtx$().$_stage$
  };
  $dvt$$9$$.$BaseComponent$.prototype.$UpdateAriaAttributes$ = function $$dvt$$9$$$$BaseComponent$$$$UpdateAriaAttributes$$() {
    this.$IsParentRoot$() && (this.$getCtx$().$setAriaRole$("application"), this.$getCtx$().$setAriaLabel$($dvt$$9$$.$Bundle$.$getTranslatedString$($dvt$$9$$.$Bundle$.$UTIL_PREFIX$, "COLON_SEP_LIST", [$dvt$$9$$.$Bundle$.$getTranslatedString$($dvt$$9$$.$Bundle$.$UTIL_PREFIX$, "DATA_VISUALIZATION"), $dvt$$9$$.$StringUtils$.$processAriaLabel$(this.$GetComponentDescription$())])))
  };
  $dvt$$9$$.$BaseComponent$.prototype.$SetOptions$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$BaseComponent$.prototype.$getOptions$ = function $$dvt$$9$$$$BaseComponent$$$$getOptions$$() {
    this.$Options$ || (this.$Options$ = this.$GetDefaults$());
    return this.$Options$
  };
  $dvt$$9$$.$BaseComponent$.prototype.$applyOptions$ = function $$dvt$$9$$$$BaseComponent$$$$applyOptions$$($DvtSvgShadowUtils$$) {
    this.$Options$ && $DvtSvgShadowUtils$$ && this.$SetOptions$($dvt$$9$$.$JsonUtils$.$merge$($DvtSvgShadowUtils$$, this.$Options$))
  };
  $dvt$$9$$.$BaseComponent$.prototype.$render$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$BaseComponent$.prototype.$RenderComplete$ = function $$dvt$$9$$$$BaseComponent$$$$RenderComplete$$() {
    this.dispatchEvent($dvt$$9$$.$EventFactory$.$newReadyEvent$())
  };
  $dvt$$9$$.$BaseComponent$.prototype.getWidth = $JSCompiler_get$$("$Width$");
  $dvt$$9$$.$BaseComponent$.prototype.getHeight = $JSCompiler_get$$("$Height$");
  $dvt$$9$$.$BaseComponent$.prototype.$highlight$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$BaseComponent$.prototype.select = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$BaseComponent$.prototype.dispatchEvent = function $$dvt$$9$$$$BaseComponent$$$dispatchEvent$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BaseComponent$.prototype.$getDimensionsWithStroke$ = function $$dvt$$9$$$$BaseComponent$$$$getDimensionsWithStroke$$($DvtSvgShadowUtils$$) {
    return this.$getDimensions$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$BaseComponent$.prototype.$getEventManager$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$BaseComponent$.prototype.$getKeyboardFocus$ = function $$dvt$$9$$$$BaseComponent$$$$getKeyboardFocus$$() {
    var $DvtSvgShadowUtils$$ = this.$getEventManager$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$getFocus$() ? $DvtSvgShadowUtils$$.$getFocus$().$getTargetElem$() : $JSCompiler_alias_NULL$$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$BaseComponent$.prototype.$clearRenderCache$ = function $$dvt$$9$$$$BaseComponent$$$$clearRenderCache$$() {
    this.$_renderCache$ = {}
  };
  $dvt$$9$$.$BaseComponent$.prototype.$clearOptionsCache$ = function $$dvt$$9$$$$BaseComponent$$$$clearOptionsCache$$() {
    this.$_optionsCache$ = {}
  };
  $dvt$$9$$.$BaseComponentDefaults$ = function $$dvt$$9$$$$BaseComponentDefaults$$() {
    this.Init()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$BaseComponentDefaults$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE$ = "font-size: ";
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_11$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE$ + "11px;";
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_12$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE$ + "12px;";
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_13$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE$ + "13px;";
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_14$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE$ + "14px;";
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_WEIGHT_BOLD$ = "font-weight: bold;";
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_SKYROS$ = "font-family: tahoma, sans-serif;";
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ = "font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;";
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_11$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_11$;
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_12$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_12$;
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_13$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_13$;
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_14$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_14$;
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_WEIGHT_BOLD$;
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD_11$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_11$;
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD_12$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_12$;
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD_13$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_13$;
  $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD_14$ = $dvt$$9$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ + $dvt$$9$$.$BaseComponentDefaults$.$FONT_SIZE_14$;
  $dvt$$9$$.$BaseComponentDefaults$.$_SKINS$ = [$dvt$$9$$.$CSSStyle$.$SKIN_FUSION$, $dvt$$9$$.$CSSStyle$.$SKIN_SKYROS$, $dvt$$9$$.$CSSStyle$.$SKIN_ALTA$, $dvt$$9$$.$CSSStyle$.$SKIN_NEXT$];
  $dvt$$9$$.$BaseComponentDefaults$.prototype.Init = function $$dvt$$9$$$$BaseComponentDefaults$$$Init$($DvtSvgShadowUtils$$) {
    this.$_defaults$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : {};
    this.constructor.$defaultsCache$ || (this.constructor.$defaultsCache$ = {})
  };
  $dvt$$9$$.$BaseComponentDefaults$.prototype.$getBaseSkinName$ = function $$dvt$$9$$$$BaseComponentDefaults$$$$getBaseSkinName$$() {
    return $dvt$$9$$.$CSSStyle$.$SKIN_NEXT$
  };
  $dvt$$9$$.$BaseComponentDefaults$.prototype.$calcOptions$ = function $$dvt$$9$$$$BaseComponentDefaults$$$$calcOptions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getDefaults$($DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.skin : $JSCompiler_alias_NULL$$);
    return $DvtSvgShadowUtils$$ ? $dvt$$9$$.$JsonUtils$.$merge$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, {}) : $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$BaseComponentDefaults$.prototype.$getDefaults$ = function $$dvt$$9$$$$BaseComponentDefaults$$$$getDefaults$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$getBaseSkinName$());
    if(this.constructor.$defaultsCache$[$DvtSvgShadowUtils$$]) {
      return $dvt$$9$$.$JsonUtils$.$clone$(this.constructor.$defaultsCache$[$DvtSvgShadowUtils$$])
    }
    for(var $DvtSvgPatternFillUtils$$ = Math.max($dvt$$9$$.$ArrayUtils$.$getIndex$($dvt$$9$$.$BaseComponentDefaults$.$_SKINS$, $DvtSvgShadowUtils$$), 0), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$JsonUtils$.$clone$(this.$_defaults$[$dvt$$9$$.$BaseComponentDefaults$.$_SKINS$[0]]), $DvtSvgGradientUtils$$ = 1;$DvtSvgGradientUtils$$ <= $DvtSvgPatternFillUtils$$;$DvtSvgGradientUtils$$++) {
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$JsonUtils$.$merge$(this.$_defaults$[$dvt$$9$$.$BaseComponentDefaults$.$_SKINS$[$DvtSvgGradientUtils$$]], $DvtSvgImageFillUtils$$)
    }
    this.constructor.$defaultsCache$[$DvtSvgShadowUtils$$] = $dvt$$9$$.$JsonUtils$.$clone$($DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ShowPopupBehavior$ = function $$dvt$$9$$$$ShowPopupBehavior$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_popupId$ = $DvtSvgShadowUtils$$;
    this.$_triggerType$ = $DvtSvgPatternFillUtils$$;
    this.$_alignId$ = $DvtSvgImageFillUtils$$;
    this.$_align$ = $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ShowPopupBehavior$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_ACTION$ = "action";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CLICK$ = "click";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CONTEXT_MENU$ = "contextMenu";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$ = "dblClick";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_HOVER$ = "mouseHover";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$ = "mouseOver";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_DOWN$ = "mouseDown";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_MOVE$ = "mouseMove";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_UP$ = "mouseUp";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OUT$ = "mouseOut";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_DOWN$ = "keyDown";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_UP$ = "keyUp";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_PRESS$ = "keyPress";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_FOCUS$ = "focus";
  $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_BLUR$ = "blur";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_AFTER_START$ = "afterStart";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_AFTER_END$ = "afterEnd";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_BEFORE_START$ = "beforeStart";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_BEFORE_END$ = "beforeEnd";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_END_AFTER$ = "endAfter";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_END_BEFORE$ = "endBefore";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_START_AFTER$ = "startAfter";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_START_BEFORE$ = "startBefore";
  $dvt$$9$$.$ShowPopupBehavior$.$ALIGN_OVERLAP$ = "overlap";
  $dvt$$9$$.$ShowPopupBehavior$.$createBehaviors$ = function $$dvt$$9$$$$ShowPopupBehavior$$$createBehaviors$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push($dvt$$9$$.$ShowPopupBehavior$.newInstance($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]))
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ShowPopupBehavior$.newInstance = function $$dvt$$9$$$$ShowPopupBehavior$$newInstance$($DvtSvgShadowUtils$$) {
    return new $dvt$$9$$.$ShowPopupBehavior$($DvtSvgShadowUtils$$.popupId, $DvtSvgShadowUtils$$.triggerType, $DvtSvgShadowUtils$$.alignId, $DvtSvgShadowUtils$$.align)
  };
  $dvt$$9$$.$ShowPopupBehavior$.prototype.$getPopupId$ = $JSCompiler_get$$("$_popupId$");
  $dvt$$9$$.$ShowPopupBehavior$.prototype.$getTriggerType$ = $JSCompiler_get$$("$_triggerType$");
  $dvt$$9$$.$ShowPopupBehavior$.prototype.$getAlignId$ = $JSCompiler_get$$("$_alignId$");
  $dvt$$9$$.$ShowPopupBehavior$.prototype.$getAlign$ = $JSCompiler_get$$("$_align$");
  $dvt$$9$$.$ClientBehavior$ = function $$dvt$$9$$$$ClientBehavior$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_type$ = $DvtSvgShadowUtils$$;
    this.$_triggerType$ = $DvtSvgPatternFillUtils$$;
    this.$_props$ = {}
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ClientBehavior$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ClientBehavior$.$TRIGGER_TYPE_ACTION$ = "action";
  $dvt$$9$$.$ClientBehavior$.$TRIGGER_TYPE_CLICK$ = "click";
  $dvt$$9$$.$ClientBehavior$.$TYPE_ROW_DISCLOSURE$ = "DvtRowDisclosureBehavior";
  $dvt$$9$$.$ClientBehavior$.$TYPE_DRILL$ = "DvtDrillBehavior";
  $dvt$$9$$.$ClientBehavior$.$TYPE_ISOLATE_LEVELS$ = "DvtIsolateLevelsBehavior";
  $dvt$$9$$.$ClientBehavior$.$TYPE_RESTORE$ = "DvtRestoreBehavior";
  $dvt$$9$$.$ClientBehavior$.prototype.$getType$ = $JSCompiler_get$$("$_type$");
  $dvt$$9$$.$ClientBehavior$.prototype.$getTriggerType$ = $JSCompiler_get$$("$_triggerType$");
  $dvt$$9$$.$ClientBehavior$.prototype.setProperty = function $$dvt$$9$$$$ClientBehavior$$$setProperty$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_props$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ClientBehavior$.prototype.$getProperty$ = function $$dvt$$9$$$$ClientBehavior$$$$getProperty$$($DvtSvgShadowUtils$$) {
    return this.$_props$[$DvtSvgShadowUtils$$]
  };
  $dvt$$9$$.$SimpleScrollbar$ = function $$dvt$$9$$$$SimpleScrollbar$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$9$$.$SimpleScrollbar$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
    this.$_dragTarget$ = $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SimpleScrollbar$, $dvt$$9$$.$Container$);
  $dvt$$9$$.$SimpleScrollbar$.prototype.$render$ = function $$dvt$$9$$$$SimpleScrollbar$$$$render$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_width$ = $DvtSvgPatternFillUtils$$;
    this.$_height$ = $DvtSvgImageFillUtils$$;
    this.$_globalMin$ = $DvtSvgShadowUtils$$.min;
    this.$_globalMax$ = $DvtSvgShadowUtils$$.max;
    this.$_isHoriz$ = $DvtSvgShadowUtils$$.isHorizontal;
    this.$_isReversed$ = $DvtSvgShadowUtils$$.isReversed;
    var $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Rect$(this.$getCtx$(), 0, 0, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgGradientUtils$$.$setSolidFill$($DvtSvgShadowUtils$$.backgroundColor);
    $DvtSvgGradientUtils$$.$setPixelHinting$();
    this.$addChild$($DvtSvgGradientUtils$$);
    this.$_thumb$ = new $dvt$$9$$.$Rect$(this.$getCtx$(), 0, 0, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$_thumb$.$setSolidFill$($DvtSvgShadowUtils$$.color);
    this.$_thumb$.$setPixelHinting$();
    this.$addChild$(this.$_thumb$);
    this.$_thumbMin$ = this.$_globalMin$;
    this.$_thumbMax$ = this.$_globalMax$;
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$Agent$.$isTouchDevice$() ? 8 : 4;
    $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Rect$(this.$getCtx$(), -$DvtSvgShadowUtils$$, -$DvtSvgShadowUtils$$, this.$_width$ + 2 * $DvtSvgShadowUtils$$, this.$_height$ + 2 * $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$setInvisibleFill$();
    this.$addChild$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = this.$_dragTarget$ != $JSCompiler_alias_NULL$$;
    $dvt$$9$$.$SvgDocumentUtils$.$addDragListeners$($DvtSvgShadowUtils$$ ? this.$_dragTarget$ : this, this.$_onDragStart$, this.$_onDragMove$, this.$_onDragEnd$, this, !$DvtSvgShadowUtils$$);
    !$dvt$$9$$.$Agent$.$isTouchDevice$() && !$DvtSvgShadowUtils$$ && this.$addEvtListener$($dvt$$9$$.$MouseEvent$.$CLICK$, this.$_onClick$, $JSCompiler_alias_FALSE$$, this);
    this.$_dragged$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$SimpleScrollbar$.prototype.$setViewportRange$ = function $$dvt$$9$$$$SimpleScrollbar$$$$setViewportRange$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_getCoord$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$_getCoord$($DvtSvgPatternFillUtils$$);
    this.$_isHoriz$ ? (this.$_thumb$.$setX$(Math.min($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)), this.$_thumb$.$setWidth$(Math.abs($DvtSvgGradientUtils$$ - $DvtSvgImageFillUtils$$))) : (this.$_thumb$.$setY$(Math.min($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)), this.$_thumb$.$setHeight$(Math.abs($DvtSvgGradientUtils$$ - $DvtSvgImageFillUtils$$)));
    this.$_thumbMin$ = $DvtSvgShadowUtils$$;
    this.$_thumbMax$ = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$SimpleScrollbar$.prototype.$_getCoord$ = function $$dvt$$9$$$$SimpleScrollbar$$$$_getCoord$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = ($DvtSvgShadowUtils$$ - this.$_globalMin$) / (this.$_globalMax$ - this.$_globalMin$);
    this.$_isReversed$ && ($DvtSvgShadowUtils$$ = 1 - $DvtSvgShadowUtils$$);
    return this.$_isHoriz$ ? $DvtSvgShadowUtils$$ * this.$_width$ : $DvtSvgShadowUtils$$ * this.$_height$
  };
  $dvt$$9$$.$SimpleScrollbar$.prototype.$_getValue$ = function $$dvt$$9$$$$SimpleScrollbar$$$$_getValue$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$stageToLocal$(this.$getCtx$().$pageToStageCoords$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)), $DvtSvgImageFillUtils$$ = this.$_isHoriz$ ? $DvtSvgImageFillUtils$$.x / this.$_width$ : $DvtSvgImageFillUtils$$.y / this.$_height$;
    this.$_isReversed$ && ($DvtSvgImageFillUtils$$ = 1 - $DvtSvgImageFillUtils$$);
    $DvtSvgImageFillUtils$$ = Math.min(Math.max($DvtSvgImageFillUtils$$, 0), 1);
    return this.$_globalMin$ + $DvtSvgImageFillUtils$$ * (this.$_globalMax$ - this.$_globalMin$)
  };
  $dvt$$9$$.$SimpleScrollbar$.prototype.$_onClick$ = function $$dvt$$9$$$$SimpleScrollbar$$$$_onClick$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
    if(!($DvtSvgShadowUtils$$ >= this.$_thumbMin$ && $DvtSvgShadowUtils$$ <= this.$_thumbMax$)) {
      var $DvtSvgPatternFillUtils$$ = this.$_thumbMax$ - this.$_thumbMin$;
      this.$_setViewportRange$($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$ / 2, $DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$ / 2, $dvt$$9$$.$SimpleScrollbarEvent$.$SUBTYPE_END$)
    }
  };
  $dvt$$9$$.$SimpleScrollbar$.prototype.$_onDragStart$ = function $$dvt$$9$$$$SimpleScrollbar$$$$_onDragStart$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$.touches) {
      if(1 != $DvtSvgShadowUtils$$.touches.length) {
        return $JSCompiler_alias_FALSE$$
      }
      $DvtSvgShadowUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.touches[0].pageX, $DvtSvgShadowUtils$$.touches[0].pageY)
    }else {
      $DvtSvgShadowUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY)
    }
    return this.$_dragTarget$ || $DvtSvgShadowUtils$$ >= this.$_thumbMin$ && $DvtSvgShadowUtils$$ <= this.$_thumbMax$ ? (this.$_dragged$ = $JSCompiler_alias_TRUE$$, this.$_prevVal$ = $DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$SimpleScrollbar$.prototype.$_onDragMove$ = function $$dvt$$9$$$$SimpleScrollbar$$$$_onDragMove$$($DvtSvgShadowUtils$$) {
    if(this.$_dragged$) {
      var $DvtSvgPatternFillUtils$$;
      if($DvtSvgShadowUtils$$.touches) {
        if(1 != $DvtSvgShadowUtils$$.touches.length) {
          return
        }
        $DvtSvgPatternFillUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.touches[0].pageX, $DvtSvgShadowUtils$$.touches[0].pageY)
      }else {
        $DvtSvgPatternFillUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY)
      }
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ - this.$_prevVal$;
      this.$_dragTarget$ && ($DvtSvgImageFillUtils$$ *= -1);
      this.$_setViewportRange$(this.$_thumbMin$ + $DvtSvgImageFillUtils$$, this.$_thumbMax$ + $DvtSvgImageFillUtils$$, $dvt$$9$$.$SimpleScrollbarEvent$.$SUBTYPE_MOVE$);
      this.$_prevVal$ = $DvtSvgPatternFillUtils$$;
      $DvtSvgShadowUtils$$.preventDefault()
    }
  };
  $dvt$$9$$.$SimpleScrollbar$.prototype.$_onDragEnd$ = function $$dvt$$9$$$$SimpleScrollbar$$$$_onDragEnd$$($DvtSvgShadowUtils$$) {
    this.$_dragged$ && ($DvtSvgShadowUtils$$.touches ? this.$_setViewportRange$(this.$_thumbMin$, this.$_thumbMax$, $dvt$$9$$.$SimpleScrollbarEvent$.$SUBTYPE_END$) : ($DvtSvgShadowUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY) - this.$_prevVal$, this.$_setViewportRange$(this.$_thumbMin$ + $DvtSvgShadowUtils$$, this.$_thumbMax$ + $DvtSvgShadowUtils$$, $dvt$$9$$.$SimpleScrollbarEvent$.$SUBTYPE_END$)), this.$_dragged$ = $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$SimpleScrollbar$.prototype.$_setViewportRange$ = function $$dvt$$9$$$$SimpleScrollbar$$$$_setViewportRange$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$;
    $DvtSvgShadowUtils$$ < this.$_globalMin$ && ($DvtSvgShadowUtils$$ = this.$_globalMin$, $DvtSvgPatternFillUtils$$ = this.$_globalMin$ + $DvtSvgGradientUtils$$);
    $DvtSvgPatternFillUtils$$ > this.$_globalMax$ && ($DvtSvgPatternFillUtils$$ = this.$_globalMax$, $DvtSvgShadowUtils$$ = this.$_globalMax$ - $DvtSvgGradientUtils$$);
    this.$setViewportRange$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    this.$_callback$ && ($DvtSvgShadowUtils$$ = new $dvt$$9$$.$SimpleScrollbarEvent$($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this))
  };
  $dvt$$9$$.$SimpleScrollableContainer$ = function $$dvt$$9$$$$SimpleScrollableContainer$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$9$$.$SimpleScrollableContainer$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_contentSize$ = $DvtSvgGradientUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgImageFillUtils$$;
    this.$_width$ = $DvtSvgPatternFillUtils$$;
    this.$_height$ = $DvtSvgImageFillUtils$$;
    this.$_background$ = new $dvt$$9$$.$Rect$($DvtSvgShadowUtils$$, 0, 0, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$_background$.$setInvisibleFill$();
    this.$addChild$(this.$_background$);
    this.$_container$ = new $dvt$$9$$.$Container$($DvtSvgShadowUtils$$);
    this.$addChild$(this.$_container$);
    this.$_isHorizontalScrolling$ = $DvtSvgGradientUtils$$;
    this.$_isScrollbarVisible$ = $JSCompiler_alias_FALSE$$;
    $dvt$$9$$.$Agent$.$isTouchDevice$() || this.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEWHEEL$, this.$_onMouseWheel$, $JSCompiler_alias_FALSE$$, this)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SimpleScrollableContainer$, $dvt$$9$$.$Container$);
  $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$ = 3;
  $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$ = 2;
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$getScrollingPane$ = $JSCompiler_get$$("$_container$");
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$prepareContentPane$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$prepareContentPane$$() {
    var $DvtSvgShadowUtils$$ = this.$_container$.$getDimensions$();
    this.$_contentSize$ = this.$_isHorizontalScrolling$ ? $DvtSvgShadowUtils$$.$w$ + $DvtSvgShadowUtils$$.x : $DvtSvgShadowUtils$$.$h$ + $DvtSvgShadowUtils$$.y;
    this.$hasScrollingContent$() ? (this.$_contentSize$ = this.$_isHorizontalScrolling$ ? this.$_contentSize$ + $DvtSvgShadowUtils$$.x : this.$_contentSize$ + $DvtSvgShadowUtils$$.y, this.$_maskContainer$ || ($DvtSvgShadowUtils$$ = new $dvt$$9$$.$Rectangle$(0, 0, this.$_width$, this.$_height$), this.$_fadeTop$ = new $dvt$$9$$.$Mask$(new $dvt$$9$$.$LinearGradientFill$(this.$_isHorizontalScrolling$ ? 0 : 270, ["#FFFFFF", "#FFFFFF"], [0, 1], [0, 0.1]), $DvtSvgShadowUtils$$), this.$_fadeBottom$ = new $dvt$$9$$.$Mask$(new $dvt$$9$$.$LinearGradientFill$(this.$_isHorizontalScrolling$ ? 
    180 : 90, ["#FFFFFF", "#FFFFFF"], [0, 1], [0, 0.1]), $DvtSvgShadowUtils$$), this.$_fadeTopBottom$ = new $dvt$$9$$.$Mask$(new $dvt$$9$$.$LinearGradientFill$(this.$_isHorizontalScrolling$ ? 180 : 90, ["#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"], [0, 1, 1, 0], [0, 0.1, 0.9, 1]), $DvtSvgShadowUtils$$), this.$_maskContainer$ = new $dvt$$9$$.$Container$(this.$getCtx$()), this.$addChild$(this.$_maskContainer$), $DvtSvgShadowUtils$$ = new $dvt$$9$$.$ClipPath$, $DvtSvgShadowUtils$$.$addRect$(0, 0, this.$_width$, 
    this.$_height$), this.$_container$.$setClipPath$($DvtSvgShadowUtils$$), this.$_maskContainer$.$addChild$(this.$_container$), this.$_scrollbar$ = new $dvt$$9$$.$SimpleScrollbar$(this.$getCtx$(), this.$_handleScrollbar$, this, this), this.$_scrollbarTimer$ = new $dvt$$9$$.$Timer$(this.$getCtx$(), 100, this.$_hideScrollbar$, this)), this.$_maskContainer$.$setMask$(this.$_fadeBottom$), $DvtSvgShadowUtils$$ = {color:"#9E9E9E", backgroundColor:"#F0F0F0", isHorizontal:this.$_isHorizontalScrolling$, 
    isReversed:$JSCompiler_alias_FALSE$$, min:0, max:this.$_contentSize$}, this.$_isHorizontalScrolling$ ? (this.$_scrollbar$.$render$($DvtSvgShadowUtils$$, this.$_getScrollbarWidth$(), $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$), this.$_scrollbar$.$setTranslate$($dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$, this.$_height$ - ($dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$ + $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$))) : (this.$_scrollbar$.$render$($DvtSvgShadowUtils$$, 
    $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$, this.$_getScrollbarWidth$()), this.$_scrollbar$.$setTranslate$($dvt$$9$$.$Agent$.$isRightToLeft$(this.$getCtx$()) ? $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$ : this.$_width$ - ($dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$ + $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$), $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$)), this.$_scrollbar$.$setViewportRange$(0, this.$_getAvailSize$()), $dvt$$9$$.$Agent$.$isEnvironmentTest$() || 
    this.$_scrollbar$.$setAlpha$(0), this.$addChild$(this.$_scrollbar$)) : (this.$addChild$(this.$_container$), this.removeChild(this.$_maskContainer$), this.removeChild(this.$_scrollbar$))
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$_getScrollbarWidth$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$_getScrollbarWidth$$() {
    return(this.$_isHorizontalScrolling$ ? this.$_width$ : this.$_height$) - 2 * $dvt$$9$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$_getAvailSize$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$_getAvailSize$$() {
    return this.$_isHorizontalScrolling$ ? this.$_width$ : this.$_height$
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$_hideScrollbar$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$_hideScrollbar$$() {
    this.$_isScrollbarVisible$ && (this.$_isScrollbarVisible$ = $JSCompiler_alias_FALSE$$, this.$_scrollbarTimer$.reset(), this.$_fadeOutAnim$ = new $dvt$$9$$.$AnimFadeOut$(this.$getCtx$(), this.$_scrollbar$, 0.2), this.$_fadeOutAnim$.play())
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$_showScrollbar$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$_showScrollbar$$() {
    this.$_isScrollbarVisible$ ? this.$_scrollbarTimer$.reset() : (this.$_fadeOutAnim$ && (this.$_fadeOutAnim$.stop($JSCompiler_alias_TRUE$$), this.$_fadeOutAnim$ = $JSCompiler_alias_NULL$$), this.$_scrollbar$.$setAlpha$(1), this.$_isScrollbarVisible$ = $JSCompiler_alias_TRUE$$);
    this.$_scrollbarTimer$.start()
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$_updateFade$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$_updateFade$$($DvtSvgShadowUtils$$) {
    0 == $DvtSvgShadowUtils$$ ? this.$_maskContainer$.$setMask$(this.$_fadeBottom$) : $DvtSvgShadowUtils$$ + this.$_getAvailSize$() >= this.$_contentSize$ ? this.$_maskContainer$.$setMask$(this.$_fadeTop$) : this.$_maskContainer$.$setMask$(this.$_fadeTopBottom$)
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$_onMouseWheel$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$_onMouseWheel$$($DvtSvgShadowUtils$$) {
    if(this.$hasScrollingContent$()) {
      this.$_showScrollbar$();
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.wheelDelta != $JSCompiler_alias_NULL$$ ? $DvtSvgShadowUtils$$.wheelDelta : 0;
      $dvt$$9$$.$Agent$.$isPlatformGecko$() && ($DvtSvgPatternFillUtils$$ *= -1);
      var $DvtSvgPatternFillUtils$$ = -1 * (this.$_isHorizontalScrolling$ ? this.$_container$.$getTranslateX$() : this.$_container$.$getTranslateY$()) - 4 * $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = Math.max(this.$_contentSize$ - this.$_getAvailSize$(), 0), $DvtSvgPatternFillUtils$$ = Math.max(Math.min($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), 0);
      this.$_isHorizontalScrolling$ ? (this.$_container$.$setTranslateX$(-1 * $DvtSvgPatternFillUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgPatternFillUtils$$ + this.$_width$, $DvtSvgPatternFillUtils$$)) : (this.$_container$.$setTranslateY$(-1 * $DvtSvgPatternFillUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$ + this.$_height$));
      this.$_updateFade$($DvtSvgPatternFillUtils$$);
      $DvtSvgShadowUtils$$.preventDefault()
    }
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$_handleScrollbar$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$_handleScrollbar$$($DvtSvgShadowUtils$$) {
    this.$_showScrollbar$();
    this.$_isHorizontalScrolling$ ? this.$_container$.$setTranslateX$(-1 * $DvtSvgShadowUtils$$.$_newMin$) : this.$_container$.$setTranslateY$(-1 * $DvtSvgShadowUtils$$.$_newMin$);
    this.$_updateFade$($DvtSvgShadowUtils$$.$_newMin$)
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.getWidth = $JSCompiler_get$$("$_width$");
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.getHeight = $JSCompiler_get$$("$_height$");
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.scrollIntoView = function $$dvt$$9$$$$SimpleScrollableContainer$$$scrollIntoView$($DvtSvgShadowUtils$$) {
    if(this.$hasScrollingContent$()) {
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$($DvtSvgShadowUtils$$.getParent());
      var $DvtSvgPatternFillUtils$$ = this.$_container$.$getDimensions$(), $DvtSvgImageFillUtils$$;
      if(this.$_isHorizontalScrolling$) {
        var $DvtSvgGradientUtils$$ = -1 * this.$_container$.$getTranslateX$(), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.x - $DvtSvgPatternFillUtils$$.x;
        $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ - this.$_width$ + $DvtSvgPatternFillUtils$$.x;
        $DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$ ? (this.$_container$.$setTranslateX$(-1 * $DvtSvgShadowUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgShadowUtils$$ + this.$_width$, $DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$) : $DvtSvgGradientUtils$$ > $DvtSvgFilterUtils$$ && (this.$_container$.$setTranslateX$(-1 * $DvtSvgFilterUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgFilterUtils$$ + this.$_width$, $DvtSvgFilterUtils$$), $DvtSvgImageFillUtils$$ = 
        $DvtSvgFilterUtils$$)
      }else {
        $DvtSvgGradientUtils$$ = -1 * this.$_container$.$getTranslateY$(), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.y - $DvtSvgPatternFillUtils$$.y, $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ - this.$_height$ + $DvtSvgPatternFillUtils$$.y, $DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$ ? (this.$_container$.$setTranslateY$(-1 * $DvtSvgShadowUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$ + this.$_height$), $DvtSvgImageFillUtils$$ = 
        $DvtSvgShadowUtils$$) : $DvtSvgGradientUtils$$ > $DvtSvgFilterUtils$$ && (this.$_container$.$setTranslateY$(-1 * $DvtSvgFilterUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$ + this.$_height$), $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$)
      }
      $DvtSvgImageFillUtils$$ != $JSCompiler_alias_VOID$$ && this.$_updateFade$($DvtSvgImageFillUtils$$)
    }
  };
  $dvt$$9$$.$SimpleScrollableContainer$.prototype.$hasScrollingContent$ = function $$dvt$$9$$$$SimpleScrollableContainer$$$$hasScrollingContent$$() {
    return this.$_contentSize$ > this.$_getAvailSize$()
  };
  $dvt$$9$$.$DragRecognizer$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$DragRecognizer$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$DragSource$ = function $$dvt$$9$$$$DragSource$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$DragSource$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$ = 2;
  $dvt$$9$$.$DragSource$.prototype.Init = function $$dvt$$9$$$$DragSource$$$Init$($DvtSvgShadowUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_dragCoords$ = this.$_dragObj$ = this.$_dragCandidate$ = $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$DragSource$.prototype.$setDragCandidate$ = function $$dvt$$9$$$$DragSource$$$$setDragCandidate$$($DvtSvgShadowUtils$$) {
    this.$_dragCandidate$ = $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isDragAvailable$ && $DvtSvgShadowUtils$$.$getDragTransferable$ ? $DvtSvgShadowUtils$$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$DragSource$.prototype.$isDragAvailable$ = function $$dvt$$9$$$$DragSource$$$$isDragAvailable$$($DvtSvgShadowUtils$$) {
    return this.$_dragCandidate$ != $JSCompiler_alias_NULL$$ ? this.$_dragCandidate$.$isDragAvailable$($DvtSvgShadowUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$DragSource$.prototype.$getDragTransferable$ = function $$dvt$$9$$$$DragSource$$$$getDragTransferable$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_dragCandidate$ ? (this.$_dragObj$ = this.$_dragCandidate$, this.$_dragCoords$ = {x:$DvtSvgShadowUtils$$, y:$DvtSvgPatternFillUtils$$}, this.$_dragCandidate$.$getDragTransferable$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$DragSource$.prototype.$getDragOverFeedback$ = function $$dvt$$9$$$$DragSource$$$$getDragOverFeedback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$.$getTooltipManager$().$hideTooltip$();
    var $DvtSvgImageFillUtils$$ = this.$_dragObj$;
    return $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.$getDragFeedback$ ? $DvtSvgImageFillUtils$$.$getDragFeedback$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$DragSource$.prototype.$getDragContext$ = function $$dvt$$9$$$$DragSource$$$$getDragContext$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_dragObj$ && this.$_dragObj$.$getDragContext$ ? this.$_dragObj$.$getDragContext$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$DragSource$.prototype.$getDragOffset$ = function $$dvt$$9$$$$DragSource$$$$getDragOffset$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$ = this.$getDragOverFeedback$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    if($DvtSvgGradientUtils$$) {
      var $DvtSvgFilterUtils$$ = $dvt$$9$$.$DragAndDropUtils$.$getDragFeedbackBounds$($DvtSvgGradientUtils$$, this.$_context$.$_stage$), $DvtSvgFilterContext$$ = this.$_dragObj$;
      $DvtSvgFilterContext$$ && $DvtSvgFilterContext$$.$afterDragOverFeedback$ && $DvtSvgFilterContext$$.$afterDragOverFeedback$($DvtSvgGradientUtils$$);
      $DvtSvgFilterUtils$$ && ($DvtSvgImageFillUtils$$ = {}, $DvtSvgImageFillUtils$$.x = $DvtSvgShadowUtils$$ - $DvtSvgFilterUtils$$.x, $DvtSvgImageFillUtils$$.y = $DvtSvgPatternFillUtils$$ - $DvtSvgFilterUtils$$.y, $DvtSvgImageFillUtils$$.x += $dvt$$9$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$, $DvtSvgImageFillUtils$$.y += $dvt$$9$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$)
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$DragSource$.prototype.$getPointerOffset$ = function $$dvt$$9$$$$DragSource$$$$getPointerOffset$$() {
    return{x:0, y:0}
  };
  $dvt$$9$$.$DragSource$.prototype.$initiateDrag$ = function $$dvt$$9$$$$DragSource$$$$initiateDrag$$() {
    var $DvtSvgShadowUtils$$ = this.$getTouchManager$();
    $dvt$$9$$.$Agent$.$isTouchDevice$() && $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$cancelTouchHold$()
  };
  $dvt$$9$$.$DragSource$.prototype.$dragDropEnd$ = function $$dvt$$9$$$$DragSource$$$$dragDropEnd$$() {
    this.$_dragCoords$ = this.$_dragObj$ = this.$_dragCandidate$ = $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$DragSource$.prototype.$setTouchManager$ = $JSCompiler_set$$("$_touchManager$");
  $dvt$$9$$.$DragSource$.prototype.$getTouchManager$ = $JSCompiler_get$$("$_touchManager$");
  $dvt$$9$$.$DropTarget$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$DropTarget$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$DropTarget$.prototype.$acceptDrag$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$DropTarget$.prototype.$getDropSite$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$Button$ = function $$dvt$$9$$$$Button$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Button$, $dvt$$9$$.$Container$);
  $dvt$$9$$.$Button$.$STATE_ENABLED$ = 0;
  $dvt$$9$$.$Button$.$STATE_OVER$ = 1;
  $dvt$$9$$.$Button$.$STATE_DOWN$ = 2;
  $dvt$$9$$.$Button$.$STATE_DISABLED$ = 3;
  $dvt$$9$$.$Button$.$NO_EVENT_LISTENERS$ = $JSCompiler_alias_TRUE$$;
  $dvt$$9$$.$Button$.prototype.Init = function $$dvt$$9$$$$Button$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    $dvt$$9$$.$Button$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgFilterContext$$);
    this.$setCallback$($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$);
    this.$_bDuringInit$ = $JSCompiler_alias_TRUE$$;
    this.$setUpState$($DvtSvgPatternFillUtils$$);
    this.$setOverState$($DvtSvgImageFillUtils$$);
    this.$setDownState$($DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ && this.$setDisabledState$($DvtSvgFilterUtils$$);
    this.$setEnabled$($JSCompiler_alias_TRUE$$);
    this.$drawUpState$();
    this.$_tooltip$ = $JSCompiler_alias_NULL$$;
    this.$_bDuringInit$ = this.$_bToggled$ = this.$_bToggleEnabled$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Button$.prototype.isEnabled = $JSCompiler_get$$("$_enabled$");
  $dvt$$9$$.$Button$.prototype.$setEnabled$ = function $$dvt$$9$$$$Button$$$$setEnabled$$($DvtSvgShadowUtils$$) {
    if(this.$_enabled$ != $DvtSvgShadowUtils$$) {
      this.$_enabled$ = $DvtSvgShadowUtils$$;
      var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Agent$.$isTouchDevice$() ? $dvt$$9$$.$TouchEvent$.$TOUCHSTART$ : $dvt$$9$$.$MouseEvent$.$CLICK$;
      $DvtSvgShadowUtils$$ ? (this.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOVER$, this.$OnMouseOver$, $JSCompiler_alias_FALSE$$, this), this.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOUT$, this.$OnMouseOut$, $JSCompiler_alias_FALSE$$, this), this.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEDOWN$, this.$OnMouseDown$, $JSCompiler_alias_FALSE$$, this), this.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEUP$, this.$OnMouseUp$, $JSCompiler_alias_FALSE$$, this), this.$addEvtListener$($DvtSvgPatternFillUtils$$, 
      this.$OnClick$, $JSCompiler_alias_FALSE$$, this), this.setCursor("pointer")) : (this.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOVER$, this.$OnMouseOver$, $JSCompiler_alias_FALSE$$, this), this.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOUT$, this.$OnMouseOut$, $JSCompiler_alias_FALSE$$, this), this.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEDOWN$, this.$OnMouseDown$, $JSCompiler_alias_FALSE$$, this), this.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEUP$, this.$OnMouseUp$, 
      $JSCompiler_alias_FALSE$$, this), this.$removeEvtListener$($DvtSvgPatternFillUtils$$, this.$OnClick$, $JSCompiler_alias_FALSE$$, this), this.setCursor($JSCompiler_alias_NULL$$));
      this.$initState$()
    }
  };
  $dvt$$9$$.$Button$.prototype.$OnMouseOver$ = function $$dvt$$9$$$$Button$$$$OnMouseOver$$() {
    this.$_bToggled$ ? this.$drawOverDownState$() : this.$drawOverState$()
  };
  $dvt$$9$$.$Button$.prototype.$OnMouseOut$ = function $$dvt$$9$$$$Button$$$$OnMouseOut$$() {
    this.$_bToggled$ ? this.$drawDownState$() : this.$drawUpState$()
  };
  $dvt$$9$$.$Button$.prototype.$OnMouseDown$ = function $$dvt$$9$$$$Button$$$$OnMouseDown$$() {
    this.$drawDownState$()
  };
  $dvt$$9$$.$Button$.prototype.$OnMouseUp$ = function $$dvt$$9$$$$Button$$$$OnMouseUp$$() {
    this.$_bToggled$ ? $dvt$$9$$.$Agent$.$isTouchDevice$() ? this.$drawDownState$() : this.$drawOverDownState$() : $dvt$$9$$.$Agent$.$isTouchDevice$() ? this.$drawUpState$() : this.$drawOverState$()
  };
  $dvt$$9$$.$Button$.prototype.$OnClick$ = function $$dvt$$9$$$$Button$$$$OnClick$$($DvtSvgShadowUtils$$) {
    this.$_bToggleEnabled$ && ((this.$_bToggled$ = !this.$_bToggled$) ? $dvt$$9$$.$Agent$.$isTouchDevice$() ? this.$drawDownState$() : this.$drawOverDownState$() : $dvt$$9$$.$Agent$.$isTouchDevice$() ? this.$drawUpState$() : this.$drawOverState$());
    this.$_callback$ && (this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this), $DvtSvgShadowUtils$$.stopPropagation(), $DvtSvgShadowUtils$$.preventDefault())
  };
  $dvt$$9$$.$Button$.prototype.$drawUpState$ = function $$dvt$$9$$$$Button$$$$drawUpState$$() {
    this.$_enableButton$(this.$upState$, $JSCompiler_alias_TRUE$$);
    this.$_enableButton$(this.$downState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$overState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$disabledState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$overDownState$, $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$Button$.prototype.$drawOverState$ = function $$dvt$$9$$$$Button$$$$drawOverState$$() {
    this.$_enableButton$(this.$upState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$downState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$overState$, $JSCompiler_alias_TRUE$$);
    this.$_enableButton$(this.$disabledState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$overDownState$, $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$Button$.prototype.$drawDownState$ = function $$dvt$$9$$$$Button$$$$drawDownState$$() {
    this.$_enableButton$(this.$upState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$downState$, $JSCompiler_alias_TRUE$$);
    this.$_enableButton$(this.$overState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$disabledState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$overDownState$, $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$Button$.prototype.$drawDisabledState$ = function $$dvt$$9$$$$Button$$$$drawDisabledState$$() {
    this.$_enableButton$(this.$upState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$overState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$downState$, $JSCompiler_alias_FALSE$$);
    this.$_enableButton$(this.$disabledState$, $JSCompiler_alias_TRUE$$);
    this.$_enableButton$(this.$overDownState$, $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$Button$.prototype.$drawOverDownState$ = function $$dvt$$9$$$$Button$$$$drawOverDownState$$() {
    this.$overDownState$ ? (this.$_enableButton$(this.$upState$, $JSCompiler_alias_FALSE$$), this.$_enableButton$(this.$overState$, $JSCompiler_alias_FALSE$$), this.$_enableButton$(this.$downState$, $JSCompiler_alias_FALSE$$), this.$_enableButton$(this.$disabledState$, $JSCompiler_alias_FALSE$$), this.$_enableButton$(this.$overDownState$, $JSCompiler_alias_TRUE$$)) : this.$drawDownState$()
  };
  $dvt$$9$$.$Button$.prototype.$_enableButton$ = function $$dvt$$9$$$$Button$$$$_enableButton$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$setAlpha$($DvtSvgPatternFillUtils$$ ? 1 : 0)
  };
  $dvt$$9$$.$Button$.prototype.$setUpState$ = function $$dvt$$9$$$$Button$$$$setUpState$$($DvtSvgShadowUtils$$) {
    if(!this.$upState$ || this.$upState$ != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_FALSE$$;
      if(this.$upState$) {
        $DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$upState$), this.removeChild(this.$upState$)
      }else {
        if(!this.$_bDuringInit$) {
          var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$, $DvtSvgGradientUtils$$ = $JSCompiler_alias_FALSE$$, $DvtSvgFilterUtils$$ = $JSCompiler_alias_FALSE$$;
          this.$downState$ && ($DvtSvgImageFillUtils$$ = this.$_isButtonEnabled$(this.$downState$));
          this.$overState$ && ($DvtSvgGradientUtils$$ = this.$_isButtonEnabled$(this.$overState$));
          this.$disabledState$ && ($DvtSvgFilterUtils$$ = this.$_isButtonEnabled$(this.$disabledState$));
          !$DvtSvgImageFillUtils$$ && (!$DvtSvgGradientUtils$$ && !$DvtSvgFilterUtils$$) && ($DvtSvgPatternFillUtils$$ = $JSCompiler_alias_TRUE$$)
        }
      }
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$upState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$upState$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Button$.prototype.$setDownState$ = function $$dvt$$9$$$$Button$$$$setDownState$$($DvtSvgShadowUtils$$) {
    if(!this.$downState$ || this.$downState$ != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_FALSE$$;
      this.$downState$ && ($DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$downState$), this.removeChild(this.$downState$));
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$downState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$downState$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Button$.prototype.$setOverState$ = function $$dvt$$9$$$$Button$$$$setOverState$$($DvtSvgShadowUtils$$) {
    if(!this.$overState$ || this.$overState$ != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_FALSE$$;
      this.$overState$ && ($DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$overState$), this.removeChild(this.$overState$));
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$overState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$overState$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Button$.prototype.$setDisabledState$ = function $$dvt$$9$$$$Button$$$$setDisabledState$$($DvtSvgShadowUtils$$) {
    if(!this.$disabledState$ || this.$disabledState$ == $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_FALSE$$;
      this.$disabledState$ && ($DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$disabledState$), this.removeChild(this.$disabledState$));
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$disabledState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$disabledState$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Button$.prototype.$setOverDownState$ = function $$dvt$$9$$$$Button$$$$setOverDownState$$($DvtSvgShadowUtils$$) {
    if(!this.$overDownState$ || this.$overDownState$ == $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_FALSE$$;
      this.$overDownState$ && ($DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$overDownState$), this.removeChild(this.$overDownState$));
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$overDownState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$overDownState$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Button$.prototype.$setCallback$ = function $$dvt$$9$$$$Button$$$$setCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_callback$ = $DvtSvgShadowUtils$$;
    this.$_callbackObj$ = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Button$.prototype.$setTooltip$ = function $$dvt$$9$$$$Button$$$$setTooltip$$($DvtSvgShadowUtils$$) {
    if(this.$_tooltip$ = $DvtSvgShadowUtils$$) {
      this.$setAriaRole$("button"), this.$setAriaProperty$("label", $DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$Button$.prototype.$getTooltip$ = $JSCompiler_get$$("$_tooltip$");
  $dvt$$9$$.$Button$.prototype.$isClickEventPropagationStopped$ = $JSCompiler_returnArg$$($JSCompiler_alias_TRUE$$);
  $dvt$$9$$.$Button$.prototype.$initState$ = function $$dvt$$9$$$$Button$$$$initState$$() {
    this.isEnabled() ? this.$drawUpState$() : this.$drawDisabledState$()
  };
  $dvt$$9$$.$Button$.prototype.$setSize$ = function $$dvt$$9$$$$Button$$$$setSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$upState$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$.$setWidth$ && $DvtSvgShadowUtils$$ && $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.$setHeight$ && $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setHeight$($DvtSvgPatternFillUtils$$));
    if($DvtSvgImageFillUtils$$ = this.$downState$) {
      $DvtSvgImageFillUtils$$.$setWidth$ && $DvtSvgShadowUtils$$ && $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.$setHeight$ && $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setHeight$($DvtSvgPatternFillUtils$$)
    }
    if($DvtSvgImageFillUtils$$ = this.$overState$) {
      $DvtSvgImageFillUtils$$.$setWidth$ && $DvtSvgShadowUtils$$ && $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.$setHeight$ && $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setHeight$($DvtSvgPatternFillUtils$$)
    }
    if($DvtSvgImageFillUtils$$ = this.$disabledState$) {
      $DvtSvgImageFillUtils$$.$setWidth$ && $DvtSvgShadowUtils$$ && $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.$setHeight$ && $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setHeight$($DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Button$.prototype.$rightAlign$ = function $$dvt$$9$$$$Button$$$$rightAlign$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$;
    var $DvtSvgGradientUtils$$ = this.$upState$;
    $DvtSvgGradientUtils$$ && $DvtSvgShadowUtils$$ && ($DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$) : this.$_setChildX$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$));
    ($DvtSvgGradientUtils$$ = this.$downState$) && $DvtSvgShadowUtils$$ && ($DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$) : this.$_setChildX$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$));
    ($DvtSvgGradientUtils$$ = this.$overState$) && $DvtSvgShadowUtils$$ && ($DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$) : this.$_setChildX$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$));
    ($DvtSvgShadowUtils$$ = this.$disabledState$) && ($DvtSvgImageFillUtils$$ ? $DvtSvgShadowUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$) : this.$_setChildX$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$))
  };
  $dvt$$9$$.$Button$.prototype.$_setChildX$ = function $$dvt$$9$$$$Button$$$$_setChildX$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.$getNumChildren$();$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getChildAt$($DvtSvgImageFillUtils$$);
      $DvtSvgGradientUtils$$ instanceof $dvt$$9$$.$Displayable$ && $DvtSvgGradientUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Button$.prototype.$setToggleEnabled$ = function $$dvt$$9$$$$Button$$$$setToggleEnabled$$() {
    this.$_bToggleEnabled$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$Button$.prototype.$setToggled$ = function $$dvt$$9$$$$Button$$$$setToggled$$($DvtSvgShadowUtils$$) {
    this.$_bToggleEnabled$ && ((this.$_bToggled$ = $DvtSvgShadowUtils$$) ? this.$drawDownState$() : this.$drawUpState$())
  };
  $dvt$$9$$.$Button$.prototype.$_isButtonEnabled$ = function $$dvt$$9$$$$Button$$$$_isButtonEnabled$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_FALSE$$;
    $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = 0 < $DvtSvgShadowUtils$$.$getAlpha$() ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$);
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Button$.prototype.$showKeyboardFocusEffect$ = function $$dvt$$9$$$$Button$$$$showKeyboardFocusEffect$$() {
    this.$_keyboardFocusEffect$ || (this.$_keyboardFocusEffect$ = this.$CreateKeyboardFocusEffect$());
    this.$_keyboardFocusEffect$.show();
    this.$_isShowingKeyboardFocusEffect$ = $JSCompiler_alias_TRUE$$;
    this.$getCtx$().$setActiveElement$(this)
  };
  $dvt$$9$$.$Button$.prototype.$hideKeyboardFocusEffect$ = function $$dvt$$9$$$$Button$$$$hideKeyboardFocusEffect$$() {
    this.$_keyboardFocusEffect$ && this.$_keyboardFocusEffect$.$hide$();
    this.$_isShowingKeyboardFocusEffect$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Button$.prototype.$isShowingKeyboardFocusEffect$ = $JSCompiler_get$$("$_isShowingKeyboardFocusEffect$");
  $dvt$$9$$.$Button$.prototype.$CreateKeyboardFocusEffect$ = function $$dvt$$9$$$$Button$$$$CreateKeyboardFocusEffect$$() {
    return new $dvt$$9$$.$KeyboardFocusEffect$(this.$getCtx$(), this, this.$getDimensions$(), $JSCompiler_alias_NULL$$, $JSCompiler_alias_NULL$$, $JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$Button$.prototype.$handleKeyboardEvent$ = function $$dvt$$9$$$$Button$$$$handleKeyboardEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    if(($DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$ENTER$ || $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$SPACE$) && this.$_callback$) {
      this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this), $DvtSvgShadowUtils$$.stopPropagation(), $DvtSvgShadowUtils$$.preventDefault()
    }
  };
  $dvt$$9$$.$TransientButton$ = function $$dvt$$9$$$$TransientButton$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$TransientButton$, $dvt$$9$$.$Button$);
  $dvt$$9$$.$TransientButton$.$_DEFAULT_RADIUS$ = 16;
  $dvt$$9$$.$TransientButton$.$_DEFAULT_FILL_COLOR$ = "#ffffff";
  $dvt$$9$$.$TransientButton$.$_DEFAULT_BORDER_COLOR$ = "#d6d7d8";
  $dvt$$9$$.$TransientButton$.prototype.Init = function $$dvt$$9$$$$TransientButton$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $dvt$$9$$.$TransientButton$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgImplFactory$$, $DvtSvgFilterContext$$);
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$_stage$;
    $DvtSvgShadowUtils$$.$addEvtListener$($DvtFocusEvent$$.$FOCUS$, this.$_onFocus$, $JSCompiler_alias_TRUE$$, this);
    $DvtSvgShadowUtils$$.$addEvtListener$($DvtFocusEvent$$.$BLUR$, this.$_onBlur$, $JSCompiler_alias_TRUE$$, this);
    $dvt$$9$$.$Agent$.$isTouchDevice$() || ($dvt$$9$$.$Agent$.$isPlatformIE$() ? ($DvtSvgShadowUtils$$.$addEvtListener$("mouseenter", this.$_onMouseOver$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$("mouseleave", this.$_onMouseOut$, $JSCompiler_alias_FALSE$$, this)) : ($DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOVER$, this.$_onMouseOver$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOUT$, this.$_onMouseOut$, 
    $JSCompiler_alias_FALSE$$, this)))
  };
  $dvt$$9$$.$TransientButton$.$getStateFromURL$ = function $$dvt$$9$$$$TransientButton$$$getStateFromURL$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$TransientButton$.$_DEFAULT_RADIUS$, $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ / 2, $DvtSvgFilterUtils$$ = new $dvt$$9$$.$Circle$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$.$setSolidFill$($dvt$$9$$.$TransientButton$.$_DEFAULT_FILL_COLOR$);
    $DvtSvgFilterUtils$$.$setSolidStroke$($dvt$$9$$.$TransientButton$.$_DEFAULT_BORDER_COLOR$);
    $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Image$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$.$addChild$($DvtSvgImageFillUtils$$);
    return $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$TransientButton$.prototype.show = function $$dvt$$9$$$$TransientButton$$$show$() {
    this.$setAlpha$(1)
  };
  $dvt$$9$$.$TransientButton$.prototype.$hide$ = function $$dvt$$9$$$$TransientButton$$$$hide$$() {
    this.$setAlpha$(0)
  };
  $dvt$$9$$.$TransientButton$.prototype.$_onFocus$ = function $$dvt$$9$$$$TransientButton$$$$_onFocus$$() {
    this.$_isFocused$ = $JSCompiler_alias_TRUE$$;
    this.show()
  };
  $dvt$$9$$.$TransientButton$.prototype.$_onBlur$ = function $$dvt$$9$$$$TransientButton$$$$_onBlur$$() {
    this.$_isFocused$ = $JSCompiler_alias_FALSE$$;
    this.$_isMouseOver$ || this.$hide$()
  };
  $dvt$$9$$.$TransientButton$.prototype.$_onMouseOver$ = function $$dvt$$9$$$$TransientButton$$$$_onMouseOver$$() {
    this.$_mouseOutTimer$ && this.$_mouseOutTimer$.$isRunning$() && this.$_mouseOutTimer$.stop();
    this.$_isMouseOver$ = $JSCompiler_alias_TRUE$$;
    this.show()
  };
  $dvt$$9$$.$TransientButton$.prototype.$_onMouseOut$ = function $$dvt$$9$$$$TransientButton$$$$_onMouseOut$$() {
    this.$_mouseOutTimer$ || (this.$_mouseOutTimer$ = new $dvt$$9$$.$Timer$(this.$getCtx$(), 10, this.$_onMouseOutTimerEnd$, this, 1));
    this.$_mouseOutTimer$.reset();
    this.$_mouseOutTimer$.start()
  };
  $dvt$$9$$.$TransientButton$.prototype.$_onMouseOutTimerEnd$ = function $$dvt$$9$$$$TransientButton$$$$_onMouseOutTimerEnd$$() {
    this.$_isMouseOver$ = $JSCompiler_alias_FALSE$$;
    this.$_isFocused$ || this.$hide$()
  };
  $dvt$$9$$.$TransientButton$.prototype.$OnMouseDown$ = function $$dvt$$9$$$$TransientButton$$$$OnMouseDown$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$TransientButton$.$superclass$.$OnMouseDown$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.stopPropagation()
  };
  $dvt$$9$$.$TransientButton$.prototype.$OnMouseUp$ = function $$dvt$$9$$$$TransientButton$$$$OnMouseUp$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$TransientButton$.$superclass$.$OnMouseUp$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.stopPropagation()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtLogicalObject$$, $dvt$$9$$.$Obj$);
  $DvtLogicalObject$$.prototype.$getDisplayables$ = $JSCompiler_emptyFn$$();
  $DvtLogicalObject$$.prototype.$getAriaLabel$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($DvtTooltipSource$$, $dvt$$9$$.$Obj$);
  $DvtTooltipSource$$.prototype.$getTooltip$ = $JSCompiler_emptyFn$$();
  $DvtTooltipSource$$.prototype.$getDatatip$ = $JSCompiler_emptyFn$$();
  $DvtTooltipSource$$.prototype.$getDatatipColor$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSelectable$$, $dvt$$9$$.$Obj$);
  $DvtSelectable$$.prototype.$isSelectable$ = $JSCompiler_emptyFn$$();
  $DvtSelectable$$.prototype.$isSelected$ = $JSCompiler_emptyFn$$();
  $DvtSelectable$$.prototype.$setSelected$ = $JSCompiler_emptyFn$$();
  $DvtSelectable$$.prototype.$showHoverEffect$ = $JSCompiler_emptyFn$$();
  $DvtSelectable$$.prototype.$hideHoverEffect$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($DvtKeyboardNavigable$$, $dvt$$9$$.$Obj$);
  $DvtKeyboardNavigable$$.prototype.$getNextNavigable$ = $JSCompiler_emptyFn$$();
  $DvtKeyboardNavigable$$.prototype.$getTargetElem$ = $JSCompiler_emptyFn$$();
  $DvtKeyboardNavigable$$.prototype.$getKeyboardBoundingBox$ = $JSCompiler_emptyFn$$();
  $DvtKeyboardNavigable$$.prototype.$showKeyboardFocusEffect$ = $JSCompiler_emptyFn$$();
  $DvtKeyboardNavigable$$.prototype.$hideKeyboardFocusEffect$ = $JSCompiler_emptyFn$$();
  $DvtKeyboardNavigable$$.prototype.$isShowingKeyboardFocusEffect$ = $JSCompiler_emptyFn$$();
  $DvtKeyboardNavigable$$.prototype.$getContextMenuLocation$ = $JSCompiler_emptyFn$$();
  $DvtKeyboardNavigable$$.prototype.$getKeyboardTooltipLocation$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCategoricalObject$$, $dvt$$9$$.$Obj$);
  $DvtCategoricalObject$$.prototype.$getCategories$ = $JSCompiler_emptyFn$$();
  $DvtCategoricalObject$$.prototype.$highlight$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($DvtContextMenuSource$$, $dvt$$9$$.$Obj$);
  $DvtContextMenuSource$$.prototype.$getContextMenuLocation$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($DvtPopupSource$$, $dvt$$9$$.$Obj$);
  $DvtPopupSource$$.prototype.getId = $JSCompiler_emptyFn$$();
  $DvtPopupSource$$.prototype.$getShowPopupBehaviors$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Automation$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Automation$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Automation$.$TOOLTIP_SUBID$ = "tooltip";
  $dvt$$9$$.$Automation$.prototype.$getSubIdForDomElement$ = function $$dvt$$9$$$$Automation$$$$getSubIdForDomElement$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Automation$.$_findDisplayable$($DvtSvgShadowUtils$$);
    return $DvtSvgPatternFillUtils$$ && !($DvtSvgPatternFillUtils$$ instanceof Array) ? this.$GetSubIdForDomElement$($DvtSvgPatternFillUtils$$) : $DvtSvgShadowUtils$$ && this.$IsTooltipElement$($DvtSvgShadowUtils$$) ? $dvt$$9$$.$Automation$.$TOOLTIP_SUBID$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Automation$.prototype.$GetSubIdForDomElement$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$Automation$.prototype.$getDomElementForSubId$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$Automation$.$_findDisplayable$ = function $$dvt$$9$$$$Automation$$$_findDisplayable$$($DvtSvgShadowUtils$$) {
    for(;$DvtSvgShadowUtils$$;) {
      if($DvtSvgShadowUtils$$.$_obj$) {
        return $DvtSvgShadowUtils$$.$_obj$
      }
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentNode
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Automation$.prototype.$GetTooltipElement$ = function $$dvt$$9$$$$Automation$$$$GetTooltipElement$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getCtx$().$getTooltipManager$($DvtSvgPatternFillUtils$$).$getTooltipElem$();
      return"hidden" == $DvtSvgImageFillUtils$$.style.visibility ? $JSCompiler_alias_NULL$$ : $DvtSvgImageFillUtils$$
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Automation$.prototype.$IsTooltipElement$ = function $$dvt$$9$$$$Automation$$$$IsTooltipElement$$($DvtSvgShadowUtils$$) {
    return($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getAttribute("id")) && 0 == $DvtSvgShadowUtils$$.indexOf($dvt$$9$$.$HtmlTooltipManager$.$_TOOLTIP_DIV_ID$) ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$CustomDatatipPeer$ = function $$dvt$$9$$$$CustomDatatipPeer$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CustomDatatipPeer$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$CustomDatatipPeer$.prototype.Init = function $$dvt$$9$$$$CustomDatatipPeer$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_tooltipManager$ = $DvtSvgShadowUtils$$;
    this.$_tooltipFunction$ = $DvtSvgPatternFillUtils$$;
    this.$_datatipColor$ = $DvtSvgImageFillUtils$$;
    this.$_dataContext$ = $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$CustomDatatipPeer$.prototype.$getDatatip$ = function $$dvt$$9$$$$CustomDatatipPeer$$$$getDatatip$$() {
    return this.$_tooltipManager$.$getCustomTooltip$(this.$_tooltipFunction$, this.$_dataContext$)
  };
  $dvt$$9$$.$CustomDatatipPeer$.prototype.$getDatatipColor$ = $JSCompiler_get$$("$_datatipColor$");
  $dvt$$9$$.$SimpleObjPeer$ = function $$dvt$$9$$$$SimpleObjPeer$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SimpleObjPeer$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$SimpleObjPeer$.prototype.Init = function $$dvt$$9$$$$SimpleObjPeer$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_tooltip$ = $DvtSvgShadowUtils$$;
    this.$_datatip$ = $DvtSvgPatternFillUtils$$;
    this.$_datatipColor$ = $DvtSvgImageFillUtils$$;
    this.$_params$ = $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$SimpleObjPeer$.prototype.$setTooltip$ = $JSCompiler_set$$("$_tooltip$");
  $dvt$$9$$.$SimpleObjPeer$.prototype.$setDatatip$ = $JSCompiler_set$$("$_datatip$");
  $dvt$$9$$.$SimpleObjPeer$.prototype.$getParams$ = $JSCompiler_get$$("$_params$");
  $dvt$$9$$.$SimpleObjPeer$.prototype.$getTooltip$ = $JSCompiler_get$$("$_tooltip$");
  $dvt$$9$$.$SimpleObjPeer$.prototype.$getDatatip$ = $JSCompiler_get$$("$_datatip$");
  $dvt$$9$$.$SimpleObjPeer$.prototype.$getDatatipColor$ = $JSCompiler_get$$("$_datatipColor$");
  $dvt$$9$$.$Agent$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Agent$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Agent$.$UNKNOWN_VERSION$ = -1;
  $dvt$$9$$.$Agent$.$IE_PLATFORM$ = "ie";
  $dvt$$9$$.$Agent$.$GECKO_PLATFORM$ = "gecko";
  $dvt$$9$$.$Agent$.$WEBKIT_PLATFORM$ = "webkit";
  $dvt$$9$$.$Agent$.$UNKNOWN_PLATFORM$ = "unknown";
  $dvt$$9$$.$Agent$.$WINDOWS_OS$ = "Windows";
  $dvt$$9$$.$Agent$.$SOLARIS_OS$ = "Solaris";
  $dvt$$9$$.$Agent$.$MAC_OS$ = "Mac";
  $dvt$$9$$.$Agent$.$UNKNOWN_OS$ = "Unknown";
  $dvt$$9$$.$Agent$.$FOCUS_COLOR_DEFAULT$ = "#0645AD";
  $dvt$$9$$.$Agent$.$FOCUS_COLOR_IE$ = "#090909";
  $dvt$$9$$.$Agent$.$deferAriaCreation$ = function $$dvt$$9$$$$Agent$$$deferAriaCreation$$() {
    return!$dvt$$9$$.$Agent$.$isTouchDevice$() && !$dvt$$9$$.$Agent$.$isEnvironmentTest$()
  };
  $dvt$$9$$.$Agent$.$getDevicePixelRatio$ = function $$dvt$$9$$$$Agent$$$getDevicePixelRatio$$() {
    $dvt$$9$$.$Agent$.$_initialize$();
    return $dvt$$9$$.$Agent$.$_devicePixelRatio$
  };
  $dvt$$9$$.$Agent$.$getElementPosition$ = function $$dvt$$9$$$$Agent$$$getElementPosition$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Agent$.$isPlatformIE$() ? $dvt$$9$$.$Agent$.$_getElementPositionIE$($DvtSvgShadowUtils$$) : $dvt$$9$$.$Agent$.$_getElementPositionDefault$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Agent$.$getPlatform$ = function $$dvt$$9$$$$Agent$$$getPlatform$$() {
    $dvt$$9$$.$Agent$.$_initialize$();
    return $dvt$$9$$.$Agent$.$_platform$
  };
  $dvt$$9$$.$Agent$.$getOS$ = function $$dvt$$9$$$$Agent$$$getOS$$() {
    $dvt$$9$$.$Agent$.$_initialize$();
    return $dvt$$9$$.$Agent$.$_os$
  };
  $dvt$$9$$.$Agent$.$getVersion$ = function $$dvt$$9$$$$Agent$$$getVersion$$() {
    $dvt$$9$$.$Agent$.$_initialize$();
    return $dvt$$9$$.$Agent$.$_version$
  };
  $dvt$$9$$.$Agent$.$isBrowserChrome$ = function $$dvt$$9$$$$Agent$$$isBrowserChrome$$() {
    $dvt$$9$$.$Agent$.$_initialize$();
    return $dvt$$9$$.$Agent$.$_bChrome$
  };
  $dvt$$9$$.$Agent$.$isBrowserSafari$ = function $$dvt$$9$$$$Agent$$$isBrowserSafari$$() {
    return $dvt$$9$$.$Agent$.$isPlatformWebkit$() && !$dvt$$9$$.$Agent$.$isBrowserChrome$()
  };
  $dvt$$9$$.$Agent$.$isPlatformGecko$ = function $$dvt$$9$$$$Agent$$$isPlatformGecko$$() {
    return $dvt$$9$$.$Agent$.$getPlatform$() == $dvt$$9$$.$Agent$.$GECKO_PLATFORM$
  };
  $dvt$$9$$.$Agent$.$isPlatformIE$ = function $$dvt$$9$$$$Agent$$$isPlatformIE$$() {
    return $dvt$$9$$.$Agent$.$getPlatform$() == $dvt$$9$$.$Agent$.$IE_PLATFORM$
  };
  $dvt$$9$$.$Agent$.$isPlatformWebkit$ = function $$dvt$$9$$$$Agent$$$isPlatformWebkit$$() {
    return $dvt$$9$$.$Agent$.$getPlatform$() == $dvt$$9$$.$Agent$.$WEBKIT_PLATFORM$
  };
  $dvt$$9$$.$Agent$.$isRightToLeft$ = function $$dvt$$9$$$$Agent$$$isRightToLeft$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Agent$.$_initialize$();
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$_readingDirection$ != $JSCompiler_alias_NULL$$ ? "rtl" == $DvtSvgShadowUtils$$.$_readingDirection$ : $dvt$$9$$.$Agent$.$_bRtl$
  };
  $dvt$$9$$.$Agent$.$isTouchDevice$ = function $$dvt$$9$$$$Agent$$$isTouchDevice$$() {
    $dvt$$9$$.$Agent$.$_initialize$();
    return $dvt$$9$$.$Agent$.$_bTouchDevice$
  };
  $dvt$$9$$.$Agent$.$setEnvironment$ = function $$dvt$$9$$$$Agent$$$setEnvironment$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Agent$.$_environment$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Agent$.$isEnvironmentTest$ = function $$dvt$$9$$$$Agent$$$isEnvironmentTest$$() {
    return"test" == $dvt$$9$$.$Agent$.$_environment$
  };
  $dvt$$9$$.$Agent$.$isEnvironmentBatik$ = function $$dvt$$9$$$$Agent$$$isEnvironmentBatik$$() {
    return"batik" == $dvt$$9$$.$Agent$.$_environment$
  };
  $dvt$$9$$.$Agent$.$isEnvironmentBrowser$ = function $$dvt$$9$$$$Agent$$$isEnvironmentBrowser$$() {
    return!$dvt$$9$$.$Agent$.$isEnvironmentTest$() && !$dvt$$9$$.$Agent$.$isEnvironmentBatik$()
  };
  $dvt$$9$$.$Agent$.$setHighContrast$ = function $$dvt$$9$$$$Agent$$$setHighContrast$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Agent$.$_highContrast$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Agent$.$isHighContrast$ = function $$dvt$$9$$$$Agent$$$isHighContrast$$() {
    return $dvt$$9$$.$Agent$.$_highContrast$ === $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$Agent$.$workaroundFirefoxRepaint$ = function $$dvt$$9$$$$Agent$$$workaroundFirefoxRepaint$$($DvtSvgShadowUtils$$) {
    if($dvt$$9$$.$Agent$.$isPlatformGecko$()) {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getParent();
      if($DvtSvgPatternFillUtils$$) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getChildIndex$($DvtSvgShadowUtils$$);
        $DvtSvgPatternFillUtils$$.$removeChildAt$($DvtSvgImageFillUtils$$);
        $DvtSvgPatternFillUtils$$.$addChildAt$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$)
      }
    }
  };
  $dvt$$9$$.$Agent$.$_initialize$ = function $$dvt$$9$$$$Agent$$$_initialize$$() {
    if(!$dvt$$9$$.$Agent$.$_bInitialized$) {
      var $DvtSvgShadowUtils$$ = navigator && navigator.userAgent ? navigator.userAgent.toLowerCase() : $JSCompiler_alias_NULL$$;
      $dvt$$9$$.$Agent$.$_os$ = $dvt$$9$$.$Agent$.$_determineOS$($DvtSvgShadowUtils$$);
      $dvt$$9$$.$Agent$.$_platform$ = $dvt$$9$$.$Agent$.$_determinePlatform$($DvtSvgShadowUtils$$);
      $dvt$$9$$.$Agent$.$_bChrome$ = $DvtSvgShadowUtils$$ && -1 != $DvtSvgShadowUtils$$.indexOf("chrome/") && -1 === $DvtSvgShadowUtils$$.indexOf("edge");
      $dvt$$9$$.$Agent$.$_version$ = $dvt$$9$$.$Agent$.$_determineVersion$($DvtSvgShadowUtils$$, $dvt$$9$$.$Agent$.$_platform$);
      $dvt$$9$$.$Agent$.$_bRtl$ = document && document.documentElement ? "rtl" == document.documentElement.dir : $JSCompiler_alias_FALSE$$;
      $dvt$$9$$.$Agent$.$_bTouchDevice$ = $dvt$$9$$.$Agent$.$_platform$ == $dvt$$9$$.$Agent$.$WEBKIT_PLATFORM$ && $DvtSvgShadowUtils$$ && (-1 != $DvtSvgShadowUtils$$.indexOf("mobile") || -1 != $DvtSvgShadowUtils$$.indexOf("android"));
      $dvt$$9$$.$Agent$.$_devicePixelRatio$ = window && window.devicePixelRatio != $JSCompiler_alias_NULL$$ ? window.devicePixelRatio : 1;
      $dvt$$9$$.$Agent$.$_bInitialized$ = $JSCompiler_alias_TRUE$$
    }
  };
  $dvt$$9$$.$Agent$.$_determineOS$ = function $$dvt$$9$$$$Agent$$$_determineOS$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$) {
      if(-1 != $DvtSvgShadowUtils$$.indexOf("win")) {
        return $dvt$$9$$.$Agent$.$WINDOWS_OS$
      }
      if(-1 != $DvtSvgShadowUtils$$.indexOf("mac")) {
        return $dvt$$9$$.$Agent$.$MAC_OS$
      }
      if(-1 != $DvtSvgShadowUtils$$.indexOf("sunos")) {
        return $dvt$$9$$.$Agent$.$SOLARIS_OS$
      }
    }
    return $dvt$$9$$.$Agent$.$UNKNOWN_OS$
  };
  $dvt$$9$$.$Agent$.$_determinePlatform$ = function $$dvt$$9$$$$Agent$$$_determinePlatform$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ && -1 == $DvtSvgShadowUtils$$.indexOf("opera")) {
      if(-1 != $DvtSvgShadowUtils$$.indexOf("trident") || -1 != $DvtSvgShadowUtils$$.indexOf("msie") || -1 != $DvtSvgShadowUtils$$.indexOf("edge")) {
        return $dvt$$9$$.$Agent$.$IE_PLATFORM$
      }
      if(-1 != $DvtSvgShadowUtils$$.indexOf("applewebkit") || -1 != $DvtSvgShadowUtils$$.indexOf("safari")) {
        return $dvt$$9$$.$Agent$.$WEBKIT_PLATFORM$
      }
      if(-1 != $DvtSvgShadowUtils$$.indexOf("gecko/")) {
        return $dvt$$9$$.$Agent$.$GECKO_PLATFORM$
      }
    }
    return $dvt$$9$$.$Agent$.$UNKNOWN_PLATFORM$
  };
  $dvt$$9$$.$Agent$.$_determineVersion$ = function $$dvt$$9$$$$Agent$$$_determineVersion$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$) {
      if($DvtSvgPatternFillUtils$$ == $dvt$$9$$.$Agent$.$GECKO_PLATFORM$) {
        return $dvt$$9$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /rv:(\d+[.]\d+)/)
      }
      if($DvtSvgPatternFillUtils$$ == $dvt$$9$$.$Agent$.$IE_PLATFORM$) {
        var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /trident\/(\d+[.]\d+)/);
        if($DvtSvgImageFillUtils$$ != $dvt$$9$$.$Agent$.$UNKNOWN_VERSION$) {
          return $DvtSvgImageFillUtils$$ + 4
        }
        $DvtSvgImageFillUtils$$ = $dvt$$9$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /edge\/(\d+[.]\d+)/);
        if($DvtSvgImageFillUtils$$ != $dvt$$9$$.$Agent$.$UNKNOWN_VERSION$) {
          return $DvtSvgImageFillUtils$$
        }
        $DvtSvgImageFillUtils$$ = $dvt$$9$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /msie (\d+\.\d+);/);
        return $DvtSvgImageFillUtils$$ != $dvt$$9$$.$Agent$.$UNKNOWN_VERSION$ ? $DvtSvgImageFillUtils$$ : $dvt$$9$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /msie (\d+\.\d+)b;/)
      }
      if($DvtSvgPatternFillUtils$$ == $dvt$$9$$.$Agent$.$WEBKIT_PLATFORM$) {
        return $dvt$$9$$.$Agent$.$_bChrome$ ? $dvt$$9$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /chrome\/(\d+([.]\d+)*)/) : $dvt$$9$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /applewebkit\/(\d+([.]\d+)*)/)
      }
    }
    return $dvt$$9$$.$Agent$.$UNKNOWN_VERSION$
  };
  $dvt$$9$$.$Agent$.$_parseFloatVersion$ = function $$dvt$$9$$$$Agent$$$_parseFloatVersion$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    try {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.match($DvtSvgPatternFillUtils$$);
      return $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$[1] ? parseFloat($DvtSvgImageFillUtils$$[1]) : $dvt$$9$$.$Agent$.$UNKNOWN_VERSION$
    }catch($DvtSvgGradientUtils$$) {
      return console.error("dvt.Agent._parseFloatVersion error: "), console.error($DvtSvgGradientUtils$$), $dvt$$9$$.$Agent$.$UNKNOWN_VERSION$
    }
  };
  $dvt$$9$$.$Agent$.$_getElementPositionDefault$ = function $$dvt$$9$$$$Agent$$$_getElementPositionDefault$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getBoundingClientRect(), $DvtSvgImageFillUtils$$ = Math.round($DvtSvgPatternFillUtils$$.top), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.left, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.ownerDocument.documentElement;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.ownerDocument.body;
    $DvtSvgPatternFillUtils$$ += $DvtSvgGradientUtils$$.scrollLeft || $DvtSvgShadowUtils$$.scrollLeft;
    $DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$.scrollTop || $DvtSvgShadowUtils$$.scrollTop;
    return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Agent$.$_getElementPositionIE$ = function $$dvt$$9$$$$Agent$$$_getElementPositionIE$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getBoundingClientRect(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.top, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.left;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.ownerDocument.documentElement;
    $DvtSvgPatternFillUtils$$ -= $DvtSvgShadowUtils$$.clientLeft - $DvtSvgShadowUtils$$.scrollLeft;
    $DvtSvgImageFillUtils$$ -= $DvtSvgShadowUtils$$.clientTop - $DvtSvgShadowUtils$$.scrollTop;
    return new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Agent$.$getFocusColor$ = function $$dvt$$9$$$$Agent$$$getFocusColor$$() {
    $dvt$$9$$.$Agent$.$_initialize$();
    if(!$dvt$$9$$.$Agent$.$_focusColor$) {
      var $DvtSvgShadowUtils$$;
      if($dvt$$9$$.$Agent$.$isPlatformWebkit$() && !$dvt$$9$$.$Agent$.$isEnvironmentTest$()) {
        var $DvtSvgPatternFillUtils$$ = document.getElementsByTagName("body")[0], $DvtSvgImageFillUtils$$ = document.createElement("div");
        $DvtSvgPatternFillUtils$$.appendChild($DvtSvgImageFillUtils$$);
        $DvtSvgImageFillUtils$$.style.outline = "-webkit-focus-ring-color";
        $DvtSvgShadowUtils$$ = window.getComputedStyle($DvtSvgImageFillUtils$$).getPropertyValue("outline-color");
        $DvtSvgPatternFillUtils$$.removeChild($DvtSvgImageFillUtils$$)
      }else {
        $dvt$$9$$.$Agent$.$isPlatformIE$() && ($DvtSvgShadowUtils$$ = $dvt$$9$$.$Agent$.$FOCUS_COLOR_IE$)
      }
      $dvt$$9$$.$Agent$.$_focusColor$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : $dvt$$9$$.$Agent$.$FOCUS_COLOR_DEFAULT$
    }
    return $dvt$$9$$.$Agent$.$_focusColor$
  };
  $dvt$$9$$.$Bundle$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Bundle$._localizedStrings = {};
  $dvt$$9$$.$Bundle$._defaultStrings = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$Bundle$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$Bundle$.$SUBCOMPONENT_PREFIX$ = "DvtSubcomponentBundle";
  $dvt$$9$$.$Bundle$.$AFCOMPONENT_PREFIX$ = "DvtAfComponentBundle";
  $dvt$$9$$.$Bundle$.$UTIL_PREFIX$ = "DvtUtilBundle";
  $dvt$$9$$.$Bundle$.$CHART_PREFIX$ = "DvtChartBundle";
  $dvt$$9$$.$Bundle$.$GAUGE_PREFIX$ = "DvtGaugeBundle";
  $dvt$$9$$.$Bundle$.$TREEMAP_PREFIX$ = "DvtTreemapBundle";
  $dvt$$9$$.$Bundle$.$SUNBURST_PREFIX$ = "DvtSunburstBundle";
  $dvt$$9$$.$Bundle$.$NBOX_PREFIX$ = "DvtNBoxBundle";
  $dvt$$9$$.$Bundle$.$HIERARCHYVIEWER_PREFIX$ = "DvtHierarchyViewerBundle";
  $dvt$$9$$.$Bundle$.$DIAGRAM_PREFIX$ = "DvtDiagramBundle";
  $dvt$$9$$.$Bundle$.$TAGCLOUD_PREFIX$ = "DvtTagCloudBundle";
  $dvt$$9$$.$Bundle$.$TIMELINE_PREFIX$ = "DvtTimelineBundle";
  $dvt$$9$$.$Bundle$.$addLocalizedStrings$ = function $$dvt$$9$$$$Bundle$$$addLocalizedStrings$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ in $DvtSvgShadowUtils$$) {
      $dvt$$9$$.$Bundle$._localizedStrings[$DvtSvgPatternFillUtils$$] = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$]
    }
  };
  $dvt$$9$$.$Bundle$.$addDefaultStrings$ = function $$dvt$$9$$$$Bundle$$$addDefaultStrings$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ in $DvtSvgPatternFillUtils$$) {
      $dvt$$9$$.$Bundle$._defaultStrings[$DvtSvgShadowUtils$$ + "." + $DvtSvgImageFillUtils$$] = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]
    }
  };
  $dvt$$9$$.$Bundle$.$format$ = function $$dvt$$9$$$$Bundle$$$format$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.replace(/\{(\d+)\}/g, function($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
      return $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]
    })
  };
  $dvt$$9$$.$Bundle$.$getTranslatedString$ = function $$dvt$$9$$$$Bundle$$$getTranslatedString$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ + "." + $DvtSvgPatternFillUtils$$;
    ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Bundle$._localizedStrings[$DvtSvgShadowUtils$$]) || ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$Bundle$._defaultStrings[$DvtSvgShadowUtils$$]);
    $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ !== $JSCompiler_alias_NULL$$ && $DvtSvgImageFillUtils$$ !== $JSCompiler_alias_VOID$$) && ($DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$ instanceof Array ? $dvt$$9$$.$Bundle$.$format$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : $dvt$$9$$.$Bundle$.$format$($DvtSvgPatternFillUtils$$, [$DvtSvgImageFillUtils$$]));
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Bundle$.$getTranslation$ = function $$dvt$$9$$$$Bundle$$$getTranslation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.translations ? $DvtSvgShadowUtils$$.translations[$DvtSvgPatternFillUtils$$] : $JSCompiler_alias_NULL$$;
    $DvtSvgShadowUtils$$ || ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ + "." + $DvtSvgGradientUtils$$, ($DvtSvgShadowUtils$$ = $dvt$$9$$.$Bundle$._localizedStrings[$DvtSvgImageFillUtils$$]) || ($DvtSvgShadowUtils$$ = $dvt$$9$$.$Bundle$._defaultStrings[$DvtSvgImageFillUtils$$]));
    $DvtSvgShadowUtils$$ && ($DvtSvgFilterUtils$$ !== $JSCompiler_alias_NULL$$ && $DvtSvgFilterUtils$$ !== $JSCompiler_alias_VOID$$) && ($DvtSvgShadowUtils$$ = $DvtSvgFilterUtils$$ instanceof Array ? $dvt$$9$$.$Bundle$.$format$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$) : $dvt$$9$$.$Bundle$.$format$($DvtSvgShadowUtils$$, [$DvtSvgFilterUtils$$]));
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$ContextMenuHandler$ = function $$dvt$$9$$$$ContextMenuHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_menus$ = $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ContextMenuHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ContextMenuHandler$.$TYPE_BODY_CONTEXT_MENU$ = "bodyContextMenu";
  $dvt$$9$$.$ContextMenuHandler$.$TYPE_CONTEXT_MENU$ = "contextMenu";
  $dvt$$9$$.$ContextMenuHandler$.$TYPE_MULTI_SELECT_CONTEXT_MENU$ = "multiSelectContextMenu";
  $dvt$$9$$.$ContextMenuHandler$.$_ATTR_MENU_CONTAINER_TYPE$ = "t";
  $dvt$$9$$.$ContextMenuHandler$.$_ATTR_MENU_CONTAINER_POPUP_ID$ = "id";
  $dvt$$9$$.$ContextMenuHandler$.prototype.show = function $$dvt$$9$$$$ContextMenuHandler$$$show$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$_menus$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = this.$_menus$[$DvtSvgImageFillUtils$$];
      if($DvtSvgPatternFillUtils$$ == $DvtSvgGradientUtils$$[$dvt$$9$$.$ContextMenuHandler$.$_ATTR_MENU_CONTAINER_TYPE$]) {
        return $dvt$$9$$.$EventFactory$.$newAdfContextMenuEvent$($DvtSvgShadowUtils$$.$getNativeEvent$(), $DvtSvgGradientUtils$$[$dvt$$9$$.$ContextMenuHandler$.$_ATTR_MENU_CONTAINER_POPUP_ID$])
      }
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtPopupBehaviorHandler$$, $dvt$$9$$.$Obj$);
  $DvtPopupBehaviorHandler$$.prototype.$processPopupHelper$ = function $$DvtPopupBehaviorHandler$$$$$processPopupHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = $JSCompiler_alias_FALSE$$;
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && 0 < $DvtSvgPatternFillUtils$$.length) {
      for(var $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImplFactory$$++) {
        var $DvtHtmlRichTooltipManager$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImplFactory$$];
        $DvtHtmlRichTooltipManager$$ && -1 != $dvt$$9$$.$ArrayUtils$.$getIndex$($DvtSvgImageFillUtils$$, $DvtHtmlRichTooltipManager$$.$getTriggerType$()) && (this.$HidePopup$($DvtSvgFilterUtils$$), this.$_behavior$ = $DvtHtmlRichTooltipManager$$, $DvtSvgFilterContext$$ = this.$_createShowPopupEvent$($DvtSvgShadowUtils$$, $DvtHtmlRichTooltipManager$$, $DvtSvgGradientUtils$$), $dvt$$9$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgFilterContext$$), $DvtSvgFilterContext$$ = 
        $JSCompiler_alias_TRUE$$)
      }
    }
    return $DvtSvgFilterContext$$
  };
  $DvtPopupBehaviorHandler$$.prototype.$processMousePopup$ = function $$DvtPopupBehaviorHandler$$$$$processMousePopup$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    if($DvtSvgShadowUtils$$ === this.$_mouseTarget$) {
      return $JSCompiler_alias_TRUE$$
    }
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && 0 < $DvtSvgPatternFillUtils$$.length) {
      for(var $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImplFactory$$++) {
        var $DvtHtmlRichTooltipManager$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImplFactory$$], $DvtDomXmlParser$$ = $DvtHtmlRichTooltipManager$$ ? $DvtHtmlRichTooltipManager$$.$getTriggerType$() : $JSCompiler_alias_NULL$$;
        $DvtDomXmlParser$$ == $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_HOVER$ && ($DvtDomXmlParser$$ = $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$);
        if($DvtSvgFilterContext$$ == $DvtDomXmlParser$$) {
          return this.$HidePopup$($DvtSvgFilterUtils$$), this.$_mouseTarget$ = $DvtSvgShadowUtils$$, this.$_behavior$ = $DvtHtmlRichTooltipManager$$, this.$_hoverDisplayable$ = $DvtSvgGradientUtils$$, this.$_popupPosition$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$ == $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_HOVER$ || $DvtSvgFilterContext$$ == $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$ ? $DvtHtmlRichTooltipManager$$.$getTriggerType$() == $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_HOVER$ ? 
          this.$_hoverTimer$.start() : this.$_overTimer$.start() : this.$_onOverDelay$(), $JSCompiler_alias_TRUE$$
        }
      }
    }
    return $JSCompiler_alias_FALSE$$
  };
  $DvtPopupBehaviorHandler$$.prototype.$processMouseOut$ = function $$DvtPopupBehaviorHandler$$$$$processMouseOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $JSCompiler_alias_FALSE$$;
    $DvtSvgPatternFillUtils$$ && ($DvtSvgGradientUtils$$ = 1 > $DvtSvgPatternFillUtils$$.length);
    this.$_mouseTarget$ && (this.$_behavior$ && ($DvtSvgShadowUtils$$ === this.$_mouseTarget$ || $DvtSvgGradientUtils$$)) && !($DvtSvgPatternFillUtils$$ && this.$_hoverDisplayable$ && -1 < $dvt$$9$$.$ArrayUtils$.$getIndex$($DvtSvgPatternFillUtils$$, this.$_hoverDisplayable$)) && this.$HidePopup$($DvtSvgImageFillUtils$$)
  };
  $DvtPopupBehaviorHandler$$.prototype.$HidePopup$ = function $$DvtPopupBehaviorHandler$$$$$HidePopup$$($DvtSvgShadowUtils$$) {
    this.$_hoverPopupShown$ ? ($DvtSvgShadowUtils$$ = $dvt$$9$$.$EventFactory$.$newAdfHidePopupEvent$(this.$_behavior$.$getPopupId$(), $DvtSvgShadowUtils$$.$getNativeEvent$().relatedTarget), $dvt$$9$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgShadowUtils$$)) : this.$_hoverTimer$.stop();
    this.$_behavior$ = this.$_mouseTarget$ = $JSCompiler_alias_NULL$$;
    this.$_hoverPopupShown$ = $JSCompiler_alias_FALSE$$;
    this.$_hoverDisplayable$ = $JSCompiler_alias_NULL$$
  };
  $DvtPopupBehaviorHandler$$.prototype.$processMouseMove$ = $JSCompiler_set$$("$_popupPosition$");
  $DvtPopupBehaviorHandler$$.prototype.$_createShowPopupEvent$ = function $$DvtPopupBehaviorHandler$$$$$_createShowPopupEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$;
    ($DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.$getAlign$() && !$DvtSvgGradientUtils$$.$getAlignId$()) && ($DvtSvgFilterUtils$$ = new $dvt$$9$$.$ShowPopupBehavior$($DvtSvgGradientUtils$$.$getPopupId$(), $DvtSvgGradientUtils$$.$getTriggerType$(), $JSCompiler_alias_NULL$$, $JSCompiler_alias_NULL$$));
    $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getPopupBounds$ ? $DvtSvgShadowUtils$$.$getPopupBounds$($DvtSvgFilterUtils$$) : $JSCompiler_alias_NULL$$;
    $DvtSvgPatternFillUtils$$ && !$DvtSvgFilterUtils$$ ? ($DvtSvgImageFillUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y), $DvtSvgFilterUtils$$ = new $dvt$$9$$.$Rectangle$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y - 5, 1, 5)) : $DvtSvgFilterUtils$$ && ($DvtSvgGradientUtils$$ = new $dvt$$9$$.$ShowPopupBehavior$($DvtSvgGradientUtils$$.$getPopupId$(), $DvtSvgGradientUtils$$.$getTriggerType$(), $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$.$getAlign$()));
    $DvtSvgGradientUtils$$ = $dvt$$9$$.$EventFactory$.$newAdfShowPopupEvent$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$.$getTriggerType$());
    $dvt$$9$$.$EventManager$.$_addContextInfo$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgGradientUtils$$
  };
  $DvtPopupBehaviorHandler$$.prototype.$_onHoverDelay$ = function $$DvtPopupBehaviorHandler$$$$$_onHoverDelay$$() {
    if(this.$_mouseTarget$ && this.$_behavior$) {
      this.$_hoverPopupShown$ = $JSCompiler_alias_TRUE$$;
      var $DvtSvgShadowUtils$$ = this.$_createShowPopupEvent$(this.$_mouseTarget$, this.$_behavior$, this.$_popupPosition$);
      $dvt$$9$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgShadowUtils$$)
    }
  };
  $DvtPopupBehaviorHandler$$.prototype.$_onOverDelay$ = function $$DvtPopupBehaviorHandler$$$$$_onOverDelay$$() {
    if(this.$_mouseTarget$ && this.$_behavior$) {
      var $DvtSvgShadowUtils$$ = this.$_createShowPopupEvent$(this.$_mouseTarget$, this.$_behavior$, this.$_popupPosition$);
      $dvt$$9$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgShadowUtils$$)
    }
  };
  $DvtPopupBehaviorHandler$$.prototype.$hasPopup$ = function $$DvtPopupBehaviorHandler$$$$$hasPopup$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!$DvtSvgShadowUtils$$ || !$DvtSvgShadowUtils$$.$getShowPopupBehaviors$) {
      return $JSCompiler_alias_FALSE$$
    }
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getShowPopupBehaviors$();
    if($DvtSvgImageFillUtils$$) {
      for(var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
        if($DvtSvgFilterUtils$$ && -1 != $dvt$$9$$.$ArrayUtils$.$getIndex$($DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$.$getTriggerType$())) {
          return $JSCompiler_alias_TRUE$$
        }
      }
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$ClientBehaviorHandler$ = function $$dvt$$9$$$$ClientBehaviorHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ClientBehaviorHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ClientBehaviorHandler$.prototype.Init = function $$dvt$$9$$$$ClientBehaviorHandler$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ClientBehaviorHandler$.prototype.$processClick$ = function $$dvt$$9$$$$ClientBehaviorHandler$$$$processClick$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$;
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && 0 < $DvtSvgPatternFillUtils$$.length) {
      for(var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$];
        if($DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$.$getTriggerType$() == $dvt$$9$$.$ClientBehavior$.$TRIGGER_TYPE_ACTION$ || $DvtSvgFilterUtils$$.$getTriggerType$() == $dvt$$9$$.$ClientBehavior$.$TRIGGER_TYPE_CLICK$)) {
          $DvtSvgImageFillUtils$$ = this.$CreateClientBehaviorEvent$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$), $dvt$$9$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, $JSCompiler_alias_NULL$$, $DvtSvgImageFillUtils$$), $DvtSvgImageFillUtils$$ = $JSCompiler_alias_TRUE$$
        }
      }
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ClientBehaviorHandler$.prototype.$CreateClientBehaviorEvent$ = function $$dvt$$9$$$$ClientBehaviorHandler$$$$CreateClientBehaviorEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$ClientBehaviorEvent$($DvtSvgPatternFillUtils$$);
    $dvt$$9$$.$EventManager$.$_addContextInfo$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$SelectionHandler$ = function $$dvt$$9$$$$SelectionHandler$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SelectionHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$SelectionHandler$.$TYPE_SINGLE$ = "s";
  $dvt$$9$$.$SelectionHandler$.$TYPE_MULTIPLE$ = "m";
  $dvt$$9$$.$SelectionHandler$.prototype.Init = function $$dvt$$9$$$$SelectionHandler$$$Init$($DvtSvgShadowUtils$$) {
    this.$_selection$ = [];
    this.$_type$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : $dvt$$9$$.$SelectionHandler$.$TYPE_SINGLE$;
    this.$_hiddenSelectedIds$ = []
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$getType$ = $JSCompiler_get$$("$_type$");
  $dvt$$9$$.$SelectionHandler$.prototype.getSelection = function $$dvt$$9$$$$SelectionHandler$$$getSelection$() {
    return this.$_selection$.slice(0)
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$getSelectedIds$ = function $$dvt$$9$$$$SelectionHandler$$$$getSelectedIds$$() {
    for(var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_selection$.length;$DvtSvgPatternFillUtils$$++) {
      $DvtSvgShadowUtils$$.push(this.$_selection$[$DvtSvgPatternFillUtils$$].getId())
    }
    return $DvtSvgShadowUtils$$.concat(this.$_hiddenSelectedIds$)
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$processInitialSelections$ = function $$dvt$$9$$$$SelectionHandler$$$$processInitialSelections$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$clearSelection$($JSCompiler_alias_TRUE$$);
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$) {
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        for(var $DvtSvgGradientUtils$$ = $JSCompiler_alias_TRUE$$, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++) {
          var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$].getId();
          if($DvtSvgFilterContext$$ != $JSCompiler_alias_NULL$$ && $dvt$$9$$.$SelectionHandler$.$_isEquals$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgFilterContext$$) && $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$].$isSelectable$ && $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$].$isSelectable$()) {
            this.$_addToSelection$($DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$], $JSCompiler_alias_TRUE$$, $JSCompiler_alias_TRUE$$);
            $DvtSvgGradientUtils$$ = $JSCompiler_alias_FALSE$$;
            break
          }
        }
        $DvtSvgGradientUtils$$ && this.$_hiddenSelectedIds$.push($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$])
      }
    }
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$processClick$ = function $$dvt$$9$$$$SelectionHandler$$$$processClick$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isUnrelatedToSelection$) {
      return $JSCompiler_alias_FALSE$$
    }
    var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$;
    $DvtSvgPatternFillUtils$$ && this.$_type$ == $dvt$$9$$.$SelectionHandler$.$TYPE_MULTIPLE$ ? $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$()) && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$isSelected$() ? this.$removeFromSelection$($DvtSvgShadowUtils$$) : this.$_addToSelection$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$)) : $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() ? 
    this.$_addToSelection$($DvtSvgShadowUtils$$, $JSCompiler_alias_FALSE$$) : this.$clearSelection$();
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$processGroupSelection$ = function $$dvt$$9$$$$SelectionHandler$$$$processGroupSelection$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$], (!$DvtSvgPatternFillUtils$$ || !$DvtSvgPatternFillUtils$$.$isUnrelatedToSelection$) && this.$_addToSelection$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_TRUE$$)
    }
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$processMouseOver$ = function $$dvt$$9$$$$SelectionHandler$$$$processMouseOver$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() && $DvtSvgShadowUtils$$.$showHoverEffect$) && $DvtSvgShadowUtils$$.$showHoverEffect$()
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$processMouseOut$ = function $$dvt$$9$$$$SelectionHandler$$$$processMouseOut$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() && $DvtSvgShadowUtils$$.$hideHoverEffect$) && $DvtSvgShadowUtils$$.$hideHoverEffect$()
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$_addToSelection$ = function $$dvt$$9$$$$SelectionHandler$$$$_addToSelection$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$.$isSelected$() || $DvtSvgShadowUtils$$.$isSelectable$ && !$DvtSvgShadowUtils$$.$isSelectable$()) {
      return $JSCompiler_alias_FALSE$$
    }
    $DvtSvgPatternFillUtils$$ || this.$clearSelection$($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$.$setSelected$($JSCompiler_alias_TRUE$$, $DvtSvgImageFillUtils$$);
    this.$_selection$.push($DvtSvgShadowUtils$$);
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$removeFromSelection$ = function $$dvt$$9$$$$SelectionHandler$$$$removeFromSelection$$($DvtSvgShadowUtils$$) {
    if(!$DvtSvgShadowUtils$$.$isSelected$()) {
      return $JSCompiler_alias_FALSE$$
    }
    $DvtSvgShadowUtils$$.$setSelected$($JSCompiler_alias_FALSE$$);
    for(var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_selection$.length;$DvtSvgPatternFillUtils$$++) {
      if(this.$_selection$[$DvtSvgPatternFillUtils$$] == $DvtSvgShadowUtils$$) {
        this.$_selection$.splice($DvtSvgPatternFillUtils$$, 1);
        break
      }
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$SelectionHandler$.prototype.$clearSelection$ = function $$dvt$$9$$$$SelectionHandler$$$$clearSelection$$($DvtSvgShadowUtils$$) {
    if(0 >= this.$_selection$.length && 0 >= this.$_hiddenSelectedIds$.length) {
      return $JSCompiler_alias_FALSE$$
    }
    for(;0 < this.$_selection$.length;) {
      this.$_selection$.pop().$setSelected$($JSCompiler_alias_FALSE$$, $DvtSvgShadowUtils$$)
    }
    this.$_hiddenSelectedIds$.length = 0;
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$SelectionHandler$.$_isEquals$ = function $$dvt$$9$$$$SelectionHandler$$$_isEquals$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$ == $DvtSvgPatternFillUtils$$ ? $JSCompiler_alias_TRUE$$ : $DvtSvgShadowUtils$$ instanceof String ? $JSCompiler_alias_FALSE$$ : $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$equals$ ? $DvtSvgShadowUtils$$.$equals$($DvtSvgPatternFillUtils$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$KeyboardHandler$ = function $$dvt$$9$$$$KeyboardHandler$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$KeyboardHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$KeyboardHandler$.$_OPTIMAL_ANGLE1$ = 15 / 180 * Math.PI;
  $dvt$$9$$.$KeyboardHandler$.$_OPTIMAL_ANGLE2$ = 40 / 180 * Math.PI;
  $dvt$$9$$.$KeyboardHandler$.$_SUBOPTIMAL_ANGLE_PENALTY1$ = 2;
  $dvt$$9$$.$KeyboardHandler$.$_SUBOPTIMAL_ANGLE_PENALTY2$ = 6;
  $dvt$$9$$.$KeyboardHandler$.prototype.Init = $JSCompiler_set$$("$_eventManager$");
  $dvt$$9$$.$KeyboardHandler$.prototype.$processKeyDown$ = function $$dvt$$9$$$$KeyboardHandler$$$$processKeyDown$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_eventManager$.$getFocus$();
    if($DvtSvgPatternFillUtils$$ && (this.$isNavigationEvent$($DvtSvgShadowUtils$$) || this.$isMultiSelectEvent$($DvtSvgShadowUtils$$))) {
      $dvt$$9$$.$EventManager$.$consumeEvent$($DvtSvgShadowUtils$$);
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getNextNavigable$($DvtSvgShadowUtils$$);
      $DvtSvgImageFillUtils$$ != $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ && this.$_showPopupHelper$($DvtSvgImageFillUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_FOCUS$], $DvtSvgShadowUtils$$), this.$_showPopupHelper$($DvtSvgPatternFillUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_BLUR$], $DvtSvgShadowUtils$$));
      return $DvtSvgImageFillUtils$$
    }
    $DvtSvgShadowUtils$$.keyCode != $dvt$$9$$.$KeyboardEvent$.$TAB$ && $DvtSvgPatternFillUtils$$ && this.$_showPopupHelper$($DvtSvgPatternFillUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_DOWN$], $DvtSvgShadowUtils$$);
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$KeyboardHandler$.prototype.$processKeyUp$ = function $$dvt$$9$$$$KeyboardHandler$$$$processKeyUp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_eventManager$.$getFocus$();
    $DvtSvgImageFillUtils$$ && $DvtSvgShadowUtils$$.keyCode == $dvt$$9$$.$KeyboardEvent$.$TAB$ ? this.$_showPopupHelper$($DvtSvgImageFillUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_FOCUS$], $DvtSvgShadowUtils$$) : $DvtSvgImageFillUtils$$ && (!this.$isNavigationEvent$($DvtSvgShadowUtils$$) && !this.$isMultiSelectEvent$($DvtSvgShadowUtils$$)) && this.$_showPopupHelper$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$KeyboardHandler$.$getNextNavigable$ = function $$dvt$$9$$$$KeyboardHandler$$$getNextNavigable$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgFilterContext$$ = 0, $DvtSvgImplFactory$$ = 0;
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.keyCode;
    if(!$DvtSvgShadowUtils$$) {
      return!$DvtSvgImageFillUtils$$ || 1 > $DvtSvgImageFillUtils$$.length ? $JSCompiler_alias_NULL$$ : $DvtSvgImageFillUtils$$[0]
    }
    for(var $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$(), $DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtSvgImageFillUtils$$.length;$DvtDomXmlParser$$++) {
      var $DvtContextMenuTooltipItem$$ = $DvtSvgImageFillUtils$$[$DvtDomXmlParser$$];
      if($DvtSvgShadowUtils$$ !== $DvtContextMenuTooltipItem$$ && ($DvtSvgImplFactory$$ = $DvtContextMenuTooltipItem$$.$getKeyboardBoundingBox$(), $DvtSvgGradientUtils$$ || $dvt$$9$$.$KeyboardHandler$.$_isInBounds$($DvtHtmlRichTooltipManager$$, $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$))) {
        if($DvtSvgImplFactory$$ = $dvt$$9$$.$KeyboardHandler$.$_computeDelta$($DvtHtmlRichTooltipManager$$, $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$), ($DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$ || $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$) && 0 > $DvtSvgImplFactory$$ && (!$DvtSvgFilterUtils$$ || $DvtSvgImplFactory$$ > $DvtSvgFilterContext$$) || ($DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$ || $DvtSvgPatternFillUtils$$ == 
        $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$) && 0 < $DvtSvgImplFactory$$ && (!$DvtSvgFilterUtils$$ || $DvtSvgImplFactory$$ < $DvtSvgFilterContext$$)) {
          $DvtSvgFilterUtils$$ = $DvtContextMenuTooltipItem$$, $DvtSvgFilterContext$$ = $DvtSvgImplFactory$$
        }
      }
    }
    return $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$ : $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$KeyboardHandler$.prototype.$_showPopupHelper$ = function $$dvt$$9$$$$KeyboardHandler$$$$_showPopupHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$_eventManager$.$getCtx$(), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$($DvtSvgGradientUtils$$.$_stage$).$getCenter$(), $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$stageToPageCoords$($DvtSvgFilterUtils$$.x, $DvtSvgFilterUtils$$.y), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getShowPopupBehaviors$ ? $DvtSvgShadowUtils$$.$getShowPopupBehaviors$() : $JSCompiler_alias_NULL$$;
    this.$_eventManager$.$PopupHandler$.$processPopupHelper$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$KeyboardHandler$.prototype.$getDefaultNavigable$ = function $$dvt$$9$$$$KeyboardHandler$$$$getDefaultNavigable$$($DvtSvgShadowUtils$$) {
    if(!$DvtSvgShadowUtils$$ || 0 >= $DvtSvgShadowUtils$$.length) {
      return $JSCompiler_alias_NULL$$
    }
    for(var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[0], $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$(), $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = 1;$DvtSvgFilterContext$$ < $DvtSvgShadowUtils$$.length;$DvtSvgFilterContext$$++) {
      if($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$], $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$getKeyboardBoundingBox$(), ($DvtSvgFilterUtils$$.x == $DvtSvgImageFillUtils$$.x && $DvtSvgFilterUtils$$.y < $DvtSvgImageFillUtils$$.y || $DvtSvgFilterUtils$$.x < $DvtSvgImageFillUtils$$.x) && !$dvt$$9$$.$Agent$.$isRightToLeft$(this.$_eventManager$.$getCtx$()) || ($DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ == $DvtSvgImageFillUtils$$.x + $DvtSvgImageFillUtils$$.$w$ && 
      $DvtSvgFilterUtils$$.y < $DvtSvgImageFillUtils$$.y || $DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ > $DvtSvgImageFillUtils$$.x + $DvtSvgImageFillUtils$$.$w$) && $dvt$$9$$.$Agent$.$isRightToLeft$(this.$_eventManager$.$getCtx$())) {
        $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$()
      }
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$KeyboardHandler$.prototype.$isNavigationEvent$ = function $$dvt$$9$$$$KeyboardHandler$$$$isNavigationEvent$$($DvtSvgShadowUtils$$) {
    switch($DvtSvgShadowUtils$$.keyCode) {
      case $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$:
      ;
      case $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$:
      ;
      case $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$:
      ;
      case $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$:
        return $JSCompiler_alias_TRUE$$
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$KeyboardHandler$.prototype.$isSelectionEvent$ = $JSCompiler_returnArg$$($JSCompiler_alias_FALSE$$);
  $dvt$$9$$.$KeyboardHandler$.prototype.$isMultiSelectEvent$ = $JSCompiler_returnArg$$($JSCompiler_alias_FALSE$$);
  $dvt$$9$$.$KeyboardHandler$.prototype.$isContextMenuEvent$ = function $$dvt$$9$$$$KeyboardHandler$$$$isContextMenuEvent$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.keyCode == $dvt$$9$$.$KeyboardEvent$.$M$ && $DvtSvgShadowUtils$$.altKey && $DvtSvgShadowUtils$$.ctrlKey
  };
  $dvt$$9$$.$KeyboardHandler$.$_isInBounds$ = function $$dvt$$9$$$$KeyboardHandler$$$_isInBounds$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$) {
      $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.x;
      $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$.$w$;
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.x;
      return!($DvtSvgImageFillUtils$$ >= $DvtSvgGradientUtils$$ + $DvtSvgPatternFillUtils$$.$w$ || $DvtSvgShadowUtils$$ <= $DvtSvgGradientUtils$$)
    }
    if($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$) {
      return $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$.$h$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.y, !($DvtSvgImageFillUtils$$ >= $DvtSvgGradientUtils$$ + $DvtSvgPatternFillUtils$$.$h$ || $DvtSvgShadowUtils$$ <= $DvtSvgGradientUtils$$)
    }
  };
  $dvt$$9$$.$KeyboardHandler$.$_computeDelta$ = function $$dvt$$9$$$$KeyboardHandler$$$_computeDelta$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = 0, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getCenter$().x;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getCenter$().y;
    var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$getCenter$().x;
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getCenter$().y;
    if($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$) {
      $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$
    }else {
      if($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$) {
        $DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$ - $DvtSvgFilterUtils$$
      }
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$KeyboardHandler$.$getNextAdjacentNavigable$ = function $$dvt$$9$$$$KeyboardHandler$$$getNextAdjacentNavigable$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.keyCode;
    if(!$DvtSvgImageFillUtils$$) {
      return $JSCompiler_alias_NULL$$
    }
    if(!$DvtSvgShadowUtils$$) {
      return $DvtSvgImageFillUtils$$[0]
    }
    for(var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$ = Number.MAX_VALUE, $DvtSvgFilterContext$$ = $JSCompiler_alias_FALSE$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgImplFactory$$++) {
      var $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[$DvtSvgImplFactory$$];
      if($DvtHtmlRichTooltipManager$$ !== $DvtSvgShadowUtils$$ && $dvt$$9$$.$KeyboardHandler$.$_isValidDestination$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)) {
        var $DvtDomXmlParser$$ = $dvt$$9$$.$KeyboardHandler$.$_calcInContact$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
        if(!$DvtSvgFilterContext$$ || $DvtDomXmlParser$$) {
          var $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$KeyboardHandler$.$_calcDistanceAngleWeighted$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          if(!$DvtSvgFilterContext$$ && $DvtDomXmlParser$$ || $DvtContextMenuTooltipItem$$ < $DvtSvgFilterUtils$$ && ($DvtSvgFilterContext$$ && $DvtDomXmlParser$$ || !$DvtSvgFilterContext$$)) {
            $DvtSvgFilterUtils$$ = $DvtContextMenuTooltipItem$$, $DvtSvgGradientUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtSvgFilterContext$$ = $DvtDomXmlParser$$
          }
        }
      }
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$KeyboardHandler$.$_calcInContact$ = function $$dvt$$9$$$$KeyboardHandler$$$_calcInContact$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$();
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$();
    switch($DvtSvgImageFillUtils$$) {
      case $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$:
        return $dvt$$9$$.$KeyboardHandler$.$_isVerticallyAligned$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && ($DvtSvgPatternFillUtils$$.y <= $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ || $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgPatternFillUtils$$.y, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$));
      case $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$:
        return $dvt$$9$$.$KeyboardHandler$.$_isVerticallyAligned$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && ($DvtSvgShadowUtils$$.y <= $DvtSvgPatternFillUtils$$.y + $DvtSvgPatternFillUtils$$.$h$ || $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.y, $DvtSvgPatternFillUtils$$.y + $DvtSvgPatternFillUtils$$.$h$));
      case $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$:
        return $dvt$$9$$.$KeyboardHandler$.$_isHorizontallyAligned$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && ($DvtSvgShadowUtils$$.x <= $DvtSvgPatternFillUtils$$.x + $DvtSvgPatternFillUtils$$.$w$ || $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.x, $DvtSvgPatternFillUtils$$.x + $DvtSvgPatternFillUtils$$.$w$));
      case $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$:
        return $dvt$$9$$.$KeyboardHandler$.$_isHorizontallyAligned$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && ($DvtSvgPatternFillUtils$$.x <= $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ || $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgPatternFillUtils$$.x, $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$))
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$KeyboardHandler$.$_isVerticallyAligned$ = function $$dvt$$9$$$$KeyboardHandler$$$_isVerticallyAligned$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.x >= $DvtSvgPatternFillUtils$$.x && $DvtSvgShadowUtils$$.x <= $DvtSvgPatternFillUtils$$.x + $DvtSvgPatternFillUtils$$.$w$ || $DvtSvgPatternFillUtils$$.x >= $DvtSvgShadowUtils$$.x && $DvtSvgPatternFillUtils$$.x <= $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$
  };
  $dvt$$9$$.$KeyboardHandler$.$_isHorizontallyAligned$ = function $$dvt$$9$$$$KeyboardHandler$$$_isHorizontallyAligned$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.y >= $DvtSvgPatternFillUtils$$.y && $DvtSvgShadowUtils$$.y <= $DvtSvgPatternFillUtils$$.y + $DvtSvgPatternFillUtils$$.$h$ || $DvtSvgPatternFillUtils$$.y >= $DvtSvgShadowUtils$$.y && $DvtSvgPatternFillUtils$$.y <= $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$
  };
  $dvt$$9$$.$KeyboardHandler$.$_calcDistanceAngleWeighted$ = function $$dvt$$9$$$$KeyboardHandler$$$_calcDistanceAngleWeighted$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$();
    $DvtSvgShadowUtils$$ = $DvtSvgGradientUtils$$.x + $DvtSvgGradientUtils$$.$w$ / 2;
    var $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.y + $DvtSvgGradientUtils$$.$h$ / 2, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$();
    $DvtSvgPatternFillUtils$$ = Math.abs($DvtSvgShadowUtils$$ - ($DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ / 2));
    $DvtSvgGradientUtils$$ = Math.abs($DvtSvgGradientUtils$$ - ($DvtSvgFilterUtils$$.y + $DvtSvgFilterUtils$$.$h$ / 2));
    $DvtSvgShadowUtils$$ = Math.atan2($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgPatternFillUtils$$ = Math.sqrt($DvtSvgPatternFillUtils$$ * $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$);
    if($DvtSvgShadowUtils$$ > $dvt$$9$$.$KeyboardHandler$.$_OPTIMAL_ANGLE1$ && ($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$) || $DvtSvgShadowUtils$$ < $dvt$$9$$.$Math$.$HALF_PI$ - $dvt$$9$$.$KeyboardHandler$.$_OPTIMAL_ANGLE1$ && ($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$)) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ > $dvt$$9$$.$KeyboardHandler$.$_OPTIMAL_ANGLE2$ && ($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$) || $DvtSvgShadowUtils$$ < $dvt$$9$$.$Math$.$HALF_PI$ - $dvt$$9$$.$KeyboardHandler$.$_OPTIMAL_ANGLE2$ && ($DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$) ? $DvtSvgPatternFillUtils$$ * 
      $dvt$$9$$.$KeyboardHandler$.$_SUBOPTIMAL_ANGLE_PENALTY2$ : $DvtSvgPatternFillUtils$$ * $dvt$$9$$.$KeyboardHandler$.$_SUBOPTIMAL_ANGLE_PENALTY1$
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$KeyboardHandler$.$_isValidDestination$ = function $$dvt$$9$$$$KeyboardHandler$$$_isValidDestination$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$();
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$();
    switch($DvtSvgImageFillUtils$$) {
      case $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$:
        return $DvtSvgShadowUtils$$.y < $DvtSvgPatternFillUtils$$.y || $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.y, $DvtSvgPatternFillUtils$$.y);
      case $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$:
        return $DvtSvgShadowUtils$$.y > $DvtSvgPatternFillUtils$$.y || $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.y, $DvtSvgPatternFillUtils$$.y);
      case $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$:
        return $DvtSvgShadowUtils$$.x > $DvtSvgPatternFillUtils$$.x || $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.x, $DvtSvgPatternFillUtils$$.x);
      case $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$:
        return $DvtSvgShadowUtils$$.x < $DvtSvgPatternFillUtils$$.x || $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.x, $DvtSvgPatternFillUtils$$.x)
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$KeyboardHandler$.$_areEqualWithinTolerance$ = function $$dvt$$9$$$$KeyboardHandler$$$_areEqualWithinTolerance$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 1E-7 >= Math.abs($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$MarqueeHandler$ = function $$dvt$$9$$$$MarqueeHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$9$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$MarqueeHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$MarqueeHandler$.prototype.Init = function $$dvt$$9$$$$MarqueeHandler$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    this.$_context$ = $DvtSvgShadowUtils$$.$getCtx$();
    this.$_container$ = $DvtSvgShadowUtils$$;
    this.$_bounds$ = $DvtSvgPatternFillUtils$$;
    this.$_fill$ = $DvtSvgGradientUtils$$;
    this.$_stroke$ = $DvtSvgFilterUtils$$;
    this.$_allowHoriz$ = $DvtSvgFilterContext$$ == $JSCompiler_alias_NULL$$ ? $JSCompiler_alias_TRUE$$ : $DvtSvgFilterContext$$;
    this.$_allowVert$ = $DvtSvgImplFactory$$ == $JSCompiler_alias_NULL$$ ? $JSCompiler_alias_TRUE$$ : $DvtSvgImplFactory$$;
    this.$_horizBounds$ = $DvtHtmlRichTooltipManager$$;
    this.$_vertBounds$ = $DvtDomXmlParser$$;
    this.$_glassPane$ = new $dvt$$9$$.$Rect$(this.$_context$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$.$h$);
    this.$_glassPane$.$setInvisibleFill$();
    this.$_resizeVert$ = this.$_resizeHoriz$ = this.$_marqueeDrawn$ = this.$_marqueeOn$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$MarqueeHandler$.prototype.$processDragStart$ = function $$dvt$$9$$$$MarqueeHandler$$$$processDragStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_marqueeOn$) {
      this.$_origPt$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
      this.$_resizeHoriz$ = this.$_allowHoriz$;
      this.$_resizeVert$ = this.$_allowVert$;
      if(!this.$_bounds$.$containsPoint$(this.$_origPt$.x, this.$_origPt$.y)) {
        if(this.$_vertBounds$ && this.$_vertBounds$.$containsPoint$(this.$_origPt$.x, this.$_origPt$.y)) {
          this.$_resizeHoriz$ = $JSCompiler_alias_FALSE$$
        }else {
          if(this.$_horizBounds$ && this.$_horizBounds$.$containsPoint$(this.$_origPt$.x, this.$_origPt$.y)) {
            this.$_resizeVert$ = $JSCompiler_alias_FALSE$$
          }else {
            return $JSCompiler_alias_NULL$$
          }
        }
      }
      this.$_marqueeOn$ = $JSCompiler_alias_TRUE$$;
      this.$_marquee$ = $JSCompiler_alias_NULL$$;
      return this.$_createMarqueeEvent$($dvt$$9$$.$MarqueeEvent$.$SUBTYPE_START$, $DvtSvgPatternFillUtils$$)
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$MarqueeHandler$.prototype.$processDragMove$ = function $$dvt$$9$$$$MarqueeHandler$$$$processDragMove$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_marqueeOn$) {
      return $JSCompiler_alias_NULL$$
    }
    this.$_marqueeDrawn$ || (this.$_container$.$addChild$(this.$_glassPane$), this.$_marquee$ = new $dvt$$9$$.$Rect$(this.$_context$, this.$_bounds$.x, this.$_bounds$.y, this.$_bounds$.$w$, this.$_bounds$.$h$), this.$_resizeHoriz$ && (this.$_marquee$.$setX$(this.$_origPt$.x), this.$_marquee$.$setWidth$(0)), this.$_resizeVert$ && (this.$_marquee$.$setY$(this.$_origPt$.y), this.$_marquee$.$setHeight$(0)), this.$_marquee$.$setStroke$(this.$_stroke$), this.$_marquee$.$setFill$(this.$_fill$), this.$_marquee$.$setPixelHinting$(), 
    this.$_glassPane$.$addChild$(this.$_marquee$), this.$_marqueeDrawn$ = $JSCompiler_alias_TRUE$$);
    var $DvtSvgImageFillUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    $DvtSvgImageFillUtils$$.x = Math.max($DvtSvgImageFillUtils$$.x, this.$_bounds$.x);
    $DvtSvgImageFillUtils$$.x = Math.min($DvtSvgImageFillUtils$$.x, this.$_bounds$.x + this.$_bounds$.$w$);
    $DvtSvgImageFillUtils$$.y = Math.max($DvtSvgImageFillUtils$$.y, this.$_bounds$.y);
    $DvtSvgImageFillUtils$$.y = Math.min($DvtSvgImageFillUtils$$.y, this.$_bounds$.y + this.$_bounds$.$h$);
    this.$_resizeHoriz$ && (this.$_marquee$.$setWidth$(Math.abs($DvtSvgImageFillUtils$$.x - this.$_origPt$.x)), $DvtSvgImageFillUtils$$.x < this.$_origPt$.x ? this.$_marquee$.$setX$($DvtSvgImageFillUtils$$.x) : this.$_marquee$.$setX$(this.$_origPt$.x));
    this.$_resizeVert$ && (this.$_marquee$.$setHeight$(Math.abs($DvtSvgImageFillUtils$$.y - this.$_origPt$.y)), $DvtSvgImageFillUtils$$.y < this.$_origPt$.y ? this.$_marquee$.$setY$($DvtSvgImageFillUtils$$.y) : this.$_marquee$.$setY$(this.$_origPt$.y));
    return this.$_createMarqueeEvent$($dvt$$9$$.$MarqueeEvent$.$SUBTYPE_MOVE$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$MarqueeHandler$.prototype.$processDragEnd$ = function $$dvt$$9$$$$MarqueeHandler$$$$processDragEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_marqueeOn$ && (this.$_marqueeOn$ = $JSCompiler_alias_FALSE$$, this.$_marqueeDrawn$) ? (this.$_glassPane$.removeChild(this.$_marquee$), this.$_container$.removeChild(this.$_glassPane$), this.$_marqueeDrawn$ = $JSCompiler_alias_FALSE$$, this.$_createMarqueeEvent$($dvt$$9$$.$MarqueeEvent$.$SUBTYPE_END$, $DvtSvgPatternFillUtils$$)) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$MarqueeHandler$.prototype.$cancelMarquee$ = function $$dvt$$9$$$$MarqueeHandler$$$$cancelMarquee$$() {
    return this.$_marqueeOn$ && (this.$_marqueeOn$ = $JSCompiler_alias_FALSE$$, this.$_marqueeDrawn$) ? (this.$_glassPane$.removeChild(this.$_marquee$), this.$_container$.removeChild(this.$_glassPane$), this.$_marqueeDrawn$ = $JSCompiler_alias_FALSE$$, $JSCompiler_alias_TRUE$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$MarqueeHandler$.prototype.$_createMarqueeEvent$ = function $$dvt$$9$$$$MarqueeHandler$$$$_createMarqueeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgFilterUtils$$ = $JSCompiler_alias_NULL$$, $DvtSvgFilterContext$$ = $JSCompiler_alias_NULL$$;
    this.$_resizeHoriz$ && ($DvtSvgImageFillUtils$$ = this.$_marquee$ ? this.$_marquee$.$getX$() : this.$_origPt$.x, $DvtSvgFilterUtils$$ = this.$_marquee$ ? this.$_marquee$.getWidth() : 0);
    this.$_resizeVert$ && ($DvtSvgGradientUtils$$ = this.$_marquee$ ? this.$_marquee$.$getY$() : this.$_origPt$.y, $DvtSvgFilterContext$$ = this.$_marquee$ ? this.$_marquee$.getHeight() : 0);
    return new $dvt$$9$$.$MarqueeEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$MarqueeHandler$.prototype.getCursor = function $$dvt$$9$$$$MarqueeHandler$$$getCursor$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$_vertBounds$ && this.$_vertBounds$.$containsPoint$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y), $DvtSvgImageFillUtils$$ = this.$_horizBounds$ && this.$_horizBounds$.$containsPoint$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y);
    return this.$_bounds$.$containsPoint$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y) || $DvtSvgPatternFillUtils$$ || $DvtSvgImageFillUtils$$ ? "crosshair" : "inherit"
  };
  $dvt$$9$$.$PanZoomHandler$ = function $$dvt$$9$$$$PanZoomHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$PanZoomHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$PanZoomHandler$.prototype.Init = function $$dvt$$9$$$$PanZoomHandler$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$.$getCtx$();
    this.$_container$ = $DvtSvgShadowUtils$$;
    this.$_bounds$ = $DvtSvgPatternFillUtils$$;
    this.$_zoomRate$ = $DvtSvgGradientUtils$$;
    this.$_glassPane$ = new $dvt$$9$$.$Rect$(this.$_context$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$.$h$);
    this.$_glassPane$.$setInvisibleFill$();
    this.$_pinchOn$ = this.$_glassPaneDrawn$ = this.$_panOn$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$processDragStart$ = function $$dvt$$9$$$$PanZoomHandler$$$$processDragStart$$($DvtSvgShadowUtils$$) {
    if(!this.$_panOn$) {
      this.$_lastPt$ = this.$_origPt$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
      if(!this.$_bounds$.$containsPoint$(this.$_origPt$.x, this.$_origPt$.y)) {
        return $JSCompiler_alias_NULL$$
      }
      this.$_panOn$ = $JSCompiler_alias_TRUE$$;
      return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PAN_START$, 0, 0, 0, 0, 0, 0, 0, 0)
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$processDragMove$ = function $$dvt$$9$$$$PanZoomHandler$$$$processDragMove$$($DvtSvgShadowUtils$$) {
    if(!this.$_panOn$) {
      return $JSCompiler_alias_NULL$$
    }
    this.$_glassPaneDrawn$ || (this.$_container$.$addChild$(this.$_glassPane$), this.$_glassPaneDrawn$ = $JSCompiler_alias_TRUE$$);
    $DvtSvgShadowUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.x - this.$_lastPt$.x, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.y - this.$_lastPt$.y, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.x - this.$_origPt$.x, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.y - this.$_origPt$.y;
    this.$_lastPt$ = $DvtSvgShadowUtils$$;
    return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PAN_MOVE$, -$DvtSvgPatternFillUtils$$, -$DvtSvgPatternFillUtils$$, -$DvtSvgImageFillUtils$$, -$DvtSvgImageFillUtils$$, -$DvtSvgGradientUtils$$, -$DvtSvgGradientUtils$$, -$DvtSvgFilterUtils$$, -$DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$processDragEnd$ = function $$dvt$$9$$$$PanZoomHandler$$$$processDragEnd$$($DvtSvgShadowUtils$$) {
    if(this.$_panOn$ && (this.$_panOn$ = $JSCompiler_alias_FALSE$$, this.$_glassPaneDrawn$)) {
      this.$_container$.removeChild(this.$_glassPane$);
      this.$_glassPaneDrawn$ = $JSCompiler_alias_FALSE$$;
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ ? this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$) : this.$_lastPt$;
      $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.x - this.$_lastPt$.x;
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.y - this.$_lastPt$.y, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.x - this.$_origPt$.x, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.y - this.$_origPt$.y;
      this.$_lastPt$ = $JSCompiler_alias_NULL$$;
      return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PAN_END$, -$DvtSvgShadowUtils$$, -$DvtSvgShadowUtils$$, -$DvtSvgImageFillUtils$$, -$DvtSvgImageFillUtils$$, -$DvtSvgGradientUtils$$, -$DvtSvgGradientUtils$$, -$DvtSvgPatternFillUtils$$, -$DvtSvgPatternFillUtils$$)
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$processMouseWheel$ = function $$dvt$$9$$$$PanZoomHandler$$$$processMouseWheel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    if(!this.$_bounds$.$containsPoint$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y)) {
      return $JSCompiler_alias_NULL$$
    }
    $DvtSvgPatternFillUtils$$ *= this.$_zoomRate$;
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ * ($DvtSvgImageFillUtils$$.x - this.$_bounds$.x), $DvtSvgFilterUtils$$ = -$DvtSvgPatternFillUtils$$ * (this.$_bounds$.x + this.$_bounds$.$w$ - $DvtSvgImageFillUtils$$.x), $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$ * ($DvtSvgImageFillUtils$$.y - this.$_bounds$.y), $DvtSvgImageFillUtils$$ = -$DvtSvgPatternFillUtils$$ * (this.$_bounds$.y + this.$_bounds$.$h$ - $DvtSvgImageFillUtils$$.y);
    return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_ZOOM$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$processPinchStart$ = function $$dvt$$9$$$$PanZoomHandler$$$$processPinchStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_pinchOn$) {
      this.$_origPt1$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
      this.$_origPt2$ = this.$_container$.$stageToLocal$($DvtSvgPatternFillUtils$$);
      this.$_lastPt1$ = this.$_origPt1$;
      this.$_lastPt2$ = this.$_origPt2$;
      if(!this.$_bounds$.$containsPoint$(this.$_origPt1$.x, this.$_origPt1$.y) || !this.$_bounds$.$containsPoint$(this.$_origPt2$.x, this.$_origPt2$.y)) {
        return $JSCompiler_alias_NULL$$
      }
      this.$_pinchOn$ = $JSCompiler_alias_TRUE$$;
      return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PINCH_START$, 0, 0, 0, 0, 0, 0, 0, 0)
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$processPinchMove$ = function $$dvt$$9$$$$PanZoomHandler$$$$processPinchMove$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_pinchOn$) {
      return $JSCompiler_alias_NULL$$
    }
    var $DvtSvgImageFillUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$_container$.$stageToLocal$($DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$ = this.$_computePinchDeltas$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, this.$_lastPt1$, this.$_lastPt2$), $DvtSvgFilterContext$$ = this.$_computePinchDeltas$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, this.$_origPt1$, this.$_origPt2$);
    this.$_lastPt1$ = $DvtSvgImageFillUtils$$;
    this.$_lastPt2$ = $DvtSvgGradientUtils$$;
    return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PINCH_MOVE$, $DvtSvgFilterUtils$$.$dxMin$, $DvtSvgFilterUtils$$.$dxMax$, $DvtSvgFilterUtils$$.$dyMin$, $DvtSvgFilterUtils$$.$dyMax$, $DvtSvgFilterContext$$.$dxMin$, $DvtSvgFilterContext$$.$dxMax$, $DvtSvgFilterContext$$.$dyMin$, $DvtSvgFilterContext$$.$dyMax$)
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$processPinchEnd$ = function $$dvt$$9$$$$PanZoomHandler$$$$processPinchEnd$$() {
    if(this.$_pinchOn$) {
      this.$_pinchOn$ = $JSCompiler_alias_FALSE$$;
      var $DvtSvgShadowUtils$$ = this.$_computePinchDeltas$(this.$_lastPt1$, this.$_lastPt2$, this.$_origPt1$, this.$_origPt2$);
      this.$_lastPt2$ = this.$_lastPt1$ = $JSCompiler_alias_NULL$$;
      return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PINCH_END$, 0, 0, 0, 0, $DvtSvgShadowUtils$$.$dxMin$, $DvtSvgShadowUtils$$.$dxMax$, $DvtSvgShadowUtils$$.$dyMin$, $DvtSvgShadowUtils$$.$dyMax$)
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$_computePinchDeltas$ = function $$dvt$$9$$$$PanZoomHandler$$$$_computePinchDeltas$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = Math.abs($DvtSvgShadowUtils$$.x - $DvtSvgPatternFillUtils$$.x), $dvt$$9$$ = Math.abs($DvtSvgShadowUtils$$.y - $DvtSvgPatternFillUtils$$.y), $DvtSvgFilterContext$$ = Math.abs($DvtSvgImageFillUtils$$.x - $DvtSvgGradientUtils$$.x), $DvtSvgImplFactory$$ = Math.abs($DvtSvgImageFillUtils$$.y - $DvtSvgGradientUtils$$.y), $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$ > $dvt$$9$$ / 2 ? $DvtSvgFilterContext$$ / $DvtSvgFilterUtils$$ : 1, $DvtSvgFilterUtils$$ = $dvt$$9$$ > $DvtSvgFilterUtils$$ / 
    2 ? $DvtSvgImplFactory$$ / $dvt$$9$$ : 1, $dvt$$9$$ = ($DvtSvgShadowUtils$$.x + $DvtSvgPatternFillUtils$$.x) / 2;
    $DvtSvgPatternFillUtils$$ = ($DvtSvgShadowUtils$$.y + $DvtSvgPatternFillUtils$$.y) / 2;
    $DvtSvgShadowUtils$$ = $dvt$$9$$ - ($DvtSvgImageFillUtils$$.x + $DvtSvgGradientUtils$$.x) / 2;
    $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ - ($DvtSvgImageFillUtils$$.y + $DvtSvgGradientUtils$$.y) / 2;
    $DvtSvgGradientUtils$$ = (1 - $DvtSvgFilterContext$$) * ($dvt$$9$$ - this.$_bounds$.x);
    $DvtSvgFilterContext$$ = ($DvtSvgFilterContext$$ - 1) * (this.$_bounds$.x + this.$_bounds$.$w$ - $dvt$$9$$);
    $dvt$$9$$ = (1 - $DvtSvgFilterUtils$$) * ($DvtSvgPatternFillUtils$$ - this.$_bounds$.y);
    $DvtSvgFilterUtils$$ = ($DvtSvgFilterUtils$$ - 1) * (this.$_bounds$.y + this.$_bounds$.$h$ - $DvtSvgPatternFillUtils$$);
    return{$dxMin$:$DvtSvgGradientUtils$$ - $DvtSvgShadowUtils$$, $dxMax$:$DvtSvgFilterContext$$ - $DvtSvgShadowUtils$$, $dyMin$:$dvt$$9$$ - $DvtSvgImageFillUtils$$, $dyMax$:$DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$}
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$zoomBy$ = function $$dvt$$9$$$$PanZoomHandler$$$$zoomBy$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = (1 / $DvtSvgShadowUtils$$ - 1) / 2;
    $DvtSvgShadowUtils$$ = -$DvtSvgPatternFillUtils$$ * this.$_bounds$.$w$;
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ * this.$_bounds$.$w$, $DvtSvgGradientUtils$$ = -$DvtSvgPatternFillUtils$$ * this.$_bounds$.$h$, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ * this.$_bounds$.$h$;
    return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_ZOOM$, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$panBy$ = function $$dvt$$9$$$$PanZoomHandler$$$$panBy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ * this.$_bounds$.$w$ * ($dvt$$9$$.$Agent$.$isRightToLeft$(this.$_context$) ? -1 : 1), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ * this.$_bounds$.$h$;
    return new $dvt$$9$$.$PanZoomEvent$($dvt$$9$$.$PanZoomEvent$.$SUBTYPE_PAN_END$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$setPanCursor$ = function $$dvt$$9$$$$PanZoomHandler$$$$setPanCursor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$9$$.$Agent$.$isPlatformIE$() || ($DvtSvgShadowUtils$$ && (this.$_panUpCursor$ = "url(" + $DvtSvgShadowUtils$$ + ") 8 8, auto"), $DvtSvgPatternFillUtils$$ && (this.$_panDownCursor$ = "url(" + $DvtSvgPatternFillUtils$$ + ") 8 8, auto"))
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.getCursor = function $$dvt$$9$$$$PanZoomHandler$$$getCursor$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ == $JSCompiler_alias_NULL$$ || this.$isWithinBounds$($DvtSvgShadowUtils$$) ? this.$_panOn$ ? this.$_panDownCursor$ ? this.$_panDownCursor$ : "move" : this.$_panUpCursor$ ? this.$_panUpCursor$ : "move" : "inherit"
  };
  $dvt$$9$$.$PanZoomHandler$.prototype.$isWithinBounds$ = function $$dvt$$9$$$$PanZoomHandler$$$$isWithinBounds$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    return this.$_bounds$.$containsPoint$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y)
  };
  $dvt$$9$$.$TooltipManager$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$TooltipManager$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$TooltipManager$.prototype.$showDatatip$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$TooltipManager$.prototype.$showTooltip$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$TooltipManager$.prototype.$hideTooltip$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$CategoryRolloverHandler$ = function $$dvt$$9$$$$CategoryRolloverHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_callback$ = $DvtSvgShadowUtils$$;
    this.$_source$ = this.$_callbackObj$ = $DvtSvgPatternFillUtils$$;
    this.$_bHighlightMode$ = $JSCompiler_alias_FALSE$$;
    this.$_highlightModeTimeout$ = this.$_hoverDelayCallback$ = $JSCompiler_alias_NULL$$;
    this.$_hoverDelay$ = $dvt$$9$$.$CategoryRolloverHandler$.$_HOVER_DELAY$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$CategoryRolloverHandler$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$CategoryRolloverHandler$.$_HOVER_DELAY$ = 50;
  $dvt$$9$$.$CategoryRolloverHandler$.$_HOVER_TIMEOUT$ = 1E3;
  $dvt$$9$$.$CategoryRolloverHandler$.$_FADE_OUT_OPACITY$ = 0.35;
  $dvt$$9$$.$CategoryRolloverHandler$.prototype.$processEvent$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$$processEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && 0 != $DvtSvgPatternFillUtils$$.length) {
      this.$_hoverDelayCallback$ && (clearTimeout(this.$_hoverDelayCallback$), this.$_hoverDelayCallback$ = $JSCompiler_alias_NULL$$);
      var $dvt$$9$$ = $DvtSvgShadowUtils$$._highlightType;
      "over" == $dvt$$9$$ ? (this.$_hoverDelayCallback$ = setTimeout(this.$GetRolloverCallback$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), this.$_bHighlightMode$ ? this.$_hoverDelay$ : $DvtSvgImageFillUtils$$), this.$_highlightModeTimeout$ && (clearInterval(this.$_highlightModeTimeout$), this.$_highlightModeTimeout$ = $JSCompiler_alias_NULL$$)) : "out" == $dvt$$9$$ && this.$_bHighlightMode$ && (this.$_hoverDelayCallback$ = setTimeout(this.$GetRolloutCallback$($DvtSvgShadowUtils$$, 
      $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), this.$_hoverDelay$))
    }
  };
  $dvt$$9$$.$CategoryRolloverHandler$.prototype.$GetRolloverCallback$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$$GetRolloverCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$9$$.$Obj$.$createCallback$(this, function() {
      this.$_bHighlightMode$ = $JSCompiler_alias_TRUE$$;
      $dvt$$9$$.$CategoryRolloverHandler$.$highlight$($DvtSvgShadowUtils$$.categories, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
      this.$_callback$ && this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this.$_source$)
    })
  };
  $dvt$$9$$.$CategoryRolloverHandler$.prototype.$GetRolloutCallback$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$$GetRolloutCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$9$$.$Obj$.$createCallback$(this, function() {
      $dvt$$9$$.$CategoryRolloverHandler$.$highlight$($DvtSvgShadowUtils$$.categories, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
      this.$SetHighlightModeTimeout$();
      this.$_callback$ && this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this.$_source$)
    })
  };
  $dvt$$9$$.$CategoryRolloverHandler$.$highlight$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$highlight$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if($DvtSvgPatternFillUtils$$) {
      $DvtSvgGradientUtils$$ = !$DvtSvgGradientUtils$$ ? $dvt$$9$$.$CategoryRolloverHandler$.$_FADE_OUT_OPACITY$ : $DvtSvgGradientUtils$$;
      for(var $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++) {
        var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$];
        if($DvtSvgFilterContext$$ && $DvtSvgFilterContext$$.$getCategories$) {
          var $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$ ? $dvt$$9$$.$CategoryRolloverHandler$.$_hasAnyCategory$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$) : $dvt$$9$$.$CategoryRolloverHandler$.$_hasAllCategories$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$);
          $dvt$$9$$.$CategoryRolloverHandler$.$_highlightObj$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length && !$DvtSvgImplFactory$$, $DvtSvgGradientUtils$$)
        }
      }
    }
  };
  $dvt$$9$$.$CategoryRolloverHandler$.$_highlightObj$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$_highlightObj$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgImageFillUtils$$ : 1;
    $DvtSvgShadowUtils$$.$highlight$ ? $DvtSvgShadowUtils$$.$highlight$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getDisplayables$(), $dvt$$9$$.$CategoryRolloverHandler$.$_updateAlpha$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$))
  };
  $dvt$$9$$.$CategoryRolloverHandler$.$_updateAlpha$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$_updateAlpha$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$) {
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$].$setAlpha$($DvtSvgPatternFillUtils$$)
      }
    }
  };
  $dvt$$9$$.$CategoryRolloverHandler$.$_hasAnyCategory$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$_hasAnyCategory$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return!$DvtSvgShadowUtils$$ || !$DvtSvgShadowUtils$$.$getCategories$ ? $JSCompiler_alias_FALSE$$ : $dvt$$9$$.$ArrayUtils$.$hasAnyItem$($DvtSvgShadowUtils$$.$getCategories$(), $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$CategoryRolloverHandler$.$_hasAllCategories$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$_hasAllCategories$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return!$DvtSvgShadowUtils$$ || !$DvtSvgShadowUtils$$.$getCategories$ ? $JSCompiler_alias_FALSE$$ : $dvt$$9$$.$ArrayUtils$.$hasAllItems$($DvtSvgShadowUtils$$.$getCategories$(), $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$CategoryRolloverHandler$.prototype.$SetHighlightMode$ = $JSCompiler_set$$("$_bHighlightMode$");
  $dvt$$9$$.$CategoryRolloverHandler$.prototype.$SetHighlightModeTimeout$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$$SetHighlightModeTimeout$$() {
    this.$_highlightModeTimeout$ = setTimeout($dvt$$9$$.$Obj$.$createCallback$(this, function() {
      this.$SetHighlightMode$($JSCompiler_alias_FALSE$$)
    }), $dvt$$9$$.$CategoryRolloverHandler$.$_HOVER_TIMEOUT$)
  };
  $dvt$$9$$.$CategoryRolloverHandler$.prototype.$setHoverDelay$ = function $$dvt$$9$$$$CategoryRolloverHandler$$$$setHoverDelay$$() {
    this.$_hoverDelay$ = 100
  };
  $dvt$$9$$.$EventManager$ = function $$dvt$$9$$$$EventManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$EventManager$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$EventManager$.$CLEAR_SELECTION_ACTION_TYPE$ = "clearSelectionActionType";
  $dvt$$9$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_START$ = "touchStart";
  $dvt$$9$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_HOLD$ = "touchHold";
  $dvt$$9$$.$EventManager$.$TOUCH_RESPONSE_AUTO$ = "auto";
  $dvt$$9$$.$EventManager$.$_TOUCH_RESPONSE_PADDING_CHECK$ = 10;
  $dvt$$9$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$ = "tooltipDisplayed";
  $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$ = "currentTarget";
  $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$ = "popupDisplayed";
  $dvt$$9$$.$EventManager$.prototype.Init = function $$dvt$$9$$$$EventManager$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
    this.$_touchMap$ = {};
    this.$_marqueeHandler$ = this.$_selectionHandler$ = $JSCompiler_alias_NULL$$;
    this.$PopupHandler$ = new $DvtPopupBehaviorHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$ClientBehaviorHandler$ = this.$CreateClientBehaviorHandler$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$KeyboardHandler$ = $JSCompiler_alias_NULL$$;
    this.$RolloverHandler$ = this.$CreateCategoryRolloverHandler$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$setTooltipsEnabled$($JSCompiler_alias_TRUE$$);
    $DvtSvgShadowUtils$$.$_stage$.getId();
    this.$CustomTooltipManager$ = this.$_context$.$getCustomTooltipManager$();
    this.$CustomTooltipManager$.$addTooltipEventListener$($DvtActionTooltipEvent$$.$TOOLTIP_CLOSED_TYPE$, this.$OnActionTooltipClosed$, this);
    this.$CustomTooltipManager$.$addTooltipEventListener$($DvtActionTooltipEvent$$.$TOOLTIP_STARTED_TYPE$, this.$OnActionTooltipStarted$, this);
    this.$TouchManager$ = $JSCompiler_alias_NULL$$;
    $dvt$$9$$.$Agent$.$isTouchDevice$() && (this.$TouchManager$ = new $dvt$$9$$.$TouchManager$("touchmanager", this.$_context$));
    this.$_focusedObj$ = $JSCompiler_alias_NULL$$;
    this.$_shouldDisplayKeyboardFocus$ = $JSCompiler_alias_FALSE$$;
    this.$_rolloverTypes$ = [];
    this.$_keyboardHandlers$ = [this];
    this.$_currentKeyboardHandlerIdx$ = -1
  };
  $dvt$$9$$.$EventManager$.prototype.$getCtx$ = $JSCompiler_get$$("$_context$");
  $dvt$$9$$.$EventManager$.prototype.$associate$ = function $$dvt$$9$$$$EventManager$$$$associate$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if($DvtSvgShadowUtils$$) {
      if(!$DvtSvgShadowUtils$$.$_logicalObjects$ || $DvtSvgImageFillUtils$$) {
        $DvtSvgShadowUtils$$.$_logicalObjects$ = []
      }
      $DvtSvgShadowUtils$$.$_logicalObjects$.push({$logicalObject$:$DvtSvgPatternFillUtils$$, $eventManager$:this});
      !$dvt$$9$$.$Agent$.$isEnvironmentBrowser$() && $DvtSvgShadowUtils$$.$getImpl$().$setLogicalObj$ && $DvtSvgShadowUtils$$.$getImpl$().$setLogicalObj$($DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$addListeners$ = function $$dvt$$9$$$$EventManager$$$$addListeners$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($dvt$$9$$.$Agent$.$isTouchDevice$() ? (this.$hideTooltip$(), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$TouchEvent$.$TOUCHSTART$, this.$OnTouchStartBubble$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$TouchEvent$.$TOUCHMOVE$, this.$OnTouchMoveBubble$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$TouchEvent$.$TOUCHEND$, this.$OnTouchEndBubble$, $JSCompiler_alias_FALSE$$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$, 
    this.$_preOnComponentTouchHoverStart$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$, this.$_preOnComponentTouchHoverMove$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$, this.$_preOnComponentTouchHoverEnd$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, this.$_preOnComponentTouchHoverOut$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, 
    this.$_preOnComponentTouchHoverOver$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$, this.$_preOnComponentTouchClick$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$, this.$_preOnComponentTouchDblClick$, this)) : ($DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$CLICK$, this.$PreOnClick$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$DBLCLICK$, 
    this.$PreOnDblClick$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$("contextmenu", this.$PreOnContextMenu$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEMOVE$, this.$PreOnMouseMove$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOVER$, this.$PreOnMouseOver$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOUT$, 
    this.$PreOnMouseOut$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEDOWN$, this.$PreOnMouseDown$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEUP$, this.$PreOnMouseUp$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$KeyboardEvent$.$KEYDOWN$, this.$OnKeyDown$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$KeyboardEvent$.$KEYPRESS$, 
    this.$OnKeyPress$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$KeyboardEvent$.$KEYUP$, this.$OnKeyUp$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($DvtFocusEvent$$.$FOCUS$, this.$OnFocus$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$addEvtListener$($DvtFocusEvent$$.$BLUR$, this.$OnBlur$, $JSCompiler_alias_FALSE$$, this)))
  };
  $dvt$$9$$.$EventManager$.prototype.$removeListeners$ = function $$dvt$$9$$$$EventManager$$$$removeListeners$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && (this.$hideTooltip$(), $dvt$$9$$.$Agent$.$isTouchDevice$() ? ($DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$TouchEvent$.$TOUCHSTART$, this.$OnTouchStartBubble$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$TouchEvent$.$TOUCHMOVE$, this.$OnTouchMoveBubble$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$TouchEvent$.$TOUCHEND$, this.$OnTouchEndBubble$, $JSCompiler_alias_FALSE$$, this), 
    this.$TouchManager$.$removeTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$, this.$_preOnComponentTouchHoverStart$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$, this.$_preOnComponentTouchHoverMove$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$, this.$_preOnComponentTouchHoverEnd$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, 
    this.$_preOnComponentTouchHoverOut$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, this.$_preOnComponentTouchHoverOver$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$, this.$_preOnComponentTouchClick$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$, this.$_preOnComponentTouchDblClick$, this)) : ($DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$CLICK$, 
    this.$PreOnClick$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$DBLCLICK$, this.$PreOnDblClick$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$("contextmenu", this.$PreOnContextMenu$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEMOVE$, this.$PreOnMouseMove$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOVER$, 
    this.$PreOnMouseOver$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEOUT$, this.$PreOnMouseOut$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEDOWN$, this.$PreOnMouseDown$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEUP$, this.$PreOnMouseUp$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$KeyboardEvent$.$KEYDOWN$, 
    this.$OnKeyDown$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$KeyboardEvent$.$KEYUP$, this.$OnKeyUp$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$9$$.$KeyboardEvent$.$KEYPRESS$, this.$OnKeyPress$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($DvtFocusEvent$$.$FOCUS$, this.$OnFocus$, $JSCompiler_alias_FALSE$$, this), $DvtSvgShadowUtils$$.$removeEvtListener$($DvtFocusEvent$$.$BLUR$, this.$OnBlur$, 
    $JSCompiler_alias_FALSE$$, this)))
  };
  $dvt$$9$$.$EventManager$.prototype.$destroy$ = function $$dvt$$9$$$$EventManager$$$$destroy$$() {
    this.$CustomTooltipManager$ && (this.$CustomTooltipManager$.$removeTooltipEventListener$($DvtActionTooltipEvent$$.$TOOLTIP_CLOSED_TYPE$, this.$OnActionTooltipClosed$, this), this.$CustomTooltipManager$.$removeTooltipEventListener$($DvtActionTooltipEvent$$.$TOOLTIP_STARTED_TYPE$, this.$OnActionTooltipStarted$, this))
  };
  $dvt$$9$$.$EventManager$.prototype.$PreEventBubble$ = function $$dvt$$9$$$$EventManager$$$$PreEventBubble$$($DvtSvgShadowUtils$$) {
    this.$TouchManager$.$preEventBubble$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$setSelectionHandler$ = $JSCompiler_set$$("$_selectionHandler$");
  $dvt$$9$$.$EventManager$.prototype.$getSelectionHandler$ = $JSCompiler_get$$("$_selectionHandler$");
  $dvt$$9$$.$EventManager$.prototype.$setDragSource$ = function $$dvt$$9$$$$EventManager$$$$setDragSource$$($DvtSvgShadowUtils$$) {
    this.$DragSource$ = $DvtSvgShadowUtils$$;
    $dvt$$9$$.$Agent$.$isTouchDevice$() && this.$DragSource$.$setTouchManager$(this.$TouchManager$)
  };
  $dvt$$9$$.$EventManager$.prototype.$setContextMenuHandler$ = $JSCompiler_set$$("$ContextMenuHandler$");
  $dvt$$9$$.$EventManager$.prototype.$setKeyboardHandler$ = function $$dvt$$9$$$$EventManager$$$$setKeyboardHandler$$($DvtSvgShadowUtils$$) {
    $dvt$$9$$.$Agent$.$isTouchDevice$() || (this.$KeyboardHandler$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$setFocusObj$ = function $$dvt$$9$$$$EventManager$$$$setFocusObj$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getFocus$();
    $DvtSvgShadowUtils$$ != $DvtSvgPatternFillUtils$$ && (this.$setFocus$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$hideKeyboardFocusEffect$(), this.$ShowKeyboardFocusByDefault$() && $DvtSvgShadowUtils$$.$showKeyboardFocusEffect$(), -1 < this.$_currentKeyboardHandlerIdx$ && this.$_currentKeyboardHandlerIdx$ < this.$_keyboardHandlers$.length && ($DvtSvgShadowUtils$$ = this.$_keyboardHandlers$[this.$_currentKeyboardHandlerIdx$], $DvtSvgShadowUtils$$ != this && $DvtSvgShadowUtils$$.$hideKeyboardFocusEffect$()));
    this.$setCurrentKeyboardHandler$(this)
  };
  $dvt$$9$$.$EventManager$.prototype.$setFocus$ = function $$dvt$$9$$$$EventManager$$$$setFocus$$($DvtSvgShadowUtils$$) {
    this.$KeyboardHandler$ && (this.$_focusedObj$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$getFocus$ = function $$dvt$$9$$$$EventManager$$$$getFocus$$() {
    return this.$KeyboardHandler$ ? this.$_focusedObj$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$EventManager$.prototype.$setFocused$ = function $$dvt$$9$$$$EventManager$$$$setFocused$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getFocus$();
    $DvtSvgPatternFillUtils$$ && this.$KeyboardHandler$ && ($DvtSvgShadowUtils$$ ? this.$_shouldDisplayKeyboardFocus$ && (0 <= this.$_currentKeyboardHandlerIdx$ && this.$_currentKeyboardHandlerIdx$ < this.$_keyboardHandlers$.length && this.$_keyboardHandlers$[this.$_currentKeyboardHandlerIdx$] === this) && $DvtSvgPatternFillUtils$$.$showKeyboardFocusEffect$() : $DvtSvgPatternFillUtils$$.$hideKeyboardFocusEffect$());
    $DvtSvgShadowUtils$$ || (this.$_shouldDisplayKeyboardFocus$ = $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$ShowKeyboardFocusByDefault$ = $JSCompiler_returnArg$$($JSCompiler_alias_FALSE$$);
  $dvt$$9$$.$EventManager$.prototype.$setTooltipsEnabled$ = $JSCompiler_set$$("$_tooltipsEnabled$");
  $dvt$$9$$.$EventManager$.prototype.$getTooltipsEnabled$ = $JSCompiler_get$$("$_tooltipsEnabled$");
  $dvt$$9$$.$EventManager$.prototype.$GetLogicalObject$ = function $$dvt$$9$$$$EventManager$$$$GetLogicalObject$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$.$logicalObject$ : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$EventManager$.prototype.$GetLogicalObjectAndDisplayable$ = function $$dvt$$9$$$$EventManager$$$$GetLogicalObjectAndDisplayable$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$;$DvtSvgImageFillUtils$$;) {
      if($DvtSvgImageFillUtils$$.$_logicalObjects$) {
        for(var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.$_logicalObjects$.length;$DvtSvgGradientUtils$$++) {
          var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.$_logicalObjects$[$DvtSvgGradientUtils$$];
          if($DvtSvgFilterUtils$$.$eventManager$ == this) {
            return $DvtSvgGradientUtils$$ = {}, $DvtSvgGradientUtils$$.$logicalObject$ = $DvtSvgFilterUtils$$.$logicalObject$, $DvtSvgGradientUtils$$.$displayable$ = $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$
          }
        }
      }
      $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $JSCompiler_alias_NULL$$ : $DvtSvgImageFillUtils$$.getParent()
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$EventManager$.prototype.$_getShowPopupBehaviors$ = function $$dvt$$9$$$$EventManager$$$$_getShowPopupBehaviors$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getShowPopupBehaviors$) {
      return $DvtSvgShadowUtils$$.$getShowPopupBehaviors$()
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$_getClientBehaviors$ = function $$dvt$$9$$$$EventManager$$$$_getClientBehaviors$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getClientBehaviors$) {
      return $DvtSvgShadowUtils$$.$getClientBehaviors$()
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$GetContextMenuType$ = function $$dvt$$9$$$$EventManager$$$$GetContextMenuType$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = ($DvtSvgShadowUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$)) ? $DvtSvgShadowUtils$$.getSelection().length : 0;
    return 0 >= $DvtSvgShadowUtils$$ ? $dvt$$9$$.$ContextMenuHandler$.$TYPE_BODY_CONTEXT_MENU$ : 1 == $DvtSvgShadowUtils$$ ? $dvt$$9$$.$ContextMenuHandler$.$TYPE_CONTEXT_MENU$ : $dvt$$9$$.$ContextMenuHandler$.$TYPE_MULTI_SELECT_CONTEXT_MENU$
  };
  $dvt$$9$$.$EventManager$.prototype.$GetTooltipColor$ = function $$dvt$$9$$$$EventManager$$$$GetTooltipColor$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getDatatipColor$) {
      return $DvtSvgShadowUtils$$.$getDatatipColor$()
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$FireEvent$ = function $$dvt$$9$$$$EventManager$$$$FireEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_callback$ && this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$fireSelectionEvent$ = function $$dvt$$9$$$$EventManager$$$$fireSelectionEvent$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$)) {
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getSelectedIds$(), $DvtSvgShadowUtils$$ = $dvt$$9$$.$EventFactory$.$newSelectionEvent$($DvtSvgShadowUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$PreOnClick$ = function $$dvt$$9$$$$EventManager$$$$PreOnClick$$($DvtSvgShadowUtils$$) {
    if(this.$IsDoubleClickable$($DvtSvgShadowUtils$$)) {
      if(this.$_clickTimer$ && this.$_clickTimer$.$isRunning$()) {
        var $DvtSvgPatternFillUtils$$ = this.$_savedClickEvent$;
        if($DvtSvgShadowUtils$$.pageX == $DvtSvgPatternFillUtils$$.pageX && $DvtSvgShadowUtils$$.pageY == $DvtSvgPatternFillUtils$$.pageY) {
          this.$_savedClickCount$++;
          return
        }
        this.$_clickTimer$.stop();
        this.$_onClickTimerEnd$()
      }
      this.$_savedClickEvent$ = $DvtSvgShadowUtils$$;
      this.$_savedClickCount$ = 1;
      this.$_clickTimer$ || (this.$_clickTimer$ = new $dvt$$9$$.$Timer$(this.$_context$, 250, this.$_onClickTimerEnd$, this, 1));
      this.$_clickTimer$.reset();
      this.$_clickTimer$.start()
    }else {
      this.$_propagateEvent$($dvt$$9$$.$MouseEvent$.$CLICK$, $DvtSvgShadowUtils$$, this.$OnClick$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$_onClickTimerEnd$ = function $$dvt$$9$$$$EventManager$$$$_onClickTimerEnd$$() {
    var $DvtSvgShadowUtils$$ = this.$_savedClickEvent$;
    this.$_savedClickEvent$ = $JSCompiler_alias_NULL$$;
    this.$_savedClickCount$ = 0;
    $DvtSvgShadowUtils$$ && this.$_propagateEvent$($dvt$$9$$.$MouseEvent$.$CLICK$, $DvtSvgShadowUtils$$, this.$OnClick$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnClick$ = function $$dvt$$9$$$$EventManager$$$$OnClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$));
    this.$OnClickInternal$($DvtSvgShadowUtils$$);
    this.$ProcessSelectionEventHelper$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey);
    this.$_shouldDisplayKeyboardFocus$ = $JSCompiler_alias_FALSE$$;
    if($DvtSvgPatternFillUtils$$) {
      if(this.$KeyboardHandler$ && $DvtSvgPatternFillUtils$$.$getNextNavigable$) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getNextNavigable$($DvtSvgShadowUtils$$);
        this.$setFocusObj$($DvtSvgImageFillUtils$$)
      }
      $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$;
      this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgImageFillUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
      $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY), ($DvtSvgImageFillUtils$$ = this.$PopupHandler$.$processPopupHelper$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_ACTION$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CLICK$], $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$)) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, 
      $JSCompiler_alias_TRUE$$));
      $DvtSvgImageFillUtils$$ || ($DvtSvgShadowUtils$$ = this.$_getClientBehaviors$($DvtSvgPatternFillUtils$$)) && ($DvtSvgImageFillUtils$$ = this.$ClientBehaviorHandler$.$processClick$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$));
      !$DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$.$isCommandComponent$ && $DvtSvgPatternFillUtils$$.$isCommandComponent$()) && ($DvtSvgShadowUtils$$ = $dvt$$9$$.$EventFactory$.$newActionEvent$("action", $DvtSvgPatternFillUtils$$.getId()), $dvt$$9$$.$EventManager$.$_addContextInfo$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$))
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$IsDoubleClickable$ = function $$dvt$$9$$$$EventManager$$$$IsDoubleClickable$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.target;
    for($DvtSvgShadowUtils$$ = this.$GetLogicalObject$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$));$DvtSvgPatternFillUtils$$;) {
      var $DvtSvgImageFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_TRUE$$);
      if($DvtSvgImageFillUtils$$) {
        if($DvtSvgImageFillUtils$$.$isDoubleClickable$ && $DvtSvgImageFillUtils$$.$isDoubleClickable$() || this.$PopupHandler$.$hasPopup$($DvtSvgShadowUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$])) {
          return $JSCompiler_alias_TRUE$$
        }
        if(!this.$IsPropagationEnabled$($dvt$$9$$.$MouseEvent$.$DBLCLICK$, $JSCompiler_alias_NULL$$, $DvtSvgPatternFillUtils$$)) {
          break
        }
      }
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.getParent()
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$ProcessSelectionEventHelper$ = function $$dvt$$9$$$$EventManager$$$$ProcessSelectionEventHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$);
    $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.$processClick$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && this.$fireSelectionEvent$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$PreOnDblClick$ = function $$dvt$$9$$$$EventManager$$$$PreOnDblClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$IsDoubleClickable$($DvtSvgShadowUtils$$);
    ($DvtSvgPatternFillUtils$$ && 2 === this.$_savedClickCount$ || !$DvtSvgPatternFillUtils$$) && this.$_propagateEvent$($dvt$$9$$.$MouseEvent$.$DBLCLICK$, $DvtSvgShadowUtils$$, this.$OnDblClick$);
    this.$_savedClickCount$ = 0
  };
  $dvt$$9$$.$EventManager$.prototype.$OnDblClick$ = function $$dvt$$9$$$$EventManager$$$$OnDblClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$));
    if(this.$_clickTimer$ && this.$_clickTimer$.$isRunning$()) {
      this.$_clickTimer$.stop(), this.$_savedClickEvent$ = $JSCompiler_alias_NULL$$
    }else {
      if($dvt$$9$$.$Agent$.$isPlatformIE$() && 11 > $dvt$$9$$.$Agent$.$getVersion$()) {
        if(!$DvtSvgPatternFillUtils$$) {
          return
        }
        if((!$DvtSvgPatternFillUtils$$.$isDoubleClickable$ || !$DvtSvgPatternFillUtils$$.$isDoubleClickable$()) && !this.$PopupHandler$.$hasPopup$($DvtSvgPatternFillUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$])) {
          this.$OnClick$($DvtSvgShadowUtils$$);
          return
        }
      }
    }
    this.$OnDblClickInternal$($DvtSvgShadowUtils$$);
    if($DvtSvgPatternFillUtils$$) {
      var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$;
      this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgImageFillUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
      $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY), ($DvtSvgImageFillUtils$$ = this.$PopupHandler$.$processPopupHelper$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$], $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$)) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, 
      $JSCompiler_alias_TRUE$$))
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$PreOnContextMenu$ = function $$dvt$$9$$$$EventManager$$$$PreOnContextMenu$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$("contextmenu", $DvtSvgShadowUtils$$, this.$OnContextMenu$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnContextMenu$ = function $$dvt$$9$$$$EventManager$$$$OnContextMenu$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$));
    $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$getNextNavigable$ && this.$setFocus$($DvtSvgPatternFillUtils$$);
    this.$_onContextMenuHelper$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_onContextMenuHelper$ = function $$dvt$$9$$$$EventManager$$$$_onContextMenuHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_processActionPopup$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY)) && $DvtSvgShadowUtils$$.preventDefault();
    $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$.$isSelectable$ && $DvtSvgPatternFillUtils$$.$isSelectable$()) && this.$ProcessSelectionEventHelper$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey);
    if(this.$ContextMenuHandler$) {
      var $DvtSvgImageFillUtils$$ = this.$GetContextMenuType$($DvtSvgPatternFillUtils$$);
      this.$ProcessContextMenuHandler$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$)
    }else {
      this.$ProcessContextMenuPopup$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$ProcessContextMenuHandler$ = function $$dvt$$9$$$$EventManager$$$$ProcessContextMenuHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$ContextMenuHandler$.show($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$ && (this.$_context$.$getTooltipManager$().$hideTooltip$(), this.$PopupHandler$.$HidePopup$($DvtSvgShadowUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgImageFillUtils$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$ProcessContextMenuPopup$ = function $$dvt$$9$$$$EventManager$$$$ProcessContextMenuPopup$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$;
    this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgImageFillUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
    if(!$DvtSvgImageFillUtils$$) {
      var $DvtSvgGradientUtils$$ = this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$);
      if($DvtSvgGradientUtils$$) {
        var $DvtSvgFilterUtils$$;
        $dvt$$9$$.$Agent$.$isTouchDevice$() ? ($DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$touch$, $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$.pageX, $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.pageY) : ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.pageX, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.pageY);
        $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Point$($DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
        $DvtSvgImageFillUtils$$ = this.$PopupHandler$.$processPopupHelper$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CONTEXT_MENU$], $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$)
      }
      $DvtSvgImageFillUtils$$ && (this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$), $DvtSvgShadowUtils$$.preventDefault())
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$OnKeyDown$ = function $$dvt$$9$$$$EventManager$$$$OnKeyDown$$($DvtSvgShadowUtils$$) {
    this.$_bKeyDown$ = $JSCompiler_alias_TRUE$$;
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode, $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$;
    $DvtSvgGradientUtils$$ = 0 > this.$_currentKeyboardHandlerIdx$ || this.$_currentKeyboardHandlerIdx$ > this.$_keyboardHandlers$.length ? $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$TAB$ && $DvtSvgShadowUtils$$.shiftKey ? this.$_keyboardHandlers$.length - 1 : 0 : this.$_currentKeyboardHandlerIdx$;
    $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$TAB$ && $DvtSvgShadowUtils$$.shiftKey ? -1 : 1;
    for($DvtSvgGradientUtils$$;0 <= $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$ < this.$_keyboardHandlers$.length && !$DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$ += $DvtSvgFilterUtils$$) {
      if($DvtSvgImageFillUtils$$ = this.$_keyboardHandlers$[$DvtSvgGradientUtils$$], $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ === this ? this.$ProcessKeyboardEvent$($DvtSvgShadowUtils$$) : $DvtSvgImageFillUtils$$.$handleKeyboardEvent$($DvtSvgShadowUtils$$)) {
        this.$_currentKeyboardHandlerIdx$ = $DvtSvgGradientUtils$$
      }
    }
    !$DvtSvgImageFillUtils$$ && ($DvtSvgShadowUtils$$.keyCode == $dvt$$9$$.$KeyboardEvent$.$UP_ARROW$ || $DvtSvgShadowUtils$$.keyCode == $dvt$$9$$.$KeyboardEvent$.$DOWN_ARROW$ || $DvtSvgShadowUtils$$.keyCode == $dvt$$9$$.$KeyboardEvent$.$LEFT_ARROW$ || $DvtSvgShadowUtils$$.keyCode == $dvt$$9$$.$KeyboardEvent$.$RIGHT_ARROW$) && $dvt$$9$$.$EventManager$.$consumeEvent$($DvtSvgShadowUtils$$);
    !$DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$ == $dvt$$9$$.$KeyboardEvent$.$TAB$ && (this.$_currentKeyboardHandlerIdx$ = -1);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventManager$.prototype.$handleKeyboardEvent$ = function $$dvt$$9$$$$EventManager$$$$handleKeyboardEvent$$($DvtSvgShadowUtils$$) {
    return this.$OnKeyDown$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$hideKeyboardFocusEffect$ = function $$dvt$$9$$$$EventManager$$$$hideKeyboardFocusEffect$$() {
    var $DvtSvgShadowUtils$$ = this.$getFocus$();
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isShowingKeyboardFocusEffect$() && $DvtSvgShadowUtils$$.$hideKeyboardFocusEffect$()
  };
  $dvt$$9$$.$EventManager$.prototype.$ProcessKeyboardEvent$ = function $$dvt$$9$$$$EventManager$$$$ProcessKeyboardEvent$$($DvtSvgShadowUtils$$) {
    if(!this.$KeyboardHandler$) {
      return $JSCompiler_alias_FALSE$$
    }
    this.$hideTooltip$();
    var $DvtSvgPatternFillUtils$$ = this.$getFocus$(), $DvtSvgImageFillUtils$$ = $JSCompiler_alias_NULL$$;
    if($DvtSvgShadowUtils$$.keyCode == $dvt$$9$$.$KeyboardEvent$.$TAB$ && $DvtSvgPatternFillUtils$$) {
      if($DvtSvgPatternFillUtils$$.$isShowingKeyboardFocusEffect$()) {
        return $DvtSvgPatternFillUtils$$.$hideKeyboardFocusEffect$(), this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $JSCompiler_alias_FALSE$$), ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.shiftKey ? this.$_context$.$previousKeyboardFocus$() : this.$_context$.$nextKeyboardFocus$()) ? ($DvtSvgPatternFillUtils$$.$FireListener$($DvtSvgShadowUtils$$, $JSCompiler_alias_FALSE$$), $dvt$$9$$.$EventManager$.$consumeEvent$($DvtSvgShadowUtils$$), $JSCompiler_alias_TRUE$$) : 
        $JSCompiler_alias_FALSE$$
      }
      this.$ShowFocusEffect$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
      this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $JSCompiler_alias_TRUE$$);
      $dvt$$9$$.$EventManager$.$consumeEvent$($DvtSvgShadowUtils$$);
      return $JSCompiler_alias_TRUE$$
    }
    return $DvtSvgPatternFillUtils$$ && this.$KeyboardHandler$.$isContextMenuEvent$($DvtSvgShadowUtils$$) ? ($DvtSvgPatternFillUtils$$.$getContextMenuLocation$ ? $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getContextMenuLocation$() : ($DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$(), $DvtSvgImageFillUtils$$ = $dvt$$9$$.$Agent$.$isRightToLeft$(this.$_context$) ? new $dvt$$9$$.$Point$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y) : new $dvt$$9$$.$Point$($DvtSvgImageFillUtils$$.x + 
    $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$.y)), $DvtSvgShadowUtils$$ = $dvt$$9$$.$DomEventFactory$.$generateMouseEventFromKeyboardEvent$($DvtSvgShadowUtils$$, this.$_context$, $dvt$$9$$.$MouseEvent$.$CLICK$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y), $DvtSvgShadowUtils$$.ctrlKey = $JSCompiler_alias_FALSE$$, this.$_onContextMenuHelper$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), $JSCompiler_alias_TRUE$$) : ($DvtSvgImageFillUtils$$ = this.$KeyboardHandler$.$processKeyDown$($DvtSvgShadowUtils$$)) ? 
    (this.$setFocus$($DvtSvgImageFillUtils$$), this.$_shouldDisplayKeyboardFocus$ = $JSCompiler_alias_TRUE$$, $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$.$hideKeyboardFocusEffect$(), this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $JSCompiler_alias_FALSE$$)), this.$KeyboardHandler$.$isSelectionEvent$($DvtSvgShadowUtils$$) ? this.$ProcessSelectionEventHelper$($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$.shiftKey) : this.$KeyboardHandler$.$isMultiSelectEvent$($DvtSvgShadowUtils$$) && 
    this.$ProcessSelectionEventHelper$($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey), this.$ShowFocusEffect$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$), this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$), $JSCompiler_alias_TRUE$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$ShowFocusEffect$ = function $$dvt$$9$$$$EventManager$$$$ShowFocusEffect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$.$showKeyboardFocusEffect$();
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardTooltipLocation$ ? $DvtSvgPatternFillUtils$$.$getKeyboardTooltipLocation$() : $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$(this.$getCtx$().$_stage$).$getCenter$(), $DvtSvgImageFillUtils$$ = this.$getCtx$().$stageToPageCoords$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y);
    this.$ProcessObjectTooltip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$.$getTargetElem$());
    this.$UpdateActiveElement$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnKeyUp$ = function $$dvt$$9$$$$EventManager$$$$OnKeyUp$$($DvtSvgShadowUtils$$) {
    this.$_bKeyDown$ = $JSCompiler_alias_FALSE$$;
    this.$_handleExternalKeyboardFocus$ === $JSCompiler_alias_TRUE$$ && $DvtSvgShadowUtils$$.keyCode == $dvt$$9$$.$KeyboardEvent$.$TAB$ && (this.$_handleExternalKeyboardFocus$ = $JSCompiler_alias_FALSE$$, this.$_callbackObj$.$dispatchDisplayableEvent$($dvt$$9$$.$KeyboardEvent$.$KEYDOWN$, $DvtSvgShadowUtils$$));
    this.$KeyboardHandler$.$processKeyUp$($DvtSvgShadowUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_UP$])
  };
  $dvt$$9$$.$EventManager$.prototype.$OnKeyPress$ = function $$dvt$$9$$$$EventManager$$$$OnKeyPress$$($DvtSvgShadowUtils$$) {
    this.$KeyboardHandler$.$processKeyUp$($DvtSvgShadowUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_PRESS$])
  };
  $dvt$$9$$.$EventManager$.prototype.$PreOnMouseMove$ = function $$dvt$$9$$$$EventManager$$$$PreOnMouseMove$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$MouseEvent$.$MOUSEMOVE$, $DvtSvgShadowUtils$$, this.$OnMouseMove$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnMouseMove$ = function $$dvt$$9$$$$EventManager$$$$OnMouseMove$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.pageX, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.pageY, $DvtSvgGradientUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$_marqueeHandler$ && ($DvtSvgGradientUtils$$ = this.$_marqueeHandler$.$processDragMove$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$.ctrlKey)) && this.$_callback$.call(this.$_callbackObj$, $DvtSvgGradientUtils$$);
    var $DvtSvgFilterUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$);
    if($DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgFilterUtils$$)) {
      this.$ProcessObjectTooltip$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), this.$PopupHandler$.$processMouseMove$($DvtSvgPatternFillUtils$$), this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgFilterUtils$$)) && 
      this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_MOVE$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$), this.$DragSource$ && (!$DvtSvgShadowUtils$$.$dragSourceSet$ && this.$IsDragCandidate$($DvtSvgGradientUtils$$)) && 
      (this.$DragSource$.$setDragCandidate$($DvtSvgGradientUtils$$), $DvtSvgShadowUtils$$.$dragSourceSet$ = $JSCompiler_alias_TRUE$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$PreOnMouseOver$ = function $$dvt$$9$$$$EventManager$$$$PreOnMouseOver$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$MouseEvent$.$MOUSEOVER$, $DvtSvgShadowUtils$$, this.$OnMouseOver$);
    this.$_handlePreOverEvent$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_getDisplayableHierarchy$ = function $$dvt$$9$$$$EventManager$$$$_getDisplayableHierarchy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for(var $DvtSvgGradientUtils$$ = [];$DvtSvgShadowUtils$$;) {
      var $DvtSvgFilterUtils$$ = $JSCompiler_alias_TRUE$$;
      $DvtSvgPatternFillUtils$$ && ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$));
      $DvtSvgFilterUtils$$ && $DvtSvgGradientUtils$$.unshift($DvtSvgShadowUtils$$);
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getParent()
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$EventManager$.prototype.$_getRolloverHierarchy$ = function $$dvt$$9$$$$EventManager$$$$_getRolloverHierarchy$$($DvtSvgShadowUtils$$) {
    return this.$_getDisplayableHierarchy$($DvtSvgShadowUtils$$, this.$_isRolloverType$, this)
  };
  $dvt$$9$$.$EventManager$.prototype.$_isRolloverType$ = function $$dvt$$9$$$$EventManager$$$$_isRolloverType$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$)) {
      for(var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_rolloverTypes$.length;$DvtSvgPatternFillUtils$$++) {
        if($DvtSvgShadowUtils$$ instanceof this.$_rolloverTypes$[$DvtSvgPatternFillUtils$$]) {
          return $JSCompiler_alias_TRUE$$
        }
      }
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$addRolloverType$ = function $$dvt$$9$$$$EventManager$$$$addRolloverType$$($DvtSvgShadowUtils$$) {
    this.$_rolloverTypes$.push($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnRollOver$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$OnMouseOver$ = function $$dvt$$9$$$$EventManager$$$$OnMouseOver$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $JSCompiler_alias_NULL$$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$logicalObject$);
    var $DvtSvgFilterUtils$$ = new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
    if($DvtSvgGradientUtils$$) {
      var $DvtSvgFilterContext$$ = this.$getSelectionHandler$($DvtSvgGradientUtils$$);
      $DvtSvgFilterContext$$ && $DvtSvgFilterContext$$.$processMouseOver$($DvtSvgGradientUtils$$);
      this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, $JSCompiler_alias_TRUE$$);
      this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || $DvtSvgImageFillUtils$$ && this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, 
      $JSCompiler_alias_TRUE$$);
      this.$UpdateActiveElement$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$PreOnMouseOut$ = function $$dvt$$9$$$$EventManager$$$$PreOnMouseOut$$($DvtSvgShadowUtils$$) {
    this.$_handlePreOutEvent$($dvt$$9$$.$MouseEvent$.$MOUSEOUT$, $DvtSvgShadowUtils$$, this.$OnMouseOut$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnRollOut$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$OnMouseOut$ = function $$dvt$$9$$$$EventManager$$$$OnMouseOut$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$);
    if($DvtSvgImageFillUtils$$) {
      var $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$.relatedTarget);
      $DvtSvgImageFillUtils$$ != $DvtSvgGradientUtils$$ && (($DvtSvgGradientUtils$$ = this.$getSelectionHandler$($DvtSvgImageFillUtils$$)) && $DvtSvgGradientUtils$$.$processMouseOut$($DvtSvgImageFillUtils$$), this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_FALSE$$), this.$hideTooltip$(), this.$DragSource$ && !$DvtSvgShadowUtils$$.$dragSourceSet$ && (this.$DragSource$.$setDragCandidate$($JSCompiler_alias_NULL$$), $DvtSvgShadowUtils$$.$dragSourceSet$ = $JSCompiler_alias_TRUE$$), 
      this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgGradientUtils$$ = new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY), ($DvtSvgPatternFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgPatternFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgImageFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, 
      $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OUT$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$)))
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$PreOnMouseDown$ = function $$dvt$$9$$$$EventManager$$$$PreOnMouseDown$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$MouseEvent$.$MOUSEDOWN$, $DvtSvgShadowUtils$$, this.$OnMouseDown$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnMouseDown$ = function $$dvt$$9$$$$EventManager$$$$OnMouseDown$$($DvtSvgShadowUtils$$) {
    this.$_isInActionPopup$ && this.$CustomTooltipManager$.$closeActionTooltip$();
    if(this.$_marqueeHandler$) {
      var $DvtSvgPatternFillUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      ($DvtSvgPatternFillUtils$$ = this.$_marqueeHandler$.$processDragStart$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey)) && this.$_callback$.call(this.$_callbackObj$, $DvtSvgPatternFillUtils$$)
    }
    var $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
    this.$DragSource$ && (!$DvtSvgShadowUtils$$.$dragSourceSet$ && this.$IsDragCandidate$($DvtSvgPatternFillUtils$$)) && (this.$DragSource$.$setDragCandidate$($DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$.$dragSourceSet$ = $JSCompiler_alias_TRUE$$);
    if(!this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$)) {
      var $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_DOWN$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$PreOnMouseUp$ = function $$dvt$$9$$$$EventManager$$$$PreOnMouseUp$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$MouseEvent$.$MOUSEUP$, $DvtSvgShadowUtils$$, this.$OnMouseUp$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnMouseUp$ = function $$dvt$$9$$$$EventManager$$$$OnMouseUp$$($DvtSvgShadowUtils$$) {
    if(this.$_marqueeHandler$) {
      var $DvtSvgPatternFillUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      ($DvtSvgPatternFillUtils$$ = this.$_marqueeHandler$.$processDragEnd$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey)) && this.$_callback$.call(this.$_callbackObj$, $DvtSvgPatternFillUtils$$)
    }
    var $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
    if(!this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$)) {
      var $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_UP$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$_processTouchTooltip$ = function $$dvt$$9$$$$EventManager$$$$_processTouchTooltip$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$TouchManager$.$getTooltipInfo$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.touchIds, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.tooltipTarget;
    !this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$) && (0 == $DvtSvgImageFillUtils$$.length || !$DvtSvgPatternFillUtils$$) ? this.$hideTooltip$() : ($DvtSvgImageFillUtils$$ = this.$TouchManager$.$calcAveragePosition$($DvtSvgImageFillUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), this.$ProcessObjectTooltip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgPatternFillUtils$$, 
    $JSCompiler_alias_NULL$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$OnTouchStartBubble$ = function $$dvt$$9$$$$EventManager$$$$OnTouchStartBubble$$($DvtSvgShadowUtils$$) {
    this.$PreEventBubble$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$isInitialTouch$() && (this.$_popupJustClosed$ = $JSCompiler_alias_FALSE$$);
    if(this.$DragSource$) {
      var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$.target);
      !$DvtSvgShadowUtils$$.$dragSourceSet$ && this.$IsDragCandidate$($DvtSvgPatternFillUtils$$) && (this.$DragSource$.$setDragCandidate$($DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$.$dragSourceSet$ = $JSCompiler_alias_TRUE$$)
    }
    this.$_isInActionPopup$ && (this.$CustomTooltipManager$.$closeActionTooltip$(), this.$TouchManager$.$resetTouchHold$());
    this.$HandleImmediateTouchStartInternal$($DvtSvgShadowUtils$$);
    this.$TouchManager$.$fireLogicalEvents$($DvtSvgShadowUtils$$);
    this.$TouchManager$.$postEventBubble$($DvtSvgShadowUtils$$);
    this.$_isTouchResponseTouchStart$() ? (this.$_touchResponseHandled$ = $JSCompiler_alias_TRUE$$, this.$TouchManager$.$processAssociatedTouchAttempt$($DvtSvgShadowUtils$$, this.$_saveTouchStart$, this)) : (this.$_touchResponseHandled$ = $JSCompiler_alias_FALSE$$, this.$_processTouchTooltip$($DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$OnTouchMoveBubble$ = function $$dvt$$9$$$$EventManager$$$$OnTouchMoveBubble$$($DvtSvgShadowUtils$$) {
    this.$PreEventBubble$($DvtSvgShadowUtils$$);
    this.$TouchManager$ && (this.$_prevActionClear$ = $JSCompiler_alias_FALSE$$, this.$HandleImmediateTouchMoveInternal$($DvtSvgShadowUtils$$), this.$TouchManager$.$fireLogicalEvents$($DvtSvgShadowUtils$$), this.$TouchManager$.$postEventBubble$($DvtSvgShadowUtils$$), this.$_processTouchTooltip$($DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$_handleTouchEndTimer$ = function $$dvt$$9$$$$EventManager$$$$_handleTouchEndTimer$$() {
    for(var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_touchEndTimer$.length;$DvtSvgShadowUtils$$++) {
      var $DvtSvgPatternFillUtils$$ = this.$_touchEndTimer$[$DvtSvgShadowUtils$$];
      $DvtSvgPatternFillUtils$$.timer.stop();
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.event;
      this.$TouchManager$ && (this.$HandleImmediateTouchEndInternal$($DvtSvgPatternFillUtils$$), this.$TouchManager$.$fireLogicalEvents$($DvtSvgPatternFillUtils$$), this.$TouchManager$.$postEventBubble$($DvtSvgPatternFillUtils$$))
    }
    this.$DragSource$ && !$DvtSvgPatternFillUtils$$.$dragSourceSet$ && (this.$DragSource$.$setDragCandidate$($JSCompiler_alias_NULL$$), $DvtSvgPatternFillUtils$$.$dragSourceSet$ = $JSCompiler_alias_TRUE$$);
    this.$_touchEndTimer$ = []
  };
  $dvt$$9$$.$EventManager$.prototype.$OnTouchEndBubble$ = function $$dvt$$9$$$$EventManager$$$$OnTouchEndBubble$$($DvtSvgShadowUtils$$) {
    this.$PreEventBubble$($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Timer$(this.$_context$, 0, this.$_handleTouchEndTimer$, this, 1);
    this.$_touchEndTimer$ || (this.$_touchEndTimer$ = []);
    this.$_touchEndTimer$.push({event:$DvtSvgShadowUtils$$, timer:$DvtSvgPatternFillUtils$$});
    $DvtSvgPatternFillUtils$$.start()
  };
  $dvt$$9$$.$EventManager$.prototype.$HandleImmediateTouchStartInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$HandleImmediateTouchMoveInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$HandleImmediateTouchEndInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$_preOnComponentTouchHoverStart$ = function $$dvt$$9$$$$EventManager$$$$_preOnComponentTouchHoverStart$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverStart$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnComponentTouchHoverStart$ = function $$dvt$$9$$$$EventManager$$$$OnComponentTouchHoverStart$$($DvtSvgShadowUtils$$) {
    this.$HandleTouchHoverStartInternal$($DvtSvgShadowUtils$$);
    this.$_touchResponseHandled$ || this.$HandleTouchActionsStart$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_preOnComponentTouchHoverMove$ = function $$dvt$$9$$$$EventManager$$$$_preOnComponentTouchHoverMove$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverMove$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnComponentTouchHoverMove$ = function $$dvt$$9$$$$EventManager$$$$OnComponentTouchHoverMove$$($DvtSvgShadowUtils$$) {
    this.$HandleTouchHoverMoveInternal$($DvtSvgShadowUtils$$);
    this.$_touchResponseHandled$ || this.$HandleTouchActionsMove$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_preOnComponentTouchHoverEnd$ = function $$dvt$$9$$$$EventManager$$$$_preOnComponentTouchHoverEnd$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverEnd$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnComponentTouchHoverEnd$ = function $$dvt$$9$$$$EventManager$$$$OnComponentTouchHoverEnd$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$);
    this.$HandleTouchHoverEndInternal$($DvtSvgShadowUtils$$);
    this.$ProcessTouchContextMenu$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    if(this.$_callbackObj$ instanceof $dvt$$9$$.$BaseComponent$) {
      var $DvtSvgPatternFillUtils$$ = this.$getCtx$().$getStageAbsolutePosition$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$touch$.pageX, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$touch$.pageY;
      $DvtSvgImageFillUtils$$ <= $DvtSvgPatternFillUtils$$.x + this.$_callbackObj$.getWidth() && ($DvtSvgImageFillUtils$$ >= $DvtSvgPatternFillUtils$$.x && $DvtSvgGradientUtils$$ <= $DvtSvgPatternFillUtils$$.y + this.$_callbackObj$.getHeight() && $DvtSvgGradientUtils$$ >= $DvtSvgPatternFillUtils$$.y) && this.$_callback$.call(this.$_callbackObj$, $dvt$$9$$.$EventFactory$.$newTouchHoldReleaseEvent$($DvtSvgShadowUtils$$.$getNativeEvent$()))
    }
    this.$_touchResponseHandled$ || this.$HandleTouchActionsEnd$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_preOnComponentTouchHoverOut$ = function $$dvt$$9$$$$EventManager$$$$_preOnComponentTouchHoverOut$$($DvtSvgShadowUtils$$) {
    this.$_handlePreOutEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverOut$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnComponentTouchHoverOut$ = function $$dvt$$9$$$$EventManager$$$$OnComponentTouchHoverOut$$($DvtSvgShadowUtils$$) {
    this.$_touchResponseHandled$ || this.$HandleTouchActionsOut$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_preOnComponentTouchHoverOver$ = function $$dvt$$9$$$$EventManager$$$$_preOnComponentTouchHoverOver$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverOver$);
    this.$_handlePreOverEvent$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnComponentTouchHoverOver$ = function $$dvt$$9$$$$EventManager$$$$OnComponentTouchHoverOver$$($DvtSvgShadowUtils$$) {
    this.$HandleTouchHoverOverInternal$($DvtSvgShadowUtils$$);
    this.$_touchResponseHandled$ || this.$HandleTouchActionsOver$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_preOnComponentTouchDblClick$ = function $$dvt$$9$$$$EventManager$$$$_preOnComponentTouchDblClick$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchDblClick$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnComponentTouchDblClick$ = function $$dvt$$9$$$$EventManager$$$$OnComponentTouchDblClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$touch$, $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Point$($DvtSvgImageFillUtils$$.pageX, $DvtSvgImageFillUtils$$.pageY), $DvtSvgGradientUtils$$ = $JSCompiler_alias_FALSE$$;
    this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgGradientUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
    $DvtSvgGradientUtils$$ || this.$PopupHandler$.$processPopupHelper$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$], $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$);
    this.$HandleTouchDblClickInternal$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_preOnComponentTouchClick$ = function $$dvt$$9$$$$EventManager$$$$_preOnComponentTouchClick$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$9$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchClick$)
  };
  $dvt$$9$$.$EventManager$.prototype.$OnComponentTouchClick$ = function $$dvt$$9$$$$EventManager$$$$OnComponentTouchClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$touch$, $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$ = new $dvt$$9$$.$Point$($DvtSvgImageFillUtils$$.pageX, $DvtSvgImageFillUtils$$.pageY), $DvtSvgFilterContext$$ = $JSCompiler_alias_FALSE$$;
    this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgFilterContext$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
    !$DvtSvgFilterContext$$ && this.$PopupHandler$.$processPopupHelper$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_ACTION$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CLICK$], $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$) && (this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$), $DvtSvgFilterContext$$ = $JSCompiler_alias_TRUE$$);
    $DvtSvgFilterContext$$ || ($DvtSvgFilterUtils$$ = this.$_getClientBehaviors$($DvtSvgGradientUtils$$)) && this.$ProcessClientBehaviorForTouch$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$HandleTouchClickInternal$($DvtSvgShadowUtils$$) || (this.$_isTouchResponseTouchStart$() || this.$_processTouchSelection$($DvtSvgGradientUtils$$), this.$_popupJustClosed$ || this.$_processTouchSelectionClear$($DvtSvgGradientUtils$$), this.$CustomTooltipManager$.$displayActionPopup$() && (new $dvt$$9$$.$Point$($DvtSvgImageFillUtils$$.pageX, $DvtSvgImageFillUtils$$.pageY), this.$CustomTooltipManager$.$startActionPopupAtPosition$($DvtSvgImageFillUtils$$.pageX, $DvtSvgImageFillUtils$$.pageY, 
    $DvtSvgPatternFillUtils$$)), $DvtSvgGradientUtils$$ && (!$DvtSvgFilterContext$$ && $DvtSvgGradientUtils$$.$isCommandComponent$ && $DvtSvgGradientUtils$$.$isCommandComponent$()) && ($DvtSvgShadowUtils$$ = $dvt$$9$$.$EventFactory$.$newActionEvent$("action", $DvtSvgGradientUtils$$.getId()), $dvt$$9$$.$EventManager$.$_addContextInfo$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$)))
  };
  $dvt$$9$$.$EventManager$.prototype.$_processTouchSelection$ = function $$dvt$$9$$$$EventManager$$$$_processTouchSelection$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_FALSE$$;
    if(($DvtSvgPatternFillUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$)) && $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$()) {
      ($DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$processClick$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$)) && this.$fireSelectionEvent$($DvtSvgShadowUtils$$)
    }
    this.$_prevActionClear$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$_processTouchSelectionClear$ = function $$dvt$$9$$$$EventManager$$$$_processTouchSelectionClear$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $JSCompiler_alias_FALSE$$;
    if(($DvtSvgPatternFillUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$)) && (!$DvtSvgShadowUtils$$ || !$DvtSvgShadowUtils$$.$isSelectable$ || !$DvtSvgShadowUtils$$.$isSelectable$()) && !this.$_prevActionClear$) {
      var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$;
      this.$isClearMenuAllowed$() && $DvtSvgPatternFillUtils$$.$getType$() == $dvt$$9$$.$SelectionHandler$.$TYPE_MULTIPLE$ && 1 < $DvtSvgPatternFillUtils$$.$_selection$.length && ($DvtSvgImageFillUtils$$ = $JSCompiler_alias_TRUE$$);
      $DvtSvgImageFillUtils$$ ? this.$addClearAllActionItem$() : ($DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$processClick$($JSCompiler_alias_NULL$$, $JSCompiler_alias_FALSE$$)) && this.$fireSelectionEvent$($DvtSvgShadowUtils$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$OnActionTooltipClosed$ = function $$dvt$$9$$$$EventManager$$$$OnActionTooltipClosed$$() {
    this.$_popupJustClosed$ = $JSCompiler_alias_TRUE$$;
    this.$_isInActionPopup$ = $JSCompiler_alias_FALSE$$;
    this.$CustomTooltipManager$.$_actionTooltip$.$containsMenuId$($dvt$$9$$.$EventManager$.$CLEAR_SELECTION_ACTION_TYPE$) && (this.$_prevActionClear$ = $JSCompiler_alias_TRUE$$);
    this.$CustomTooltipManager$.$clearActionTooltip$()
  };
  $dvt$$9$$.$EventManager$.prototype.$OnActionTooltipStarted$ = function $$dvt$$9$$$$EventManager$$$$OnActionTooltipStarted$$() {
    this.$_isInActionPopup$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$_getTooltipInfo$ = function $$dvt$$9$$$$EventManager$$$$_getTooltipInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $JSCompiler_alias_NULL$$, $dvt$$9$$ = $JSCompiler_alias_FALSE$$;
    $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$getDatatip$ && ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getDatatip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)) && ($dvt$$9$$ = $JSCompiler_alias_TRUE$$);
    !$DvtSvgFilterUtils$$ && ($DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$getTooltip$) && ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getTooltip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$));
    return{text:$DvtSvgFilterUtils$$, isDatatip:$dvt$$9$$}
  };
  $dvt$$9$$.$EventManager$.prototype.$_processShowTooltip$ = function $$dvt$$9$$$$EventManager$$$$_processShowTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if(this.$getTooltipsEnabled$($DvtSvgPatternFillUtils$$)) {
      var $DvtSvgFilterUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$ = this.$_getTooltipInfo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$.x, $DvtSvgFilterUtils$$.y);
      $DvtSvgShadowUtils$$ = $DvtSvgFilterUtils$$.isDatatip;
      if($DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.text) {
        this.$CustomTooltipManager$.$clearActionTooltip$();
        $DvtSvgPatternFillUtils$$ = this.$GetTooltipColor$($DvtSvgPatternFillUtils$$);
        var $dvt$$9$$ = this.$_context$.$getTooltipManager$();
        $DvtSvgShadowUtils$$ ? $dvt$$9$$.$showDatatip$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$) : $dvt$$9$$.$showTooltip$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $JSCompiler_alias_NULL$$, $JSCompiler_alias_TRUE$$, $DvtSvgPatternFillUtils$$);
        return $JSCompiler_alias_TRUE$$
      }
    }
    this.$hideTooltip$();
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$hideTooltip$ = function $$dvt$$9$$$$EventManager$$$$hideTooltip$$() {
    var $DvtSvgShadowUtils$$ = this.$_context$.$getTooltipManager$();
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$hideTooltip$()
  };
  $dvt$$9$$.$EventManager$.prototype.$ProcessTouchContextMenu$ = function $$dvt$$9$$$$EventManager$$$$ProcessTouchContextMenu$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(this.$ContextMenuHandler$) {
      var $DvtSvgImageFillUtils$$ = this.$GetContextMenuType$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $JSCompiler_alias_FALSE$$;
      if($DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$isSelected$ && $DvtSvgPatternFillUtils$$.$isSelected$()) {
        $DvtSvgGradientUtils$$ = $JSCompiler_alias_TRUE$$
      }else {
        if(!$DvtSvgPatternFillUtils$$ || !$DvtSvgPatternFillUtils$$.$isSelectable$ || !$DvtSvgPatternFillUtils$$.$isSelectable$()) {
          $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ContextMenuHandler$.$TYPE_BODY_CONTEXT_MENU$
        }
        $DvtSvgImageFillUtils$$ == $dvt$$9$$.$ContextMenuHandler$.$TYPE_BODY_CONTEXT_MENU$ && ($DvtSvgGradientUtils$$ = $JSCompiler_alias_TRUE$$)
      }
      $DvtSvgGradientUtils$$ && this.$ProcessContextMenuHandler$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$)
    }else {
      this.$ProcessContextMenuPopup$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$_processActionPopup$ = function $$dvt$$9$$$$EventManager$$$$_processActionPopup$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$CustomTooltipManager$.$displayActionPopup$() ? (this.$SetupTouchTooltip$($DvtSvgShadowUtils$$), this.$CustomTooltipManager$.$startActionPopupAtPosition$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y, $DvtSvgShadowUtils$$), $JSCompiler_alias_TRUE$$) : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$SetupTouchTooltip$ = function $$dvt$$9$$$$EventManager$$$$SetupTouchTooltip$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = this.$CustomTooltipManager$.$_actionTooltip$;
    $DvtSvgShadowUtils$$.$_tooltipBorderColor$ == $JSCompiler_alias_NULL$$ && ($DvtSvgPatternFillUtils$$ = this.$GetTooltipColor$($DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$.$setTooltipBorderColor$($DvtSvgPatternFillUtils$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$OnClickInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$OnDblClickInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchHoverStartInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchHoverMoveInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchHoverEndInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchHoverOverInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchClickInternal$ = $JSCompiler_returnArg$$($JSCompiler_alias_FALSE$$);
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchDblClickInternal$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$GetClearSelectionText$ = function $$dvt$$9$$$$EventManager$$$$GetClearSelectionText$$() {
    return $dvt$$9$$.$Bundle$.$getTranslatedString$($dvt$$9$$.$Bundle$.$UTIL_PREFIX$, "CLEAR_SELECTION")
  };
  $dvt$$9$$.$EventManager$.prototype.$addClearAllActionItem$ = function $$dvt$$9$$$$EventManager$$$$addClearAllActionItem$$() {
    this.$addActionTooltipMenuItem$($dvt$$9$$.$EventManager$.$CLEAR_SELECTION_ACTION_TYPE$, this.$GetClearSelectionText$(), this.$_actionTooltipClearListener$, this);
    var $DvtSvgShadowUtils$$ = this.$CustomTooltipManager$.$_actionTooltip$;
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$setTooltipBorderColor$($DvtCustomTooltip$$.$DEFAULT_BORDER_COLOR$)
  };
  $dvt$$9$$.$EventManager$.prototype.$isClearMenuAllowed$ = $JSCompiler_returnArg$$($JSCompiler_alias_TRUE$$);
  $dvt$$9$$.$EventManager$.prototype.$addActionTooltipMenuItem$ = function $$dvt$$9$$$$EventManager$$$$addActionTooltipMenuItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$CustomTooltipManager$.$_actionTooltip$.$addMenuItem$(new $DvtCustomTooltipItem$$(this.$_context$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$_actionTooltipClearListener$ = function $$dvt$$9$$$$EventManager$$$$_actionTooltipClearListener$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$.target);
    this.$getSelectionHandler$($DvtSvgShadowUtils$$).$processClick$($JSCompiler_alias_NULL$$, $JSCompiler_alias_FALSE$$) && this.$fireSelectionEvent$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.$consumeEvent$ = function $$dvt$$9$$$$EventManager$$$consumeEvent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.preventDefault(), $DvtSvgShadowUtils$$.stopPropagation())
  };
  $dvt$$9$$.$EventManager$.$_addContextInfo$ = function $$dvt$$9$$$$EventManager$$$_addContextInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgShadowUtils$$.$getContextCallback$ && $DvtSvgShadowUtils$$.$getContextCallbackObj$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getContextCallback$(), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getContextCallbackObj$();
      $DvtSvgImageFillUtils$$ && $DvtSvgGradientUtils$$ && $DvtSvgImageFillUtils$$.call($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$)
    }else {
      $DvtSvgPatternFillUtils$$[$dvt$$9$$.$BaseComponentEvent$.$CLIENT_ROW_KEY$] = $DvtSvgShadowUtils$$.getId()
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$IsPropagationEnabled$ = $JSCompiler_returnArg$$($JSCompiler_alias_FALSE$$);
  $dvt$$9$$.$EventManager$.prototype.$GetCurrentTargetForEvent$ = function $$dvt$$9$$$$EventManager$$$$GetCurrentTargetForEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$);
    return $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgShadowUtils$$.target
  };
  $dvt$$9$$.$EventManager$.prototype.$_propagateEvent$ = function $$dvt$$9$$$$EventManager$$$$_propagateEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if(this.$GetLogicalObject$($DvtSvgPatternFillUtils$$.target)) {
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.target;
      try {
        for(;$DvtSvgGradientUtils$$ && (!this.$GetLogicalObject$($DvtSvgGradientUtils$$, $JSCompiler_alias_TRUE$$) || !(this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $DvtSvgGradientUtils$$), $DvtSvgImageFillUtils$$.call(this, $DvtSvgPatternFillUtils$$), !this.$IsPropagationEnabled$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$)));) {
          $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.getParent()
        }
      }finally {
        this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $JSCompiler_alias_NULL$$)
      }
    }else {
      $DvtSvgImageFillUtils$$.call(this, $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$ConsumesClick$ = function $$dvt$$9$$$$EventManager$$$$ConsumesClick$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() || $DvtSvgShadowUtils$$.$isClickEventPropagationStopped$ && $DvtSvgShadowUtils$$.$isClickEventPropagationStopped$() || this.$_hasClickPopup$($DvtSvgShadowUtils$$) || this.$_hasClickClientBehavior$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_hasClickPopup$ = function $$dvt$$9$$$$EventManager$$$$_hasClickPopup$$($DvtSvgShadowUtils$$) {
    return this.$PopupHandler$.$hasPopup$($DvtSvgShadowUtils$$, [$dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_ACTION$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CLICK$])
  };
  $dvt$$9$$.$EventManager$.prototype.$addComponentKeyboardHandler$ = function $$dvt$$9$$$$EventManager$$$$addComponentKeyboardHandler$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && this.$_keyboardHandlers$.push($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$addComponentKeyboardHandlerAt$ = function $$dvt$$9$$$$EventManager$$$$addComponentKeyboardHandlerAt$$($DvtSvgShadowUtils$$) {
    !(0 > this.$_keyboardHandlers$.length) && $DvtSvgShadowUtils$$ && (this.$_keyboardHandlers$.splice(0, 0, $DvtSvgShadowUtils$$), 0 <= this.$_currentKeyboardHandlerIdx$ && this.$_currentKeyboardHandlerIdx$++)
  };
  $dvt$$9$$.$EventManager$.prototype.$removeComponentKeyboardHandler$ = function $$dvt$$9$$$$EventManager$$$$removeComponentKeyboardHandler$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = this.$_findHandler$($DvtSvgShadowUtils$$), -1 < $DvtSvgShadowUtils$$ && (this.$_currentKeyboardHandlerIdx$ == $DvtSvgShadowUtils$$ && 0 == $DvtSvgShadowUtils$$ ? this.$_currentKeyboardHandlerIdx$ = 0 : $DvtSvgShadowUtils$$ <= this.$_currentKeyboardHandlerIdx$ && this.$_currentKeyboardHandlerIdx$--, this.$_keyboardHandlers$.splice($DvtSvgShadowUtils$$, 1)))
  };
  $dvt$$9$$.$EventManager$.prototype.$_findHandler$ = function $$dvt$$9$$$$EventManager$$$$_findHandler$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = -1, $DvtSvgImageFillUtils$$ = this.$_keyboardHandlers$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
      this.$_keyboardHandlers$[$DvtSvgGradientUtils$$] === $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$)
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$EventManager$.prototype.$setCurrentKeyboardHandler$ = function $$dvt$$9$$$$EventManager$$$$setCurrentKeyboardHandler$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_findHandler$($DvtSvgShadowUtils$$);
    0 <= $DvtSvgShadowUtils$$ && (this.$_currentKeyboardHandlerIdx$ = $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_hasClickClientBehavior$ = function $$dvt$$9$$$$EventManager$$$$_hasClickClientBehavior$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ = this.$_getClientBehaviors$($DvtSvgShadowUtils$$)) {
      for(var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
        if($DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$.$getTriggerType$() == $dvt$$9$$.$ClientBehavior$.$TRIGGER_TYPE_ACTION$ || $DvtSvgImageFillUtils$$.$getTriggerType$() == $dvt$$9$$.$ClientBehavior$.$TRIGGER_TYPE_CLICK$)) {
          return $JSCompiler_alias_TRUE$$
        }
      }
    }
    return $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$CreateClientBehaviorHandler$ = function $$dvt$$9$$$$EventManager$$$$CreateClientBehaviorHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return new $dvt$$9$$.$ClientBehaviorHandler$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$ProcessClientBehaviorForTouch$ = function $$dvt$$9$$$$EventManager$$$$ProcessClientBehaviorForTouch$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$ClientBehaviorHandler$.$processClick$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$IsDragCandidate$ = $JSCompiler_returnArg$$($JSCompiler_alias_TRUE$$);
  $dvt$$9$$.$EventManager$.$_getActiveElementId$ = function $$dvt$$9$$$$EventManager$$$_getActiveElementId$$() {
    return"_dvtActiveElement" + Math.floor(1E9 * Math.random())
  };
  $dvt$$9$$.$EventManager$.prototype.$UpdateActiveElement$ = function $$dvt$$9$$$$EventManager$$$$UpdateActiveElement$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDisplayable$ ? $DvtSvgShadowUtils$$.$getDisplayable$() : $DvtSvgShadowUtils$$.$getDisplayables$ ? $DvtSvgShadowUtils$$.$getDisplayables$()[0] : $DvtSvgShadowUtils$$);
    if($DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$Displayable$) {
      if($DvtSvgShadowUtils$$.$getAriaLabel$) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getAriaLabel$();
        $DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$.$setAriaProperty$("label", $DvtSvgImageFillUtils$$)
      }else {
        for(;!$DvtSvgPatternFillUtils$$.$getAriaRole$() && $DvtSvgPatternFillUtils$$.getParent();) {
          $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.getParent()
        }
      }
      $DvtSvgPatternFillUtils$$ != this.$getCtx$().$_stage$ && this.$getCtx$().$setActiveElement$($DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$_handlePreOverEvent$ = function $$dvt$$9$$$$EventManager$$$$_handlePreOverEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_getRolloverHierarchy$($DvtSvgShadowUtils$$.target), $DvtSvgImageFillUtils$$ = this.$_getRolloverHierarchy$($DvtSvgShadowUtils$$.relatedTarget);
    if(0 < $DvtSvgPatternFillUtils$$.length && ($DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgPatternFillUtils$$.length - 1], $DvtSvgPatternFillUtils$$ != (0 == $DvtSvgImageFillUtils$$.length ? $JSCompiler_alias_NULL$$ : $DvtSvgImageFillUtils$$[$DvtSvgImageFillUtils$$.length - 1]))) {
      try {
        this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $DvtSvgPatternFillUtils$$), this.$OnRollOver$($DvtSvgShadowUtils$$)
      }finally {
        this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $JSCompiler_alias_NULL$$)
      }
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$_handlePreOutEvent$ = function $$dvt$$9$$$$EventManager$$$$_handlePreOutEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$.relatedTarget), $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.target;
    try {
      var $DvtSvgFilterContext$$ = this.$_getRolloverHierarchy$($DvtSvgPatternFillUtils$$.target), $DvtSvgImplFactory$$ = this.$_getRolloverHierarchy$($DvtSvgPatternFillUtils$$.relatedTarget);
      if(0 < $DvtSvgFilterContext$$.length) {
        var $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$[$DvtSvgFilterContext$$.length - 1];
        if($DvtHtmlRichTooltipManager$$ != (0 == $DvtSvgImplFactory$$.length ? $JSCompiler_alias_NULL$$ : $DvtSvgImplFactory$$[$DvtSvgImplFactory$$.length - 1])) {
          this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $DvtHtmlRichTooltipManager$$), this.$OnRollOut$($DvtSvgPatternFillUtils$$)
        }
      }
      var $DvtDomXmlParser$$ = this.$GetLogicalObject$($DvtSvgFilterUtils$$);
      if($DvtDomXmlParser$$) {
        for(this.$PopupHandler$.$processMouseOut$($DvtDomXmlParser$$, this.$_getDisplayableHierarchy$($DvtSvgPatternFillUtils$$.relatedTarget), $DvtSvgPatternFillUtils$$);$DvtSvgFilterUtils$$;) {
          var $DvtContextMenuTooltipItem$$ = this.$GetLogicalObject$($DvtSvgFilterUtils$$, $JSCompiler_alias_TRUE$$);
          if($DvtContextMenuTooltipItem$$) {
            if($DvtSvgGradientUtils$$ === $DvtContextMenuTooltipItem$$) {
              break
            }
            this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $DvtSvgFilterUtils$$);
            $DvtSvgImageFillUtils$$.call(this, $DvtSvgPatternFillUtils$$);
            if(!this.$IsPropagationEnabled$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$)) {
              break
            }
          }
          $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.getParent()
        }
      }else {
        $DvtSvgImageFillUtils$$.call(this, $DvtSvgPatternFillUtils$$)
      }
    }finally {
      this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $JSCompiler_alias_NULL$$), $DvtSvgPatternFillUtils$$.relatedTarget instanceof $dvt$$9$$.$Displayable$ || this.$_context$.$clearStageAbsolutePosition$()
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$getTouchManager$ = $JSCompiler_get$$("$TouchManager$");
  $dvt$$9$$.$EventManager$.prototype.$endDrag$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$EventManager$.prototype.$_hasEventInfo$ = function $$dvt$$9$$$$EventManager$$$$_hasEventInfo$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ == $JSCompiler_alias_NULL$$ ? $JSCompiler_alias_FALSE$$ : $DvtSvgShadowUtils$$.$getNativeEvent$().$_eventInfo$ ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$GetEventInfo$ = function $$dvt$$9$$$$EventManager$$$$GetEventInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_hasEventInfo$($DvtSvgShadowUtils$$) || $DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$) {
      return $JSCompiler_alias_NULL$$
    }
    var $DvtSvgImageFillUtils$$;
    this.$StoreInfoByEventType$($DvtSvgPatternFillUtils$$) ? ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.type ? $DvtSvgShadowUtils$$.type : $DvtSvgShadowUtils$$.$getType$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$().$_eventInfo$[$DvtSvgImageFillUtils$$]) : $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$().$_eventInfo$;
    return $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$[$DvtSvgPatternFillUtils$$] : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$EventManager$.prototype.$SetEventInfo$ = function $$dvt$$9$$$$EventManager$$$$SetEventInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if(!($DvtSvgShadowUtils$$ == $JSCompiler_alias_NULL$$ || $DvtSvgPatternFillUtils$$ == $JSCompiler_alias_NULL$$)) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
      $DvtSvgGradientUtils$$.$_eventInfo$ || ($DvtSvgGradientUtils$$.$_eventInfo$ = {});
      this.$StoreInfoByEventType$($DvtSvgPatternFillUtils$$) ? ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.type ? $DvtSvgShadowUtils$$.type : $DvtSvgShadowUtils$$.$getType$(), $DvtSvgGradientUtils$$.$_eventInfo$[$DvtSvgShadowUtils$$] || ($DvtSvgGradientUtils$$.$_eventInfo$[$DvtSvgShadowUtils$$] = {}), $DvtSvgGradientUtils$$.$_eventInfo$[$DvtSvgShadowUtils$$][$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$) : $DvtSvgGradientUtils$$.$_eventInfo$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$
    }
  };
  $dvt$$9$$.$EventManager$.prototype.$StoreInfoByEventType$ = function $$dvt$$9$$$$EventManager$$$$StoreInfoByEventType$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ == $dvt$$9$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$ ? $JSCompiler_alias_FALSE$$ : $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$ProcessObjectTooltip$ = function $$dvt$$9$$$$EventManager$$$$ProcessObjectTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$) || this.$_processShowTooltip$($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$_resetExternalKeyboardFocus$ = function $$dvt$$9$$$$EventManager$$$$_resetExternalKeyboardFocus$$() {
    this.$_handleExternalKeyboardFocus$ = $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$OnFocus$ = function $$dvt$$9$$$$EventManager$$$$OnFocus$$($DvtSvgShadowUtils$$) {
    this.$_handleExternalKeyboardFocus$ = $JSCompiler_alias_FALSE$$;
    !this.$_bKeyDown$ && !$DvtSvgShadowUtils$$.$_isPropagationStopped$ && (this.$_handleExternalKeyboardFocus$ = $JSCompiler_alias_TRUE$$, this.$_keyboardFocusTimer$ || (this.$_keyboardFocusTimer$ = new $dvt$$9$$.$Timer$(this.$_context$, 200, this.$_resetExternalKeyboardFocus$, this, 1)), this.$_keyboardFocusTimer$.reset(), this.$_keyboardFocusTimer$.start(), $DvtSvgShadowUtils$$.stopPropagation())
  };
  $dvt$$9$$.$EventManager$.prototype.$OnBlur$ = function $$dvt$$9$$$$EventManager$$$$OnBlur$$() {
    this.$_bKeyDown$ = $JSCompiler_alias_FALSE$$;
    var $DvtSvgShadowUtils$$ = this.$getFocus$();
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isShowingKeyboardFocusEffect$() && $DvtSvgShadowUtils$$.$hideKeyboardFocusEffect$()
  };
  $dvt$$9$$.$EventManager$.prototype.$ProcessRolloverEvent$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$EventManager$.prototype.$CreateCategoryRolloverHandler$ = function $$dvt$$9$$$$EventManager$$$$CreateCategoryRolloverHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return new $dvt$$9$$.$CategoryRolloverHandler$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$GetTouchResponse$ = function $$dvt$$9$$$$EventManager$$$$GetTouchResponse$$() {
    return $dvt$$9$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_START$
  };
  $dvt$$9$$.$EventManager$.prototype.$_isTouchResponseTouchStart$ = function $$dvt$$9$$$$EventManager$$$$_isTouchResponseTouchStart$$() {
    var $DvtSvgShadowUtils$$ = this.$GetTouchResponse$();
    if($DvtSvgShadowUtils$$ === $dvt$$9$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_START$) {
      return $JSCompiler_alias_TRUE$$
    }
    if($DvtSvgShadowUtils$$ === $dvt$$9$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_HOLD$) {
      return $JSCompiler_alias_FALSE$$
    }
    for($DvtSvgShadowUtils$$ = this.$getCtx$().$_root$.parentElement.parentElement;$DvtSvgShadowUtils$$ && "HTML" !== $DvtSvgShadowUtils$$.nodeName;) {
      var $DvtSvgPatternFillUtils$$ = window.getComputedStyle($DvtSvgShadowUtils$$);
      if("hidden" !== $DvtSvgPatternFillUtils$$.overflow && ($DvtSvgShadowUtils$$.scrollWidth > $DvtSvgShadowUtils$$.clientWidth + $dvt$$9$$.$EventManager$.$_TOUCH_RESPONSE_PADDING_CHECK$ && "hidden" !== $DvtSvgPatternFillUtils$$["overflow-x"] || $DvtSvgShadowUtils$$.scrollHeight > $DvtSvgShadowUtils$$.clientHeight + $dvt$$9$$.$EventManager$.$_TOUCH_RESPONSE_PADDING_CHECK$ && "hidden" !== $DvtSvgPatternFillUtils$$["overflow-y"])) {
        return $JSCompiler_alias_FALSE$$
      }
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentElement
    }
    return $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$EventManager$.prototype.$_saveTouchStart$ = function $$dvt$$9$$$$EventManager$$$$_saveTouchStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    1 >= this.$TouchManager$.$getTouchIdsForObj$($dvt$$9$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_START$).length && (this.$TouchManager$.$saveProcessedTouch$($DvtSvgPatternFillUtils$$.identifier, $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$, $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$, $dvt$$9$$.$TouchManager$.$HOVER_TOUCH_KEY$, this.$HandleTouchActionsMove$, this.$HandleTouchActionsEnd$, this), this.$HandleTouchActionsStart$($DvtSvgShadowUtils$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchActionsStart$ = function $$dvt$$9$$$$EventManager$$$$HandleTouchActionsStart$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ComponentTouchEvent$ ? $DvtSvgShadowUtils$$.$touch$ : $DvtSvgShadowUtils$$.touches[0], $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.pageX, $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.pageY;
    $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ComponentTouchEvent$ || (this.$_touchMap$[$DvtSvgGradientUtils$$.identifier] || (this.$_touchMap$[$DvtSvgGradientUtils$$.identifier] = {}), this.$_touchMap$[$DvtSvgGradientUtils$$.identifier][$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$] = $JSCompiler_alias_NULL$$, $DvtSvgImageFillUtils$$ && this.$HandleTouchActionsOver$($DvtSvgShadowUtils$$), this.$_touchMap$[$DvtSvgGradientUtils$$.identifier][$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$] = $DvtSvgImageFillUtils$$);
    if(this.$_marqueeHandler$ && ($DvtSvgGradientUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = this.$_marqueeHandler$.$processDragStart$($DvtSvgGradientUtils$$))) {
      $DvtSvgShadowUtils$$.preventDefault(), this.$_callback$.call(this.$_callbackObj$, $DvtSvgGradientUtils$$)
    }
    $DvtSvgImageFillUtils$$ && this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$);
    this.$_processTouchTooltip$($DvtSvgShadowUtils$$);
    this.$_prevActionClear$ = $JSCompiler_alias_FALSE$$;
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgFilterUtils$$ = new $dvt$$9$$.$Point$($DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), ($DvtSvgPatternFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgPatternFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgImageFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgImageFillUtils$$), 
    $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_DOWN$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchActionsMove$ = function $$dvt$$9$$$$EventManager$$$$HandleTouchActionsMove$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ComponentTouchEvent$ ? $DvtSvgShadowUtils$$.$touch$ : $DvtSvgShadowUtils$$.touches[0], $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$;
    if($DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ComponentTouchEvent$) {
      $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$)
    }else {
      $DvtSvgShadowUtils$$.preventDefault();
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SvgDocumentUtils$.$elementFromTouch$($DvtSvgPatternFillUtils$$);
      $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
      var $DvtSvgFilterUtils$$ = this.$_touchMap$[$DvtSvgPatternFillUtils$$.identifier][$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$];
      if($DvtSvgFilterUtils$$ != $DvtSvgGradientUtils$$) {
        if($DvtSvgFilterUtils$$) {
          var $DvtSvgFilterContext$$;
          $DvtSvgFilterUtils$$.$getDisplayable$ ? $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.$getDisplayable$() : $DvtSvgFilterUtils$$.$getDisplayables$ && ($DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.$getDisplayables$()[0]);
          $DvtSvgFilterContext$$ && ($DvtSvgShadowUtils$$.target = $DvtSvgFilterContext$$, this.$HandleTouchActionsOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$))
        }
        $DvtSvgShadowUtils$$.target = $DvtSvgImageFillUtils$$;
        $DvtSvgGradientUtils$$ && this.$HandleTouchActionsOver$($DvtSvgShadowUtils$$)
      }
      this.$_touchMap$[$DvtSvgPatternFillUtils$$.identifier][$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$] = $DvtSvgGradientUtils$$
    }
    $DvtSvgFilterUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgPatternFillUtils$$.pageX, $DvtSvgPatternFillUtils$$.pageY);
    if(this.$_marqueeHandler$ && ($DvtSvgFilterUtils$$ = this.$_marqueeHandler$.$processDragMove$($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$.ctrlKey))) {
      $DvtSvgShadowUtils$$.preventDefault(), this.$_callback$.call(this.$_callbackObj$, $DvtSvgFilterUtils$$)
    }
    $DvtSvgGradientUtils$$ && this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, $JSCompiler_alias_TRUE$$);
    $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.pageX, $DvtSvgPatternFillUtils$$.pageY);
    this.$PopupHandler$.$processMouseMove$($DvtSvgPatternFillUtils$$);
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_MOVE$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, 
    $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchActionsEnd$ = function $$dvt$$9$$$$EventManager$$$$HandleTouchActionsEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$;
    if($DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ComponentTouchEvent$) {
      $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$), $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$touch$
    }else {
      $DvtSvgShadowUtils$$.preventDefault();
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SvgDocumentUtils$.$elementFromTouch$($DvtSvgPatternFillUtils$$);
      $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
      var $DvtSvgFilterUtils$$;
      $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$.$getDisplayable$ ? $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$getDisplayable$() : $DvtSvgGradientUtils$$.$getDisplayables$ && ($DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$getDisplayables$()[0]));
      $DvtSvgFilterUtils$$ && ($DvtSvgShadowUtils$$.target = $DvtSvgFilterUtils$$, this.$HandleTouchActionsOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$));
      this.$_touchMap$[$DvtSvgPatternFillUtils$$.identifier][$dvt$$9$$.$TouchManager$.$PREV_HOVER_OBJ$] = $JSCompiler_alias_NULL$$
    }
    $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.pageX;
    var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.pageY, $DvtSvgImplFactory$$ = this.$_context$.$pageToStageCoords$($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    if(this.$_marqueeHandler$ && ($DvtSvgImplFactory$$ = this.$_marqueeHandler$.$processDragEnd$($DvtSvgImplFactory$$, $DvtSvgShadowUtils$$.ctrlKey))) {
      $DvtSvgShadowUtils$$.preventDefault(), this.$_callback$.call(this.$_callbackObj$, $DvtSvgImplFactory$$)
    }
    this.$_processTouchSelection$($DvtSvgGradientUtils$$);
    this.$_processActionPopup$($DvtSvgImageFillUtils$$, new $dvt$$9$$.$Point$($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$));
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgFilterUtils$$ = new $dvt$$9$$.$Point$($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$), ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_UP$) && 
    this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$))
  };
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchActionsOver$ = function $$dvt$$9$$$$EventManager$$$$HandleTouchActionsOver$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ComponentTouchEvent$ ? $DvtSvgShadowUtils$$.$touch$ : $DvtSvgShadowUtils$$.touches[0], $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Point$($DvtSvgGradientUtils$$.pageX, $DvtSvgGradientUtils$$.pageY);
    $DvtSvgImageFillUtils$$ && this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_TRUE$$);
    var $DvtSvgFilterUtils$$ = this.$getSelectionHandler$($DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$ && $DvtSvgFilterUtils$$.$processMouseOver$($DvtSvgImageFillUtils$$);
    ($DvtSvgPatternFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgPatternFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgImageFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$)
  };
  $dvt$$9$$.$EventManager$.prototype.$HandleTouchActionsOut$ = function $$dvt$$9$$$$EventManager$$$$HandleTouchActionsOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$ComponentTouchEvent$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$touch$);
    $DvtSvgGradientUtils$$ && this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, $JSCompiler_alias_FALSE$$);
    var $DvtSvgFilterUtils$$ = this.$getSelectionHandler$($DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ && $DvtSvgFilterUtils$$.$processMouseOut$($DvtSvgGradientUtils$$);
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgFilterUtils$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$.pageX, $DvtSvgPatternFillUtils$$.pageY), ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, 
    $dvt$$9$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OUT$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$9$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, $JSCompiler_alias_TRUE$$))
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCustomTooltipManager$$, $dvt$$9$$.$Obj$);
  $DvtCustomTooltipManager$$.prototype.Init = function $$DvtCustomTooltipManager$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_id$ = $DvtSvgPatternFillUtils$$;
    this.$_actionTooltip$ = new $DvtCustomTooltip$$(this.$_context$, this.$_id$ + "ActionPopup")
  };
  $DvtCustomTooltipManager$$.prototype.$GetRichTooltipManager$ = function $$DvtCustomTooltipManager$$$$$GetRichTooltipManager$$() {
    if(!this.$_RichTooltipManager$) {
      this.$_RichTooltipManager$ = this.$_context$.$_implFactory$.$newRichTooltipManager$(this.$_id$ + "Tooltip");
      this.$_RichTooltipManager$.$InitializeTooltipElem$();
      var $DvtSvgShadowUtils$$ = this.$_RichTooltipManager$.$GetStoredContext$();
      $DvtSvgShadowUtils$$ && (new $DvtCustomTooltipEventHandler$$($DvtSvgShadowUtils$$, this, $JSCompiler_alias_NULL$$, $JSCompiler_alias_NULL$$)).$addListeners$(this.$_actionTooltip$)
    }
    return this.$_RichTooltipManager$
  };
  $DvtCustomTooltipManager$$.prototype.$clearActionTooltip$ = function $$DvtCustomTooltipManager$$$$$clearActionTooltip$$() {
    this.$_actionTooltip$ && this.$_actionTooltip$.$clearContent$()
  };
  $DvtCustomTooltipManager$$.prototype.$hideTooltip$ = function $$DvtCustomTooltipManager$$$$$hideTooltip$$() {
    this.$clearActionTooltip$();
    this.$_RichTooltipManager$ && this.$_RichTooltipManager$.$hideTooltip$()
  };
  $DvtCustomTooltipManager$$.prototype.$closeActionTooltip$ = function $$DvtCustomTooltipManager$$$$$closeActionTooltip$$() {
    var $DvtSvgShadowUtils$$ = new $DvtActionTooltipEvent$$($DvtActionTooltipEvent$$.$TOOLTIP_CLOSED_TYPE$, this.$_actionPopupObj$);
    this.$FireListener$($DvtSvgShadowUtils$$);
    this.$_actionPopupObj$ = $JSCompiler_alias_NULL$$;
    this.$hideTooltip$()
  };
  $DvtCustomTooltipManager$$.prototype.$showDatatip$ = function $$DvtCustomTooltipManager$$$$$showDatatip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = this.$_actionTooltip$;
    $DvtSvgImageFillUtils$$ = $DvtCustomTooltipManager$$.$_formatTextString$($DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$.$setTooltipText$($DvtSvgImageFillUtils$$);
    $DvtSvgGradientUtils$$ != $JSCompiler_alias_NULL$$ && $DvtSvgFilterUtils$$.$setTooltipBorderColor$($DvtSvgGradientUtils$$);
    this.$GetRichTooltipManager$().$showRichElement$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$)
  };
  $DvtCustomTooltipManager$$.prototype.$displayActionPopup$ = function $$DvtCustomTooltipManager$$$$$displayActionPopup$$() {
    var $DvtSvgShadowUtils$$ = this.$_actionTooltip$;
    return!$DvtSvgShadowUtils$$ || !$DvtSvgShadowUtils$$.$hasMenuItems$() ? $JSCompiler_alias_FALSE$$ : $JSCompiler_alias_TRUE$$
  };
  $DvtCustomTooltipManager$$.prototype.$startActionPopupAtPosition$ = function $$DvtCustomTooltipManager$$$$$startActionPopupAtPosition$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$_actionTooltip$;
    $DvtSvgGradientUtils$$ && (this.$GetRichTooltipManager$().$showRichElementAtPosition$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$), $DvtSvgShadowUtils$$ = new $DvtActionTooltipEvent$$($DvtActionTooltipEvent$$.$TOOLTIP_STARTED_TYPE$, $DvtSvgImageFillUtils$$), this.$FireListener$($DvtSvgShadowUtils$$), this.$_actionPopupObj$ = $DvtSvgImageFillUtils$$)
  };
  $DvtCustomTooltipManager$$.prototype.$addTooltipEventListener$ = function $$DvtCustomTooltipManager$$$$$addTooltipEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, $JSCompiler_alias_TRUE$$);
    $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$.push($DvtSvgImageFillUtils$$)
  };
  $DvtCustomTooltipManager$$.prototype.$removeTooltipEventListener$ = function $$DvtCustomTooltipManager$$$$$removeTooltipEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, $JSCompiler_alias_FALSE$$);
    if($DvtSvgShadowUtils$$ !== $JSCompiler_alias_NULL$$) {
      for(var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$ += 2) {
        if($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$] === $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$ + 1] === $DvtSvgImageFillUtils$$) {
          $DvtSvgShadowUtils$$.splice($DvtSvgGradientUtils$$, 2);
          break
        }
      }
    }
  };
  $DvtCustomTooltipManager$$.prototype.$_getListeners$ = function $$DvtCustomTooltipManager$$$$$_getListeners$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if(!this.$_listenerObj$) {
      if($DvtSvgPatternFillUtils$$) {
        this.$_listenerObj$ = {}
      }else {
        return $JSCompiler_alias_NULL$$
      }
    }
    var $DvtSvgImageFillUtils$$ = this.$_listenerObj$[$DvtSvgShadowUtils$$];
    !$DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ = [], this.$_listenerObj$[$DvtSvgShadowUtils$$] = $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $DvtCustomTooltipManager$$.prototype.$FireListener$ = function $$DvtCustomTooltipManager$$$$$FireListener$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$.$getType$(), $JSCompiler_alias_FALSE$$);
    if($DvtSvgPatternFillUtils$$) {
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$ += 2) {
        $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].call($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$ + 1], $DvtSvgShadowUtils$$)
      }
    }
  };
  $DvtCustomTooltipManager$$.$_formatTextString$ = function $$DvtCustomTooltipManager$$$$_formatTextString$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = "";
    if(!$DvtSvgShadowUtils$$) {
      return $DvtSvgPatternFillUtils$$
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/\n/g, "\x3cbr\x3e");
    if($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.split("\x3cbr\x3e")) {
      for(var $DvtSvgImageFillUtils$$ = [], $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
        var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$];
        $DvtSvgFilterUtils$$ != $JSCompiler_alias_NULL$$ && "" != $DvtSvgFilterUtils$$ && $DvtSvgImageFillUtils$$.push($DvtSvgFilterUtils$$)
      }
      for($DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        $DvtSvgPatternFillUtils$$ += $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$], $DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length - 1 && ($DvtSvgPatternFillUtils$$ += "\n")
      }
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCustomTooltipEventHandler$$, $dvt$$9$$.$EventManager$);
  $DvtCustomTooltipEventHandler$$.prototype.$OnClickInternal$ = function $$DvtCustomTooltipEventHandler$$$$$OnClickInternal$$($DvtSvgShadowUtils$$) {
    this.$_handleMenuClick$($DvtSvgShadowUtils$$.target)
  };
  $DvtCustomTooltipEventHandler$$.prototype.$HandleImmediateTouchStartInternal$ = function $$DvtCustomTooltipEventHandler$$$$$HandleImmediateTouchStartInternal$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$blockTouchHold$();
    this.$_handleMenuClick$($DvtSvgShadowUtils$$.target)
  };
  $DvtCustomTooltipEventHandler$$.prototype.$HandleTouchClickInternal$ = function $$DvtCustomTooltipEventHandler$$$$$HandleTouchClickInternal$$($DvtSvgShadowUtils$$) {
    this.$_handleMenuClick$($DvtSvgShadowUtils$$.target)
  };
  $DvtCustomTooltipEventHandler$$.prototype.$_handleMenuClick$ = function $$DvtCustomTooltipEventHandler$$$$$_handleMenuClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_customTooltipManager$.$_actionPopupObj$;
    if($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$_menu$) {
      var $DvtSvgImageFillUtils$$ = $JSCompiler_alias_TRUE$$;
      $DvtSvgShadowUtils$$ instanceof $DvtContextMenuTooltipItem$$ && $DvtSvgShadowUtils$$.$_menuItem$.$isDisabled$() && ($DvtSvgImageFillUtils$$ = $JSCompiler_alias_FALSE$$);
      $DvtSvgImageFillUtils$$ && (this.$_customTooltipManager$.$closeActionTooltip$(), $DvtSvgShadowUtils$$.$FireActionTooltipItem$($DvtSvgPatternFillUtils$$))
    }
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCustomTooltip$$, $dvt$$9$$.$Container$);
  $DvtCustomTooltip$$.$DEFAULT_BORDER_COLOR$ = "gray";
  $DvtCustomTooltip$$.$DEFAULT_BACKGROUND_COLOR$ = "#ffffff";
  $DvtCustomTooltip$$.$TOOLTIP_ONLY$ = "tooltipOnly";
  $DvtCustomTooltip$$.$MENU_ONLY$ = "menuOnly";
  $DvtCustomTooltip$$.$MENU_AND_TOOLTIP$ = "menuAndTooltip";
  $DvtCustomTooltip$$.EMPTY = "empty";
  $DvtCustomTooltip$$.$MENU_PADDING_LEFT$ = 21;
  $DvtCustomTooltip$$.$MENU_PADDING_RIGHT$ = 10;
  $DvtCustomTooltip$$.prototype.$_Init$ = function $$DvtCustomTooltip$$$$$_Init$$($DvtSvgShadowUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$getImpl$() || this.$setImpl$($DvtSvgShadowUtils$$.$_implFactory$.$newContainer$("customTT"));
    $DvtCustomTooltip$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_tooltipBorderColor$ = this.$_tooltipText$ = $JSCompiler_alias_NULL$$;
    this.$_menuFontSize$ = 11;
    this.$_tooltipFill$ = new $dvt$$9$$.$SolidFill$($DvtCustomTooltip$$.$DEFAULT_BACKGROUND_COLOR$);
    this.$_fontSize$ = 11;
    this.$_includePointer$ = $JSCompiler_alias_FALSE$$;
    this.$_pointerLocation$ = new $dvt$$9$$.$Point$(0, 0)
  };
  $DvtCustomTooltip$$.prototype.$getRootDisplayable$ = function $$DvtCustomTooltip$$$$$getRootDisplayable$$() {
    return this
  };
  $DvtCustomTooltip$$.prototype.$UpdateTooltipSize$ = function $$DvtCustomTooltip$$$$$UpdateTooltipSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_displayWidth$ = $DvtSvgShadowUtils$$;
    this.$_displayHeight$ = $DvtSvgPatternFillUtils$$
  };
  $DvtCustomTooltip$$.prototype.$clearContent$ = function $$DvtCustomTooltip$$$$$clearContent$$() {
    this.$clearMenuItems$();
    this.$setTooltipBorderColor$($JSCompiler_alias_NULL$$);
    this.$setTooltipText$($JSCompiler_alias_NULL$$)
  };
  $DvtCustomTooltip$$.prototype.$setTooltipBorderColor$ = $JSCompiler_set$$("$_tooltipBorderColor$");
  $DvtCustomTooltip$$.prototype.$setTooltipText$ = $JSCompiler_set$$("$_tooltipText$");
  $DvtCustomTooltip$$.prototype.$addMenuItem$ = function $$DvtCustomTooltip$$$$$addMenuItem$$($DvtSvgShadowUtils$$) {
    this.$getMenuItems$().push($DvtSvgShadowUtils$$)
  };
  $DvtCustomTooltip$$.prototype.$hasMenuItems$ = function $$DvtCustomTooltip$$$$$hasMenuItems$$() {
    var $DvtSvgShadowUtils$$ = this.$getMenuItems$();
    return $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length
  };
  $DvtCustomTooltip$$.prototype.$clearMenuItems$ = function $$DvtCustomTooltip$$$$$clearMenuItems$$() {
    this.$_menuItems$ && (this.$_menuItems$ = [])
  };
  $DvtCustomTooltip$$.prototype.$getMenuItems$ = function $$DvtCustomTooltip$$$$$getMenuItems$$() {
    this.$_menuItems$ || (this.$_menuItems$ = []);
    return this.$_menuItems$
  };
  $DvtCustomTooltip$$.prototype.$containsMenuId$ = function $$DvtCustomTooltip$$$$$containsMenuId$$($DvtSvgShadowUtils$$) {
    for(var $DvtSvgPatternFillUtils$$ = this.$getMenuItems$(), $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      if($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].getId() == $DvtSvgShadowUtils$$) {
        return $JSCompiler_alias_TRUE$$
      }
    }
    return $JSCompiler_alias_FALSE$$
  };
  $DvtCustomTooltip$$.prototype.$getTooltipType$ = function $$DvtCustomTooltip$$$$$getTooltipType$$() {
    return this.$hasMenuItems$() ? $DvtCustomTooltip$$.$MENU_ONLY$ : $DvtCustomTooltip$$.EMPTY
  };
  $DvtCustomTooltip$$.prototype.$Render$ = function $$DvtCustomTooltip$$$$$Render$$() {
    var $DvtSvgShadowUtils$$ = this.$getRootDisplayable$();
    $DvtSvgShadowUtils$$.$removeChildren$();
    var $DvtSvgPatternFillUtils$$ = this.$getTooltipType$();
    if($DvtSvgPatternFillUtils$$ != $DvtCustomTooltip$$.EMPTY) {
      var $DvtSvgImageFillUtils$$ = 4, $DvtSvgGradientUtils$$ = 2;
      this.$_includePointer$ && ($DvtSvgGradientUtils$$ = 3, $DvtSvgImageFillUtils$$ = 10);
      var $DvtSvgFilterUtils$$ = this.$hasMenuItems$(), $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ / 2, $DvtSvgImplFactory$$ = 0, $DvtHtmlRichTooltipManager$$ = 0;
      $DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$TOOLTIP_ONLY$ ? $DvtSvgShadowUtils$$.$setAlpha$(0.9) : $DvtSvgShadowUtils$$.$setAlpha$(1);
      var $DvtDomXmlParser$$ = [], $DvtCustomTooltipItem$$ = [];
      $DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$MENU_AND_TOOLTIP$ ? $DvtSvgImplFactory$$ += 5 : $DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$MENU_ONLY$ && ($DvtSvgImplFactory$$ += 2.5);
      if($DvtSvgFilterUtils$$) {
        for(var $DvtCircularShape$$ = this.$getMenuItems$(), $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtCircularShape$$.length;$DvtSvgFilterUtils$$++) {
          var $DvtCustomTooltipEventHandler$$ = $DvtCircularShape$$[$DvtSvgFilterUtils$$], $DvtCustomTooltipManager$$ = new $dvt$$9$$.$OutputText$(this.$_context$, $DvtCustomTooltipEventHandler$$.$getText$(), 0, 0, $JSCompiler_alias_NULL$$);
          $DvtCustomTooltipManager$$.$alignBottom$();
          $DvtCustomTooltipManager$$.$setFontSize$(this.$_menuFontSize$);
          $DvtCustomTooltipEventHandler$$ instanceof $DvtContextMenuTooltipItem$$ && $DvtCustomTooltipEventHandler$$.$_menuItem$.$isDisabled$() && $DvtCustomTooltipManager$$.$setAlpha$(0.5);
          $DvtCustomTooltipManager$$.$_menu$ = $DvtCustomTooltipEventHandler$$;
          $DvtCustomTooltipEventHandler$$ = $DvtCustomTooltipManager$$.$measureDimensions$();
          $DvtCustomTooltipEventHandler$$.y = $DvtSvgFilterContext$$ + $DvtSvgImplFactory$$;
          var $DvtStage$$ = $DvtCustomTooltipEventHandler$$.$w$;
          $DvtCustomTooltipItem$$.push($DvtCustomTooltipEventHandler$$);
          $DvtHtmlRichTooltipManager$$ = Math.max($DvtStage$$ + $DvtCustomTooltip$$.$MENU_PADDING_LEFT$ + $DvtCustomTooltip$$.$MENU_PADDING_RIGHT$, $DvtHtmlRichTooltipManager$$);
          $DvtCustomTooltipManager$$.$setY$($DvtCustomTooltipEventHandler$$.y);
          $DvtSvgImplFactory$$ += $DvtCustomTooltipEventHandler$$.$h$;
          $DvtSvgFilterUtils$$ < $DvtCircularShape$$.length - 1 && ($DvtSvgImplFactory$$ += 5);
          $DvtDomXmlParser$$.push($DvtCustomTooltipManager$$);
          $DvtCustomTooltipManager$$.$alignLeft$();
          $DvtCustomTooltipManager$$.$alignTop$()
        }
      }
      if($DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$MENU_ONLY$ || $DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$MENU_AND_TOOLTIP$) {
        $DvtSvgImplFactory$$ += 2.5
      }
      $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$ + 2 * $DvtSvgImageFillUtils$$;
      $DvtSvgPatternFillUtils$$ = $DvtSvgFilterUtils$$ + $DvtSvgGradientUtils$$;
      $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$ + $DvtSvgImplFactory$$ + $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ / 2;
      this.$_cursorText$ && this.$_cursorText$.$setTranslateX$($DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ / 2);
      $DvtHtmlRichTooltipManager$$ = 12;
      $DvtCircularShape$$ = this.$_pointerLocation$.x > $DvtSvgPatternFillUtils$$;
      $DvtSvgImageFillUtils$$ = -this.$_pointerLocation$.x;
      $DvtSvgImplFactory$$ = this.$_pointerLocation$.y;
      this.$_includePointer$ ? ($DvtSvgFilterContext$$ / 2 < $DvtHtmlRichTooltipManager$$ && ($DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$ / 3), $DvtCustomTooltipManager$$ = Math.max($DvtSvgImplFactory$$ + $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ + $DvtSvgGradientUtils$$), $DvtCircularShape$$ ? (this.$UpdateTooltipSize$(this.$_pointerLocation$.x, $DvtCustomTooltipManager$$), $DvtCustomTooltipManager$$ = $DvtSvgGradientUtils$$ / 2) : (this.$UpdateTooltipSize$($DvtSvgPatternFillUtils$$ + 
      $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$, $DvtCustomTooltipManager$$), $DvtCustomTooltipManager$$ = $DvtSvgGradientUtils$$ / 2 + $DvtSvgImageFillUtils$$), $DvtSvgShadowUtils$$.$setTranslate$($DvtCustomTooltipManager$$, $DvtSvgGradientUtils$$ / 2)) : (this.$UpdateTooltipSize$($DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ + $DvtSvgGradientUtils$$), $DvtSvgShadowUtils$$.$setTranslate$($DvtSvgGradientUtils$$ / 2, $DvtSvgGradientUtils$$ / 2));
      $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Rect$(this.$_context$, 0, 0, $DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$);
      this.$_includePointer$ && ($DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$ / 2, $DvtCircularShape$$ ? ($DvtCircularShape$$ = new $dvt$$9$$.$Point$(0, 0), $DvtCustomTooltipManager$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, 0), $DvtCustomTooltipEventHandler$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$), $DvtStage$$ = new $dvt$$9$$.$Point$(this.$_pointerLocation$.x, $DvtSvgImplFactory$$), $DvtHtmlRichTooltipManager$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, 
      $DvtSvgGradientUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$), $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Point$(0, $DvtSvgFilterContext$$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$PathUtils$.moveTo($DvtCircularShape$$.x + 5, $DvtCircularShape$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtCustomTooltipManager$$.x - 5, $DvtCustomTooltipManager$$.y) + $dvt$$9$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtCustomTooltipManager$$.x, 
      $DvtCustomTooltipManager$$.y + 5) + $dvt$$9$$.$PathUtils$.lineTo($DvtCustomTooltipEventHandler$$.x, $DvtCustomTooltipEventHandler$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtStage$$.x, $DvtStage$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtHtmlRichTooltipManager$$.x, $DvtHtmlRichTooltipManager$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y - 5) + $dvt$$9$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtSvgImageFillUtils$$.x - 5, $DvtSvgImageFillUtils$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgGradientUtils$$.x + 
      5, $DvtSvgGradientUtils$$.y) + $dvt$$9$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y - 5) + $dvt$$9$$.$PathUtils$.lineTo(0, 5) + $dvt$$9$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, 5, 0) + $dvt$$9$$.$PathUtils$.closePath()) : ($DvtCircularShape$$ = new $dvt$$9$$.$Point$(0, 0), $DvtCustomTooltipManager$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, 0), $DvtCustomTooltipEventHandler$$ = new $dvt$$9$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$), 
      $DvtStage$$ = new $dvt$$9$$.$Point$(0, $DvtSvgFilterContext$$), $DvtHtmlRichTooltipManager$$ = new $dvt$$9$$.$Point$(0, $DvtSvgGradientUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImageFillUtils$$ = new $dvt$$9$$.$Point$(-$DvtSvgImageFillUtils$$, $DvtSvgImplFactory$$), $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Point$(0, $DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$PathUtils$.moveTo($DvtCircularShape$$.x + 5, $DvtCircularShape$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtCustomTooltipManager$$.x - 
      5, $DvtCustomTooltipManager$$.y) + $dvt$$9$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtCustomTooltipManager$$.x, $DvtCustomTooltipManager$$.y + 5) + $dvt$$9$$.$PathUtils$.lineTo($DvtCustomTooltipEventHandler$$.x, $DvtCustomTooltipEventHandler$$.y - 5) + $dvt$$9$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtCustomTooltipEventHandler$$.x - 5, $DvtCustomTooltipEventHandler$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtStage$$.x + 5, $DvtStage$$.y) + $dvt$$9$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, 
      $DvtStage$$.x, $DvtStage$$.y - 5) + $dvt$$9$$.$PathUtils$.lineTo($DvtHtmlRichTooltipManager$$.x, $DvtHtmlRichTooltipManager$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y) + $dvt$$9$$.$PathUtils$.lineTo(0, 5) + $dvt$$9$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, 5, 0) + $dvt$$9$$.$PathUtils$.closePath()), $DvtSvgGradientUtils$$ = new $dvt$$9$$.$Path$(this.$_context$, $DvtSvgGradientUtils$$, 
      $JSCompiler_alias_NULL$$));
      $DvtSvgGradientUtils$$.$setSolidStroke$("rgb(229,232,238)");
      this.$_tooltipFill$ || (this.$_tooltipFill$ = new $dvt$$9$$.$SolidFill$($DvtCustomTooltip$$.$DEFAULT_BACKGROUND_COLOR$));
      $DvtSvgGradientUtils$$.$setFill$(this.$_tooltipFill$);
      $DvtSvgShadowUtils$$.$addChildAt$($DvtSvgGradientUtils$$, 0);
      $DvtSvgGradientUtils$$ = 0.95 * $DvtSvgFilterUtils$$;
      $DvtSvgFilterContext$$ = ($DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$) / 2;
      for($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtDomXmlParser$$.length;$DvtSvgFilterUtils$$++) {
        $DvtSvgImageFillUtils$$ = $DvtDomXmlParser$$[$DvtSvgFilterUtils$$], $DvtSvgShadowUtils$$.$addChild$($DvtSvgImageFillUtils$$), $DvtSvgImageFillUtils$$.$_menu$ && ($DvtSvgImplFactory$$ = new $dvt$$9$$.$Rectangle$(0, $DvtCustomTooltipItem$$[$DvtSvgFilterUtils$$].y - 2.5, $DvtSvgPatternFillUtils$$, $DvtCustomTooltipItem$$[$DvtSvgFilterUtils$$].$h$ + 5), $DvtSvgImplFactory$$ = new $dvt$$9$$.$Rect$(this.$_context$, $DvtSvgImplFactory$$.x, $DvtSvgImplFactory$$.y, $DvtSvgImplFactory$$.$w$, $DvtSvgImplFactory$$.$h$), 
        $DvtSvgImplFactory$$.$setInvisibleFill$(), $DvtSvgImplFactory$$.$_menu$ = $DvtSvgImageFillUtils$$.$_menu$, $DvtSvgShadowUtils$$.$addChild$($DvtSvgImplFactory$$), 0 < $DvtSvgFilterUtils$$ && ($DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$.$_menu$.$_menuItem$, $DvtDomXmlParser$$[$DvtSvgFilterUtils$$ - 1].$_menu$ instanceof $DvtContextMenuTooltipItem$$ && $DvtSvgImplFactory$$.$hasSeparatorBefore$() && ($DvtSvgImplFactory$$ = new $dvt$$9$$.$SolidFill$("gray", 0.5), this.$renderDivider$($DvtSvgShadowUtils$$, 
        $DvtSvgFilterContext$$, $DvtCustomTooltipItem$$[$DvtSvgFilterUtils$$].y - 2.5, $DvtSvgGradientUtils$$, $DvtSvgImplFactory$$)))), $DvtSvgImageFillUtils$$.$setTranslateX$($DvtCustomTooltip$$.$MENU_PADDING_LEFT$)
      }
    }
  };
  $DvtCustomTooltip$$.prototype.$renderDivider$ = function $$DvtCustomTooltip$$$$$renderDivider$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgPatternFillUtils$$ = new $dvt$$9$$.$Rect$(this.$_context$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, 1);
    $DvtSvgPatternFillUtils$$.$setFill$($DvtSvgFilterUtils$$);
    $DvtSvgShadowUtils$$.$addChild$($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtCustomTooltipItem$$, $dvt$$9$$.$Obj$);
  $DvtCustomTooltipItem$$.prototype.Init = function $$DvtCustomTooltipItem$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_id$ = $DvtSvgPatternFillUtils$$;
    this.$_text$ = $DvtSvgImageFillUtils$$;
    this.$_listener$ = $DvtSvgGradientUtils$$;
    this.$_listenerObj$ = $DvtSvgFilterUtils$$
  };
  $DvtCustomTooltipItem$$.prototype.getId = $JSCompiler_get$$("$_id$");
  $DvtCustomTooltipItem$$.prototype.$getText$ = $JSCompiler_get$$("$_text$");
  $DvtCustomTooltipItem$$.prototype.$FireActionTooltipItem$ = function $$DvtCustomTooltipItem$$$$$FireActionTooltipItem$$($DvtSvgShadowUtils$$) {
    if(this.$_listenerObj$ && this.$_listener$) {
      var $DvtSvgPatternFillUtils$$ = {};
      $DvtSvgPatternFillUtils$$.target = $DvtSvgShadowUtils$$;
      $DvtSvgPatternFillUtils$$.$menuItem$ = this.$_menuItem$;
      this.$_menuItemTimer$ = new $dvt$$9$$.$Timer$(this.$_context$, 1, this.$_handleMenuTimer$, this);
      this.$_menuItemTimer$.$evt$ = $DvtSvgPatternFillUtils$$;
      this.$_menuItemTimer$.start()
    }
  };
  $DvtCustomTooltipItem$$.prototype.$_handleMenuTimer$ = function $$DvtCustomTooltipItem$$$$$_handleMenuTimer$$() {
    this.$_menuItemTimer$ && this.$_menuItemTimer$.stop();
    this.$_listener$.call(this.$_listenerObj$, this.$_menuItemTimer$.$evt$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$);
  $DvtContextMenuTooltipItem$$.prototype.Init = function $$DvtContextMenuTooltipItem$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtContextMenuTooltipItem$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$.$getText$(), $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    this.$_menuItem$ = $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$XmlParser$ = function $$dvt$$9$$$$XmlParser$$($DvtSvgShadowUtils$$) {
    this.$_impl$ || (this.$_impl$ = $DvtSvgShadowUtils$$.$_implFactory$.$newParser$())
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$XmlParser$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$XmlParser$.prototype.parse = function $$dvt$$9$$$$XmlParser$$$parse$($DvtSvgShadowUtils$$) {
    return this.$_impl$ && this.$_impl$.parse ? this.$_impl$.parse($DvtSvgShadowUtils$$) : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$XmlNode$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$XmlNode$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$XmlNode$.prototype.$getAttr$ = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$XmlNode$.prototype.$getChildNodes$ = function $$dvt$$9$$$$XmlNode$$$$getChildNodes$$() {
    return[]
  };
  $dvt$$9$$.$XmlNode$.prototype.$getChild$ = function $$dvt$$9$$$$XmlNode$$$$getChild$$() {
    var $DvtSvgShadowUtils$$ = this.$getChildNodes$();
    return $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && 0 < $DvtSvgShadowUtils$$.length ? $DvtSvgShadowUtils$$[0] : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$XmlNode$.prototype.getFirstChild = function $$dvt$$9$$$$XmlNode$$$getFirstChild$() {
    return this.$getChild$()
  };
  $dvt$$9$$.$XmlNode$.prototype.getName = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$XmlNode$.prototype.getAttributes = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$XmlNode$.prototype.$getAllChildNodes$ = function $$dvt$$9$$$$XmlNode$$$$getAllChildNodes$$() {
    return[]
  };
  $dvt$$9$$.$XmlNode$.prototype.getNodeValue = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$XmlNode$.prototype.getTextContent = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$XmlNode$.prototype.getElementsByTagName = $JSCompiler_returnArg$$($JSCompiler_alias_NULL$$);
  $dvt$$9$$.$HtmlTooltipManager$ = function $$dvt$$9$$$$HtmlTooltipManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$HtmlTooltipManager$, $dvt$$9$$.$TooltipManager$);
  $dvt$$9$$.$HtmlTooltipManager$.$_TOOLTIP_DIV_ID$ = "_dvtTooltip";
  $dvt$$9$$.$HtmlTooltipManager$.$_SHOW_DELAY$ = 500;
  $dvt$$9$$.$HtmlTooltipManager$.$_BORDER_COLOR$ = "#9ba2b0";
  $dvt$$9$$.$HtmlTooltipManager$.$_FONT_COLOR$ = "#383a47";
  $dvt$$9$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$ = 15;
  $dvt$$9$$.$HtmlTooltipManager$.prototype.Init = function $$dvt$$9$$$$HtmlTooltipManager$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_domElementId$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $dvt$$9$$.$HtmlTooltipManager$.$_TOOLTIP_DIV_ID$;
    this.$_isTooltip$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$showDatatip$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$showDatatip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgFilterUtils$$ == $JSCompiler_alias_NULL$$ && ($DvtSvgFilterUtils$$ = $JSCompiler_alias_TRUE$$);
    this.$_isTooltip$ = $JSCompiler_alias_FALSE$$;
    this.$_showTextAtPosition$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, this.$_context$.$getDatatipStyleClass$())
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$_showTextAtPosition$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$_showTextAtPosition$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = this.$getTooltipElem$();
    if("string" == typeof $DvtSvgImageFillUtils$$) {
      for(;$DvtHtmlRichTooltipManager$$.hasChildNodes();) {
        $DvtHtmlRichTooltipManager$$.removeChild($DvtHtmlRichTooltipManager$$.firstChild)
      }
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/(<|&#60;)/g, "\x26lt;");
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/(>|&#62;)/g, "\x26gt;");
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "b");
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "i");
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "table");
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "tr");
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "td");
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/\n/g, "\x3cbr\x3e");
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/\\n/g, "\x3cbr\x3e");
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/&#92;n/g, "\x3cbr\x3e");
      $DvtSvgImageFillUtils$$ = $dvt$$9$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "br");
      $DvtSvgImplFactory$$ = document.createElement("span");
      $DvtSvgImplFactory$$.style.visibility = "inherit";
      $DvtSvgImplFactory$$.style.width = $JSCompiler_alias_NULL$$;
      $DvtSvgImplFactory$$.style.height = $JSCompiler_alias_NULL$$;
      $DvtSvgImplFactory$$.innerHTML = $DvtSvgImageFillUtils$$
    }else {
      $DvtSvgImageFillUtils$$ != $JSCompiler_alias_TRUE$$ && ($DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$)
    }
    this.$_isCustomClassName$ || ($DvtHtmlRichTooltipManager$$.className = $DvtSvgFilterContext$$);
    this.$_isCustomClassName$ = $JSCompiler_alias_FALSE$$;
    $DvtSvgGradientUtils$$ || ($DvtSvgGradientUtils$$ = $dvt$$9$$.$HtmlTooltipManager$.$_BORDER_COLOR$);
    this.$_isCustomBorderColor$ || ($DvtHtmlRichTooltipManager$$.style.borderColor = $DvtSvgGradientUtils$$);
    this.$_isCustomBorderColor$ = $JSCompiler_alias_FALSE$$;
    $DvtHtmlRichTooltipManager$$.style.position = "absolute";
    $DvtHtmlRichTooltipManager$$.style.zIndex = 2147483647;
    $DvtSvgImplFactory$$ != $JSCompiler_alias_NULL$$ && $DvtHtmlRichTooltipManager$$.appendChild($DvtSvgImplFactory$$);
    this.$PostElement$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $JSCompiler_alias_TRUE$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$PostElement$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$PostElement$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgShadowUtils$$.style["pointer-events"] = $DvtSvgGradientUtils$$ ? "none" : "auto";
    $DvtSvgShadowUtils$$.style.width = $JSCompiler_alias_NULL$$;
    $DvtSvgShadowUtils$$.style.height = $JSCompiler_alias_NULL$$;
    $DvtSvgShadowUtils$$.style.left = "0px";
    $DvtSvgShadowUtils$$.style.top = "0px";
    $DvtSvgFilterUtils$$ ? ($DvtSvgGradientUtils$$ = this.$_getOffsets$(), this.$positionTip$($DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$.x, $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$.y)) : this.$positionTip$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$.style.visibility = "visible";
    ($DvtSvgPatternFillUtils$$ = this.$_context$.$_tooltipAttachedCallback$) && $DvtSvgPatternFillUtils$$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$hideTooltip$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$hideTooltip$$() {
    this.$clearTooltip$();
    this.$_timerIsRunning$ = this.$_tooltipDisplayed$ = $JSCompiler_alias_FALSE$$;
    var $DvtSvgShadowUtils$$ = document.getElementById(this.$_domElementId$);
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.style.visibility = "hidden", $DvtSvgShadowUtils$$.style.overflow = $JSCompiler_alias_NULL$$, $DvtSvgShadowUtils$$.style.width = "0px", $DvtSvgShadowUtils$$.style.height = "0px", $dvt$$9$$.$Agent$.$isRightToLeft$(this.$_context$) ? $DvtSvgShadowUtils$$.style.left = $DvtSvgShadowUtils$$.style.right : $DvtSvgShadowUtils$$.style.left = "0px", $DvtSvgShadowUtils$$.style.top = "0px")
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$getTooltipElem$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$getTooltipElem$$() {
    var $DvtSvgShadowUtils$$ = document.getElementById(this.$_domElementId$);
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$InitializeTooltipElem$());
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$InitializeTooltipElem$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$InitializeTooltipElem$$() {
    var $DvtSvgShadowUtils$$ = document.createElement("div");
    $DvtSvgShadowUtils$$.id = this.$_domElementId$;
    $DvtSvgShadowUtils$$.style.visibility = "hidden";
    document.body.appendChild($DvtSvgShadowUtils$$);
    this.$InitContent$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$InitContent$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$showTooltip$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$showTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtSvgImageFillUtils$$ && 0 != $DvtSvgImageFillUtils$$.length && (this.$_x$ = $DvtSvgShadowUtils$$, this.$_y$ = $DvtSvgPatternFillUtils$$, this.$_text$ = $DvtSvgImageFillUtils$$, this.$_trackMouse$ = $DvtSvgFilterUtils$$, this.$_timerIsRunning$ || ($DvtSvgShadowUtils$$ = document.createElement("span"), $DvtSvgShadowUtils$$.className = "OraDVTTooltipText", $DvtSvgShadowUtils$$.innerHTML = $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$.style.color = $dvt$$9$$.$HtmlTooltipManager$.$_FONT_COLOR$, 
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = $dvt$$9$$.$HtmlTooltipManager$.$_BORDER_COLOR$), this.$getTooltipElem$().style.borderColor = $DvtSvgFilterContext$$, $dvt$$9$$.$Agent$.$isTouchDevice$() || this.$_tooltipDisplayed$ && this.$_trackMouse$ ? this.$_displayTooltip$(this.$_x$, this.$_y$, this.$_text$, this.$_borderColor$) : (this.$_timerIsRunning$ = $JSCompiler_alias_TRUE$$, this.$_showTimerId$ = window.setTimeout($dvt$$9$$.$Obj$.$createCallback$(this, this.$_handleShowTimer$), $dvt$$9$$.$HtmlTooltipManager$.$_SHOW_DELAY$))))
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$clearTooltip$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$clearTooltip$$() {
    this.$_showTimerId$ && (window.clearTimeout(this.$_showTimerId$), this.$_trackMouse$ = this.$_text$ = this.$_y$ = this.$_x$ = this.$_showTimerId$ = $JSCompiler_alias_VOID$$);
    this.$_hideTimerId$ && (window.clearTimeout(this.$_hideTimerId$), this.$_hideTimerId$ = $JSCompiler_alias_VOID$$)
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$_handleShowTimer$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$_handleShowTimer$$() {
    this.$_timerIsRunning$ = $JSCompiler_alias_FALSE$$;
    this.$_displayTooltip$(this.$_x$, this.$_y$, this.$_text$, this.$_borderColor$);
    this.$_tooltipDisplayed$ = $JSCompiler_alias_TRUE$$
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$_displayTooltip$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$_displayTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_isTooltip$ = $JSCompiler_alias_TRUE$$;
    this.$_showTextAtPosition$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $JSCompiler_alias_TRUE$$, this.$_context$.$getTooltipStyleClass$())
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$_getOffsets$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$_getOffsets$$() {
    var $DvtSvgShadowUtils$$ = this.$getTooltipBounds$();
    if($dvt$$9$$.$Agent$.$isTouchDevice$()) {
      return new $dvt$$9$$.$Point$(0 - $DvtSvgShadowUtils$$.$w$ / 2, -30 - $DvtSvgShadowUtils$$.$h$)
    }
    var $DvtSvgPatternFillUtils$$ = -8 - $DvtSvgShadowUtils$$.$h$, $DvtSvgImageFillUtils$$ = 8;
    this.$_isTooltip$ && ($DvtSvgPatternFillUtils$$ = 22, $DvtSvgImageFillUtils$$ = 0);
    $dvt$$9$$.$Agent$.$isRightToLeft$(this.$_context$) && ($DvtSvgImageFillUtils$$ = -$DvtSvgImageFillUtils$$ - $DvtSvgShadowUtils$$.$w$);
    return new $dvt$$9$$.$Point$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$getTooltipBounds$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$getTooltipBounds$$() {
    var $DvtSvgShadowUtils$$ = this.$getTooltipElem$();
    $DvtSvgShadowUtils$$.style.height = "auto";
    return new $dvt$$9$$.$Rectangle$(parseInt($DvtSvgShadowUtils$$.style.left), parseInt($DvtSvgShadowUtils$$.style.top), $DvtSvgShadowUtils$$.offsetWidth, $DvtSvgShadowUtils$$.offsetHeight)
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$positionTip$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$positionTip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getTooltipElem$(), $DvtSvgGradientUtils$$ = this.$getTooltipBounds$(), $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$w$, $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$h$, $DvtSvgFilterContext$$ = new $dvt$$9$$.$Rectangle$(window.pageXOffset + $dvt$$9$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$, window.pageYOffset + $dvt$$9$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$, window.innerWidth - 2 * $dvt$$9$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$, window.innerHeight - 
    2 * $dvt$$9$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$), $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$;
    $DvtSvgShadowUtils$$ + $DvtSvgFilterUtils$$ > $DvtSvgFilterContext$$.x + $DvtSvgFilterContext$$.$w$ && ($DvtSvgImplFactory$$ = $DvtSvgFilterContext$$.x + $DvtSvgFilterContext$$.$w$ - $DvtSvgFilterUtils$$);
    $DvtSvgImplFactory$$ < $DvtSvgFilterContext$$.x && ($DvtSvgImplFactory$$ = $DvtSvgFilterContext$$.x);
    Math.abs($DvtSvgFilterContext$$.x) > $dvt$$9$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$ && ($DvtSvgImageFillUtils$$.style.width = Math.min($DvtSvgImageFillUtils$$.clientWidth, $DvtSvgFilterContext$$.x + $DvtSvgFilterContext$$.$w$ - $DvtSvgImplFactory$$) + "px", $DvtSvgPatternFillUtils$$ += $DvtSvgGradientUtils$$ - $DvtSvgImageFillUtils$$.offsetHeight, $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.offsetHeight, $DvtSvgImageFillUtils$$.style.overflow = "hidden");
    $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ > $DvtSvgFilterContext$$.y + $DvtSvgFilterContext$$.$h$ && ($DvtSvgFilterUtils$$ = $DvtSvgFilterContext$$.y + $DvtSvgFilterContext$$.$h$ - $DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ < $DvtSvgFilterContext$$.y && ($DvtSvgFilterUtils$$ = $DvtSvgFilterContext$$.y);
    $DvtSvgImageFillUtils$$.style.left = $DvtSvgImplFactory$$ + "px";
    $DvtSvgImageFillUtils$$.style.top = $DvtSvgFilterUtils$$ + "px"
  };
  $dvt$$9$$.$HtmlTooltipManager$.prototype.$getCustomTooltip$ = function $$dvt$$9$$$$HtmlTooltipManager$$$$getCustomTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = this.$getTooltipElem$();$DvtSvgImageFillUtils$$.hasChildNodes();) {
      $DvtSvgImageFillUtils$$.removeChild($DvtSvgImageFillUtils$$.firstChild)
    }
    $DvtSvgPatternFillUtils$$.parentElement = $DvtSvgImageFillUtils$$;
    $DvtSvgImageFillUtils$$.className = "";
    $DvtSvgImageFillUtils$$.style.borderColor = "";
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$($DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$.className && (this.$_isCustomClassName$ = $JSCompiler_alias_TRUE$$);
    $DvtSvgImageFillUtils$$.style.borderColor && (this.$_isCustomBorderColor$ = $JSCompiler_alias_TRUE$$);
    return!$DvtSvgGradientUtils$$ && $DvtSvgImageFillUtils$$.hasChildNodes() ? $JSCompiler_alias_TRUE$$ : $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$HtmlTooltipManager$.$_restoreTag$ = function $$dvt$$9$$$$HtmlTooltipManager$$$_restoreTag$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.replace(RegExp("\x26lt;(/?)" + $DvtSvgPatternFillUtils$$ + "([^\x26]*)(/?)\x26gt;", "g"), "\x3c$1" + $DvtSvgPatternFillUtils$$ + "$2$3\x3e")
  };
  $dvt$$9$$.$HtmlTooltipManager$.$createStartTag$ = function $$dvt$$9$$$$HtmlTooltipManager$$$createStartTag$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return"\x3c" + $DvtSvgShadowUtils$$ + ' style\x3d"' + $DvtSvgPatternFillUtils$$.toString() + '"\x3e'
  };
  $dvt$$9$$.$HtmlKeyboardListenerUtils$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$HtmlKeyboardListenerUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$HtmlKeyboardListenerUtils$.$ATTR_IGNORE_EVENTS_FROM_TARGET$ = "_dvtIgnoreEventsFromTarget";
  $dvt$$9$$.$HtmlKeyboardListenerUtils$.$getListener$ = function $$dvt$$9$$$$HtmlKeyboardListenerUtils$$$getListener$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ ? $dvt$$9$$.$HtmlKeyboardListenerUtils$.$_captureListener$ : $dvt$$9$$.$HtmlKeyboardListenerUtils$.$_bubbleListener$
  };
  $dvt$$9$$.$HtmlKeyboardListenerUtils$.$_bubbleListener$ = function $$dvt$$9$$$$HtmlKeyboardListenerUtils$$$_bubbleListener$$($DvtSvgShadowUtils$$) {
    if(!$dvt$$9$$.$HtmlKeyboardListenerUtils$.$_checkIgnoreTarget$($DvtSvgShadowUtils$$)) {
      var $DvtSvgPatternFillUtils$$;
      if(this.$_currentObj$) {
        $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$_currentObj$.$getObj$().$getCtx$()), this.$_currentObj$.$getObj$().$FireListener$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_FALSE$$)
      }else {
        if(this.$_obj$ && this.$_obj$ instanceof Array) {
          var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = this.$_obj$.length;
          for($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgFilterUtils$$;$DvtSvgImageFillUtils$$++) {
            $DvtSvgGradientUtils$$ = this.$_obj$[$DvtSvgImageFillUtils$$], $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$.$getObj$().$getCtx$()), $DvtSvgGradientUtils$$.$getObj$().$FireListener$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_FALSE$$)
          }
        }
      }
    }
  };
  $dvt$$9$$.$HtmlKeyboardListenerUtils$.$_captureListener$ = function $$dvt$$9$$$$HtmlKeyboardListenerUtils$$$_captureListener$$($DvtSvgShadowUtils$$) {
    if(!$dvt$$9$$.$HtmlKeyboardListenerUtils$.$_checkIgnoreTarget$($DvtSvgShadowUtils$$)) {
      var $DvtSvgPatternFillUtils$$;
      this.$_currentObj$ && ($DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$_currentObj$.$getObj$().$getCtx$()), this.$_currentObj$.$getObj$().$FireListener$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_TRUE$$));
      if(this.$_obj$ && this.$_obj$ instanceof Array) {
        var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = this.$_obj$.length;
        for($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgFilterUtils$$;$DvtSvgImageFillUtils$$++) {
          $DvtSvgGradientUtils$$ = this.$_obj$[$DvtSvgImageFillUtils$$], $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$.$getObj$().$getCtx$()), $DvtSvgGradientUtils$$.$getObj$().$FireListener$($DvtSvgPatternFillUtils$$, $JSCompiler_alias_TRUE$$)
        }
      }
    }
  };
  $dvt$$9$$.$HtmlKeyboardListenerUtils$.$_checkIgnoreTarget$ = function $$dvt$$9$$$$HtmlKeyboardListenerUtils$$$_checkIgnoreTarget$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.target && $DvtSvgShadowUtils$$.target[$dvt$$9$$.$HtmlKeyboardListenerUtils$.$ATTR_IGNORE_EVENTS_FROM_TARGET$] ? $JSCompiler_alias_TRUE$$ : $JSCompiler_alias_FALSE$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtDomXmlParser$$, $dvt$$9$$.$Obj$);
  $DvtDomXmlParser$$.prototype.parse = function $$DvtDomXmlParser$$$$parse$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_parser$.parseFromString($DvtSvgShadowUtils$$, "text/xml").documentElement;
    return new $dvt$$9$$.$DomXmlNode$($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$DomXmlNode$ = $JSCompiler_set$$("$_node$");
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$DomXmlNode$, $dvt$$9$$.$XmlNode$);
  $dvt$$9$$.$DomXmlNode$.prototype.$getAttr$ = function $$dvt$$9$$$$DomXmlNode$$$$getAttr$$($DvtSvgShadowUtils$$) {
    return this.$_node$.getAttribute($DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$DomXmlNode$.prototype.$getChildNodes$ = function $$dvt$$9$$$$DomXmlNode$$$$getChildNodes$$() {
    for(var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$_node$.firstChild;$DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$;) {
      1 == $DvtSvgPatternFillUtils$$.nodeType && $DvtSvgShadowUtils$$.push(new $dvt$$9$$.$DomXmlNode$($DvtSvgPatternFillUtils$$)), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.nextSibling
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$DomXmlNode$.prototype.getName = function $$dvt$$9$$$$DomXmlNode$$$getName$() {
    return this.$_node$.nodeName
  };
  $dvt$$9$$.$DomXmlNode$.prototype.getAttributes = function $$dvt$$9$$$$DomXmlNode$$$getAttributes$() {
    for(var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$_node$.attributes.length, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = this.$_node$.attributes[$DvtSvgImageFillUtils$$];
      $DvtSvgGradientUtils$$.name && ("undefined" != typeof $DvtSvgGradientUtils$$.value && $DvtSvgGradientUtils$$.value != $JSCompiler_alias_NULL$$) && $DvtSvgShadowUtils$$.push({name:$DvtSvgGradientUtils$$.name, value:$DvtSvgGradientUtils$$.value})
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$DomXmlNode$.prototype.$getAllChildNodes$ = function $$dvt$$9$$$$DomXmlNode$$$$getAllChildNodes$$() {
    for(var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$_node$.firstChild;$DvtSvgPatternFillUtils$$ != $JSCompiler_alias_NULL$$;) {
      $DvtSvgShadowUtils$$.push(new $dvt$$9$$.$DomXmlNode$($DvtSvgPatternFillUtils$$)), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.nextSibling
    }
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$DomXmlNode$.prototype.getNodeValue = function $$dvt$$9$$$$DomXmlNode$$$getNodeValue$() {
    return this.$_node$.nodeValue
  };
  $dvt$$9$$.$DomXmlNode$.prototype.getTextContent = function $$dvt$$9$$$$DomXmlNode$$$getTextContent$() {
    return this.$_node$.textContent
  };
  $dvt$$9$$.$DomXmlNode$.prototype.getElementsByTagName = function $$dvt$$9$$$$DomXmlNode$$$getElementsByTagName$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = [];
    if($DvtSvgShadowUtils$$ = this.$_node$.getElementsByTagName($DvtSvgShadowUtils$$)) {
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgPatternFillUtils$$.push(new $dvt$$9$$.$DomXmlNode$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]))
      }
    }
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$EventFactory$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$EventFactory$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$EventFactory$.$newEvent$ = function $$dvt$$9$$$$EventFactory$$$newEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = {type:$DvtSvgShadowUtils$$};
    $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$.id = $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newOptionChangeEvent$ = function $$dvt$$9$$$$EventFactory$$$newOptionChangeEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("optionChange");
    $DvtSvgPatternFillUtils$$.key = "dataCursorPosition";
    $DvtSvgPatternFillUtils$$.value = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.optionMetadata = $JSCompiler_alias_VOID$$;
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newAdfPropertyChangeEvent$ = function $$dvt$$9$$$$EventFactory$$$newAdfPropertyChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("adfPropertyChange");
    $DvtSvgImageFillUtils$$.properties = {};
    $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && ($DvtSvgImageFillUtils$$.properties[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newAdfContextMenuEvent$ = function $$dvt$$9$$$$EventFactory$$$newAdfContextMenuEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("adfContextMenu");
    $DvtSvgImageFillUtils$$.nativeEvent = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.menuId = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newAdfHidePopupEvent$ = function $$dvt$$9$$$$EventFactory$$$newAdfHidePopupEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("adfHidePopup");
    $DvtSvgImageFillUtils$$.popupId = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.relatedTarget = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newAdfLogEvent$ = function $$dvt$$9$$$$EventFactory$$$newAdfLogEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("adfLog");
    $DvtSvgImageFillUtils$$.level = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.message = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newAdfShowPopupEvent$ = function $$dvt$$9$$$$EventFactory$$$newAdfShowPopupEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("adfShowPopup");
    $DvtSvgFilterUtils$$.showPopupBehavior = $DvtSvgShadowUtils$$;
    $DvtSvgFilterUtils$$.launcherBounds = $DvtSvgPatternFillUtils$$;
    $DvtSvgFilterUtils$$.launcherId = $DvtSvgImageFillUtils$$;
    $DvtSvgFilterUtils$$.triggerType = $DvtSvgGradientUtils$$;
    return $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newActionEvent$ = function $$dvt$$9$$$$EventFactory$$$newActionEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("action");
    $DvtSvgGradientUtils$$.commandId = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.clientId = $DvtSvgImageFillUtils$$;
    $DvtSvgGradientUtils$$.subType = $DvtSvgShadowUtils$$;
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newCategoryHideEvent$ = function $$dvt$$9$$$$EventFactory$$$newCategoryHideEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("categoryHide");
    $DvtSvgImageFillUtils$$.category = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.hiddenCategories = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newCategoryShowEvent$ = function $$dvt$$9$$$$EventFactory$$$newCategoryShowEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("categoryShow");
    $DvtSvgImageFillUtils$$.category = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.hiddenCategories = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newCategoryHighlightEvent$ = function $$dvt$$9$$$$EventFactory$$$newCategoryHighlightEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("categoryHighlight");
    $DvtSvgImageFillUtils$$._highlightType = $DvtSvgPatternFillUtils$$ ? "over" : "out";
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ || [];
    $DvtSvgImageFillUtils$$.categories = !($DvtSvgShadowUtils$$ instanceof Array) ? [$DvtSvgShadowUtils$$] : $DvtSvgShadowUtils$$;
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newDrillEvent$ = function $$dvt$$9$$$$EventFactory$$$newDrillEvent$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$EventFactory$.$newEvent$("drill", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventFactory$.$newReadyEvent$ = function $$dvt$$9$$$$EventFactory$$$newReadyEvent$$() {
    return $dvt$$9$$.$EventFactory$.$newEvent$("ready")
  };
  $dvt$$9$$.$EventFactory$.$newSelectionEvent$ = function $$dvt$$9$$$$EventFactory$$$newSelectionEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("selection");
    $DvtSvgPatternFillUtils$$.selection = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newTouchHoldReleaseEvent$ = function $$dvt$$9$$$$EventFactory$$$newTouchHoldReleaseEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("touchHoldRelease");
    $DvtSvgPatternFillUtils$$.nativeEvent = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newValueChangeEvent$ = function $$dvt$$9$$$$EventFactory$$$newValueChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("valueChange");
    $DvtSvgGradientUtils$$.oldValue = $DvtSvgShadowUtils$$;
    $DvtSvgGradientUtils$$.newValue = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.complete = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newChartDrillEvent$ = function $$dvt$$9$$$$EventFactory$$$newChartDrillEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$EventFactory$.$newDrillEvent$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.series = $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$.group = $DvtSvgImageFillUtils$$;
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newChartSelectionEvent$ = function $$dvt$$9$$$$EventFactory$$$newChartSelectionEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$) {
    $DvtSvgShadowUtils$$ = $dvt$$9$$.$EventFactory$.$newSelectionEvent$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.complete = $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$.xMin = $DvtSvgImageFillUtils$$;
    $DvtSvgShadowUtils$$.xMax = $DvtSvgGradientUtils$$;
    $DvtSvgShadowUtils$$.startGroup = $DvtSvgFilterUtils$$;
    $DvtSvgShadowUtils$$.endGroup = $DvtSvgFilterContext$$;
    $DvtSvgShadowUtils$$.yMin = $DvtSvgImplFactory$$;
    $DvtSvgShadowUtils$$.yMax = $DvtHtmlRichTooltipManager$$;
    $DvtSvgShadowUtils$$.y2Min = $DvtDomXmlParser$$;
    $DvtSvgShadowUtils$$.y2Max = $DvtContextMenuTooltipItem$$;
    return $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newChartViewportChangeEvent$ = function $$dvt$$9$$$$EventFactory$$$newChartViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    var $DvtHtmlRichTooltipManager$$ = $dvt$$9$$.$EventFactory$.$newEvent$("viewportChange");
    $DvtHtmlRichTooltipManager$$.complete = $DvtSvgShadowUtils$$;
    $DvtHtmlRichTooltipManager$$.xMin = $DvtSvgPatternFillUtils$$;
    $DvtHtmlRichTooltipManager$$.xMax = $DvtSvgImageFillUtils$$;
    $DvtHtmlRichTooltipManager$$.startGroup = $DvtSvgGradientUtils$$;
    $DvtHtmlRichTooltipManager$$.endGroup = $DvtSvgFilterUtils$$;
    $DvtHtmlRichTooltipManager$$.yMin = $DvtSvgFilterContext$$;
    $DvtHtmlRichTooltipManager$$.yMax = $DvtSvgImplFactory$$;
    return $DvtHtmlRichTooltipManager$$
  };
  $dvt$$9$$.$EventFactory$.$newSunburstCollapseEvent$ = function $$dvt$$9$$$$EventFactory$$$newSunburstCollapseEvent$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$EventFactory$.$newEvent$("collapse", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventFactory$.$newSunburstExpandEvent$ = function $$dvt$$9$$$$EventFactory$$$newSunburstExpandEvent$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$EventFactory$.$newEvent$("expand", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$EventFactory$.$newSunburstRotationEvent$ = function $$dvt$$9$$$$EventFactory$$$newSunburstRotationEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("rotation");
    $DvtSvgImageFillUtils$$.complete = $DvtSvgPatternFillUtils$$;
    $DvtSvgImageFillUtils$$.startAngle = $DvtSvgShadowUtils$$ % 360;
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newThematicMapViewportChangeEvent$ = function $$dvt$$9$$$$EventFactory$$$newThematicMapViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("viewportChange");
    $DvtSvgGradientUtils$$.panX = $DvtSvgShadowUtils$$;
    $DvtSvgGradientUtils$$.panY = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.zoom = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newTimelineViewportChangeEvent$ = function $$dvt$$9$$$$EventFactory$$$newTimelineViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$9$$.$EventFactory$.$newEvent$("viewportChange");
    $DvtSvgGradientUtils$$.viewportStart = $DvtSvgShadowUtils$$;
    $DvtSvgGradientUtils$$.viewportEnd = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.minorAxisScale = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$EventFactory$.$newTreemapIsolateEvent$ = function $$dvt$$9$$$$EventFactory$$$newTreemapIsolateEvent$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$EventFactory$.$newEvent$("isolate", $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$ClientBehaviorEvent$ = function $$dvt$$9$$$$ClientBehaviorEvent$$($DvtSvgShadowUtils$$) {
    this.Init($dvt$$9$$.$ClientBehaviorEvent$.$TYPE$);
    this.$_clientBehavior$ = $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ClientBehaviorEvent$, $dvt$$9$$.$BaseComponentEvent$);
  $dvt$$9$$.$ClientBehaviorEvent$.$TYPE$ = "clientBehavior";
  $dvt$$9$$.$PanEvent$ = function $$dvt$$9$$$$PanEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($dvt$$9$$.$PanEvent$.$TYPE$);
    this.type = this.$getType$();
    this.$_subtype$ = $DvtSvgShadowUtils$$;
    this.$_newX$ = $DvtSvgPatternFillUtils$$;
    this.$_newY$ = $DvtSvgImageFillUtils$$;
    this.$_oldX$ = $DvtSvgGradientUtils$$;
    this.$_oldY$ = $DvtSvgFilterUtils$$;
    this.$_animator$ = $DvtSvgFilterContext$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$PanEvent$, $dvt$$9$$.$BaseComponentEvent$);
  $dvt$$9$$.$PanEvent$.$TYPE$ = "dvtPan";
  $dvt$$9$$.$PanEvent$.$SUBTYPE_DRAG_PAN_BEGIN$ = "dragPanBegin";
  $dvt$$9$$.$PanEvent$.$SUBTYPE_DRAG_PAN_END$ = "dragPanEnd";
  $dvt$$9$$.$PanEvent$.$SUBTYPE_PANNED$ = "panned";
  $dvt$$9$$.$PanEvent$.$SUBTYPE_PANNING$ = "panning";
  $dvt$$9$$.$PanEvent$.$SUBTYPE_ELASTIC_ANIM_BEGIN$ = "elasticAnimBegin";
  $dvt$$9$$.$PanEvent$.$SUBTYPE_ELASTIC_ANIM_END$ = "elasticAnimEnd";
  $dvt$$9$$.$PanEvent$.prototype.$getSubType$ = $JSCompiler_get$$("$_subtype$");
  $dvt$$9$$.$ZoomEvent$ = function $$dvt$$9$$$$ZoomEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    this.Init($dvt$$9$$.$ZoomEvent$.$TYPE$);
    this.type = this.$getType$();
    this.$_subtype$ = $DvtSvgShadowUtils$$;
    this.$_newZoom$ = $DvtSvgPatternFillUtils$$;
    this.$_oldZoom$ = $DvtSvgImageFillUtils$$;
    this.$_animator$ = $DvtSvgGradientUtils$$;
    this.$_zoomToFitBounds$ = $DvtSvgFilterUtils$$;
    this.$_centerPoint$ = $DvtSvgFilterContext$$;
    this.$_tx$ = $DvtSvgImplFactory$$;
    this.$_ty$ = $DvtHtmlRichTooltipManager$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ZoomEvent$, $dvt$$9$$.$BaseComponentEvent$);
  $dvt$$9$$.$ZoomEvent$.$TYPE$ = "dvtZoom";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ZOOMED$ = "zoomed";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ZOOMING$ = "zooming";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ZOOM_END$ = "zoomEnd";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_DRAG_ZOOM_BEGIN$ = "dragZoomBegin";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_DRAG_ZOOM_END$ = "dragZoomEnd";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ZOOM_AND_CENTER$ = "zoomAndCenter";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ZOOM_TO_FIT_CALC_BOUNDS$ = "zoomToFitCalcBounds";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ZOOM_TO_FIT_BEGIN$ = "zoomToFitBegin";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ZOOM_TO_FIT_END$ = "zoomToFitEnd";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ELASTIC_ANIM_BEGIN$ = "elasticAnimBegin";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ELASTIC_ANIM_END$ = "elasticAnimEnd";
  $dvt$$9$$.$ZoomEvent$.$SUBTYPE_ADJUST_PAN_CONSTRAINTS$ = "adjustPanConstraints";
  $dvt$$9$$.$ZoomEvent$.prototype.$getSubType$ = $JSCompiler_get$$("$_subtype$");
  $dvt$$9$$.$ZoomEvent$.prototype.$setZoomToFitBounds$ = $JSCompiler_set$$("$_zoomToFitBounds$");
  $dvt$$9$$.$EventDispatcher$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$EventDispatcher$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$EventDispatcher$.dispatchEvent = function $$dvt$$9$$$$EventDispatcher$$dispatchEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.call && $DvtSvgShadowUtils$$.call($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$ = {};
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$ToolkitUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$ToolkitUtils$.$SVG_NS$ = "http://www.w3.org/2000/svg";
  $dvt$$9$$.$ToolkitUtils$.$XLINK_NS$ = "http://www.w3.org/1999/xlink";
  $dvt$$9$$.$ToolkitUtils$.$createSvgDocument$ = function $$dvt$$9$$$$ToolkitUtils$$$createSvgDocument$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = document.createElementNS($dvt$$9$$.$ToolkitUtils$.$SVG_NS$, "svg");
    $DvtSvgShadowUtils$$ != $JSCompiler_alias_NULL$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "id", $DvtSvgShadowUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "width", "100%");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "height", "100%");
    $dvt$$9$$.$Agent$.$isPlatformIE$() && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "focusable", "false");
    return $DvtSvgPatternFillUtils$$
  };
  $dvt$$9$$.$ToolkitUtils$.$getDragFeedback$ = function $$dvt$$9$$$$ToolkitUtils$$$getDragFeedback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ instanceof Array || ($DvtSvgShadowUtils$$ = [$DvtSvgShadowUtils$$]);
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$DragAndDropUtils$.$getDragFeedbackBounds$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$ToolkitUtils$.$_getDragFeedbackSVG$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = {};
    $DvtSvgFilterUtils$$.width = $DvtSvgImageFillUtils$$.$w$ + 2 * $dvt$$9$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$;
    $DvtSvgFilterUtils$$.height = $DvtSvgImageFillUtils$$.$h$ + 2 * $dvt$$9$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$;
    $DvtSvgGradientUtils$$ && ($DvtSvgFilterUtils$$.$svg$ = $DvtSvgGradientUtils$$);
    return $DvtSvgFilterUtils$$
  };
  $dvt$$9$$.$ToolkitUtils$.$_getDragFeedbackSVG$ = function $$dvt$$9$$$$ToolkitUtils$$$_getDragFeedbackSVG$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$ToolkitUtils$.$createSvgDocument$("dnd"), $DvtSvgGradientUtils$$ = "translate(" + ($dvt$$9$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$ - $DvtSvgPatternFillUtils$$.x) + "," + ($dvt$$9$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$ - $DvtSvgPatternFillUtils$$.y) + ")", $DvtSvgFilterUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("g");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "transform", $DvtSvgGradientUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    for($DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$.$getImpl$().$getElem$().cloneNode($JSCompiler_alias_TRUE$$);
      $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgImplFactory$$, "filter") && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "filter", $JSCompiler_alias_NULL$$);
      var $DvtHtmlRichTooltipManager$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("g");
      $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgFilterUtils$$, $DvtHtmlRichTooltipManager$$);
      for(var $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$.$getPathToStage$(), $DvtDomXmlParser$$ = $JSCompiler_alias_NULL$$, $DvtContextMenuTooltipItem$$ = 1;$DvtContextMenuTooltipItem$$ < $DvtSvgFilterContext$$.length;$DvtContextMenuTooltipItem$$++) {
        $DvtDomXmlParser$$ ? ($DvtDomXmlParser$$ = $DvtDomXmlParser$$.$clone$(), $DvtDomXmlParser$$.concat($DvtSvgFilterContext$$[$DvtContextMenuTooltipItem$$].$getMatrix$())) : $DvtDomXmlParser$$ = $DvtSvgFilterContext$$[$DvtContextMenuTooltipItem$$].$getMatrix$()
      }
      $DvtDomXmlParser$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtHtmlRichTooltipManager$$, "transform", "matrix(" + $DvtDomXmlParser$$.$_a$ + "," + $DvtDomXmlParser$$.$_c$ + "," + $DvtDomXmlParser$$.$_b$ + "," + $DvtDomXmlParser$$.$_d$ + "," + $DvtDomXmlParser$$.$_tx$ + "," + $DvtDomXmlParser$$.$_ty$ + ")");
      $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtHtmlRichTooltipManager$$, $DvtSvgImplFactory$$)
    }
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$ToolkitUtils$.$addDomEventListener$ = function $$dvt$$9$$$$ToolkitUtils$$$addDomEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.addEventListener && $DvtSvgShadowUtils$$.addEventListener($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$removeDomEventListener$ = function $$dvt$$9$$$$ToolkitUtils$$$removeDomEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.removeEventListener && $DvtSvgShadowUtils$$.removeEventListener($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$appendChildElem$ = function $$dvt$$9$$$$ToolkitUtils$$$appendChildElem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$.appendChild($DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$getAttrNS$ = function $$dvt$$9$$$$ToolkitUtils$$$getAttrNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$.getAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$ = function $$dvt$$9$$$$ToolkitUtils$$$getAttrNullNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.getAttributeNS($JSCompiler_alias_NULL$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$hasAttrNS$ = function $$dvt$$9$$$$ToolkitUtils$$$hasAttrNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$.hasAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$hasAttrNullNS$ = function $$dvt$$9$$$$ToolkitUtils$$$hasAttrNullNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$9$$.$ToolkitUtils$.$hasAttrNS$($DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$setAttrNS$ = function $$dvt$$9$$$$ToolkitUtils$$$setAttrNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgFilterUtils$$ != $JSCompiler_alias_NULL$$ && $DvtSvgGradientUtils$$ == $DvtSvgFilterUtils$$ ? $dvt$$9$$.$ToolkitUtils$.$hasAttrNS$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) && ($dvt$$9$$.$Agent$.$isPlatformIE$() && 10 >= $dvt$$9$$.$Agent$.$getVersion$() || $dvt$$9$$.$Agent$.$isBrowserChrome$() && !$dvt$$9$$.$Agent$.$isEnvironmentTest$() && 34 <= $dvt$$9$$.$Agent$.$getVersion$() && "text" == $DvtSvgShadowUtils$$.nodeName && ("x" == $DvtSvgImageFillUtils$$ || 
    "y" == $DvtSvgImageFillUtils$$) ? $DvtSvgShadowUtils$$.setAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $dvt$$9$$.$ToolkitUtils$.$removeAttrNS$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)) : $DvtSvgShadowUtils$$.setAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$ = function $$dvt$$9$$$$ToolkitUtils$$$setAttrNullNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$setAttrNS$($DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$removeAttrNS$ = function $$dvt$$9$$$$ToolkitUtils$$$removeAttrNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$hasAttrNS$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) && $DvtSvgShadowUtils$$.removeAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$removeAttrNullNS$ = function $$dvt$$9$$$$ToolkitUtils$$$removeAttrNullNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$9$$.$ToolkitUtils$.$removeAttrNS$($DvtSvgShadowUtils$$, $JSCompiler_alias_NULL$$, $DvtSvgPatternFillUtils$$)
  };
  $dvt$$9$$.$ToolkitUtils$.$getLinkCallback$ = function $$dvt$$9$$$$ToolkitUtils$$$getLinkCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$ || $DvtSvgPatternFillUtils$$ ? function() {
      if($DvtSvgShadowUtils$$ == $JSCompiler_alias_NULL$$) {
        self.location = $DvtSvgPatternFillUtils$$
      }else {
        var $DvtSvgImageFillUtils$$ = window.open($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
        $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.focus()
      }
    } : $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$ToolkitUtils$.$roundDecimal$ = function $$dvt$$9$$$$ToolkitUtils$$$roundDecimal$$($DvtSvgShadowUtils$$) {
    return $dvt$$9$$.$Agent$.$isEnvironmentTest$() ? Math.round(1E3 * $DvtSvgShadowUtils$$) / 1E3 : $DvtSvgShadowUtils$$
  };
  $dvt$$9$$.$ToolkitUtils$.$getUrlById$ = function $$dvt$$9$$$$ToolkitUtils$$$getUrlById$$($DvtSvgShadowUtils$$) {
    return"url(" + (($dvt$$9$$.$Agent$.$isPlatformIE$() ? document.querySelector("base") != $JSCompiler_alias_NULL$$ : document.URL != document.baseURI) ? document.URL + "#" : "#") + $DvtSvgShadowUtils$$ + ")"
  };
  $dvt$$9$$.$ToolkitUtils$.$setSvgSize$ = function $$dvt$$9$$$$ToolkitUtils$$$setSvgSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$_root$;
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "width", $DvtSvgPatternFillUtils$$ + "px");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "height", $DvtSvgImageFillUtils$$ + "px")
  };
  $dvt$$9$$.$ToolkitUtils$.$getOuterDivSize$ = function $$dvt$$9$$$$ToolkitUtils$$$getOuterDivSize$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = window.getComputedStyle($DvtSvgShadowUtils$$.$_root$.parentNode);
    return new $dvt$$9$$.$Dimension$(parseFloat($DvtSvgShadowUtils$$.width), parseFloat($DvtSvgShadowUtils$$.height))
  };
  $dvt$$9$$.$Bundle$.$addDefaultStrings$($dvt$$9$$.$Bundle$.$UTIL_PREFIX$, {SCALING_SUFFIX_THOUSAND:"K", SCALING_SUFFIX_MILLION:"M", SCALING_SUFFIX_BILLION:"B", SCALING_SUFFIX_TRILLION:"T", SCALING_SUFFIX_QUADRILLION:"Q", NUMBER_FORMAT_DECIMAL_SEPARATOR:".", NUMBER_FORMAT_GROUPING_SEPARATOR:",", NUMBER_FORMAT_GROUPING_SIZE:3, MONTH_JANUARY:"January", MONTH_FEBRUARY:"February", MONTH_MARCH:"March", MONTH_APRIL:"April", MONTH_MAY:"May", MONTH_JUNE:"June", MONTH_JULY:"July", MONTH_AUGUST:"August", MONTH_SEPTEMBER:"September", 
  MONTH_OCTOBER:"October", MONTH_NOVEMBER:"November", MONTH_DECEMBER:"December", MONTH_SHORT_JANUARY:"Jan", MONTH_SHORT_FEBRUARY:"Feb", MONTH_SHORT_MARCH:"Mar", MONTH_SHORT_APRIL:"Apr", MONTH_SHORT_MAY:"May", MONTH_SHORT_JUNE:"Jun", MONTH_SHORT_JULY:"Jul", MONTH_SHORT_AUGUST:"Aug", MONTH_SHORT_SEPTEMBER:"Sep", MONTH_SHORT_OCTOBER:"Oct", MONTH_SHORT_NOVEMBER:"Nov", MONTH_SHORT_DECEMBER:"Dec", DAY_MONDAY:"Monday", DAY_TUESDAY:"Tuesday", DAY_WEDNESDAY:"Wednesday", DAY_THURSDAY:"Thursday", DAY_FRIDAY:"Friday", 
  DAY_SATURDAY:"Saturday", DAY_SUNDAY:"Sunday", DAY_SHORT_MONDAY:"Mon", DAY_SHORT_TUESDAY:"Tue", DAY_SHORT_WEDNESDAY:"Wed", DAY_SHORT_THURSDAY:"Thu", DAY_SHORT_FRIDAY:"Fri", DAY_SHORT_SATURDAY:"Sat", DAY_SHORT_SUNDAY:"Sun", TIME_AM:"AM", TIME_PM:"PM", INVALID_DATA:"Invalid data", NO_DATA:"No data to display", CLEAR_SELECTION:"Clear Selection", EXPAND:"Expand", COLLAPSE:"Collapse", DATA_VISUALIZATION:"Data Visualization", STATE_SELECTED:"Selected", STATE_UNSELECTED:"Unselected", STATE_MAXIMIZED:"Maximized", 
  STATE_MINIMIZED:"Minimized", STATE_EXPANDED:"Expanded", STATE_COLLAPSED:"Collapsed", STATE_ISOLATED:"Isolated", STATE_HIDDEN:"Hidden", STATE_VISIBLE:"Visible", STATE_DRILLABLE:"Drillable", ARIA_LABEL_STATE_DELIMITER:", ", ARIA_LABEL_DESC_DELIMITER:". ", COLON_SEP_LIST:"{0}: {1}", COUNT_WITH_TOTAL:"{0} of {1}", ZOOM_IN:"Zoom In", ZOOM_OUT:"Zoom Out", CHART:"Chart", DIAGRAM:"Diagram", GAUGE:"Gauge", HIERARCHY_VIEWER:"Hierarchy Viewer", LEGEND:"Legend", NBOX:"{0} Box", PICTOCHART:"Picture Chart", 
  SUNBURST:"Sunburst", TAG_CLOUD:"Tag Cloud", THEMATIC_MAP:"Thematic Map", TIMELINE:"Timeline", TIMELINE_SERIES:"Series", TREEMAP:"Treemap"});
  $dvt$$9$$.$SvgDocumentUtils$ = $JSCompiler_emptyFn$$();
  $dvt$$9$$.$Obj$.$createSubclass$($dvt$$9$$.$SvgDocumentUtils$, $dvt$$9$$.$Obj$);
  $dvt$$9$$.$SvgDocumentUtils$.elementFromPoint = function $$dvt$$9$$$$SvgDocumentUtils$$elementFromPoint$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = document.elementFromPoint($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);$DvtSvgImageFillUtils$$;) {
      if($DvtSvgImageFillUtils$$.$_obj$ && $DvtSvgImageFillUtils$$.$_obj$.$getObj$ && $DvtSvgImageFillUtils$$.$_obj$.$getObj$()) {
        return $DvtSvgImageFillUtils$$.$_obj$.$getObj$()
      }
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.parentNode
    }
    return $JSCompiler_alias_NULL$$
  };
  $dvt$$9$$.$SvgDocumentUtils$.$elementFromTouch$ = function $$dvt$$9$$$$SvgDocumentUtils$$$elementFromTouch$$($DvtSvgShadowUtils$$) {
    return this.elementFromPoint($DvtSvgShadowUtils$$.clientX, $DvtSvgShadowUtils$$.clientY)
  };
  $dvt$$9$$.$SvgDocumentUtils$.$isFilterSupported$ = function $$dvt$$9$$$$SvgDocumentUtils$$$isFilterSupported$$() {
    return!($dvt$$9$$.$Agent$.$isPlatformIE$() && 10 > $dvt$$9$$.$Agent$.$getVersion$()) && !($dvt$$9$$.$Agent$.$isBrowserSafari$() && 536 > $dvt$$9$$.$Agent$.$getVersion$()) && !($dvt$$9$$.$Agent$.$isTouchDevice$() && !$dvt$$9$$.$Agent$.$isBrowserSafari$())
  };
  $dvt$$9$$.$SvgDocumentUtils$.$isEventAvailableOutsideClip$ = function $$dvt$$9$$$$SvgDocumentUtils$$$isEventAvailableOutsideClip$$() {
    return $dvt$$9$$.$Agent$.$isBrowserSafari$()
  };
  $dvt$$9$$.$SvgDocumentUtils$.$isFilterStraightLineAdjustmentNeeded$ = function $$dvt$$9$$$$SvgDocumentUtils$$$isFilterStraightLineAdjustmentNeeded$$() {
    return $dvt$$9$$.$Agent$.$isPlatformGecko$()
  };
  $dvt$$9$$.$SvgDocumentUtils$.$fixGeckoContainerForFilter$ = function $$dvt$$9$$$$SvgDocumentUtils$$$fixGeckoContainerForFilter$$($DvtSvgShadowUtils$$) {
    if($DvtSvgShadowUtils$$ && $dvt$$9$$.$Agent$.$isPlatformGecko$() && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getImpl$().$getElem$())) {
      var $DvtSvgPatternFillUtils$$ = $dvt$$9$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgShadowUtils$$, "transform");
      $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = "matrix(1 0 0 1 0 0)");
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "transform", $DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$SvgDocumentUtils$.$cancelDomEvent$ = function $$dvt$$9$$$$SvgDocumentUtils$$$cancelDomEvent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.stopPropagation && $DvtSvgShadowUtils$$.stopPropagation(), $DvtSvgShadowUtils$$.preventDefault && $DvtSvgShadowUtils$$.preventDefault(), $DvtSvgShadowUtils$$.cancelBubble = $JSCompiler_alias_TRUE$$, $DvtSvgShadowUtils$$.cancel = $JSCompiler_alias_TRUE$$, $DvtSvgShadowUtils$$.returnValue = $JSCompiler_alias_FALSE$$)
  };
  $dvt$$9$$.$SvgDocumentUtils$.$addDragListeners$ = function $$dvt$$9$$$$SvgDocumentUtils$$$addDragListeners$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    function $DvtSvgImplFactory$$($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.stopPropagation()
    }
    function $DvtHtmlRichTooltipManager$$($DvtSvgShadowUtils$$) {
      $DvtCustomTooltipItem$$ ? (document.removeEventListener("touchmove", $DvtDomXmlParser$$, $JSCompiler_alias_TRUE$$), document.removeEventListener("touchend", $DvtHtmlRichTooltipManager$$, $JSCompiler_alias_TRUE$$)) : (document.removeEventListener("mousemove", $DvtDomXmlParser$$, $JSCompiler_alias_TRUE$$), document.removeEventListener("mouseup", $DvtHtmlRichTooltipManager$$, $JSCompiler_alias_TRUE$$), $DvtCustomTooltipItem$$ || setTimeout(function() {
        document.removeEventListener("click", $DvtSvgImplFactory$$, $JSCompiler_alias_TRUE$$)
      }, 50));
      $DvtCircularShape$$.webkitUserSelect = $dvt$$9$$.$SvgDocumentUtils$.$_webkitUserSelect$;
      $DvtCircularShape$$.MozUserSelect = $dvt$$9$$.$SvgDocumentUtils$.$_mozUserSelect$;
      $DvtSvgShadowUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, $DvtCustomTooltip$$);
      $DvtSvgGradientUtils$$.call($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$)
    }
    function $DvtDomXmlParser$$($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$ = $dvt$$9$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, $DvtCustomTooltip$$);
      $DvtSvgImageFillUtils$$.call($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$)
    }
    function $DvtContextMenuTooltipItem$$($DvtSvgShadowUtils$$) {
      $DvtSvgPatternFillUtils$$.call($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$) && ($DvtCustomTooltipItem$$ ? (document.addEventListener("touchmove", $DvtDomXmlParser$$, $JSCompiler_alias_TRUE$$), document.addEventListener("touchend", $DvtHtmlRichTooltipManager$$, $JSCompiler_alias_TRUE$$)) : (document.addEventListener("mousemove", $DvtDomXmlParser$$, $JSCompiler_alias_TRUE$$), document.addEventListener("mouseup", $DvtHtmlRichTooltipManager$$, $JSCompiler_alias_TRUE$$), $DvtSvgFilterContext$$ && 
      document.addEventListener("click", $DvtSvgImplFactory$$, $JSCompiler_alias_TRUE$$)), $dvt$$9$$.$SvgDocumentUtils$.$_webkitUserSelect$ = $DvtCircularShape$$.webkitUserSelect, $dvt$$9$$.$SvgDocumentUtils$.$_mozUserSelect$ = $DvtCircularShape$$.MozUserSelect, $DvtCircularShape$$.webkitUserSelect = "none", $DvtCircularShape$$.MozUserSelect = "none")
    }
    var $DvtCustomTooltipItem$$ = $dvt$$9$$.$Agent$.$isTouchDevice$(), $DvtCustomTooltip$$ = $DvtSvgShadowUtils$$.$getCtx$(), $DvtCircularShape$$ = $dvt$$9$$.$Agent$.$isEnvironmentBrowser$() ? document.body.style : {};
    $DvtCustomTooltipItem$$ ? $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$TouchEvent$.$TOUCHSTART$, $DvtContextMenuTooltipItem$$) : $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$9$$.$MouseEvent$.$MOUSEDOWN$, $DvtContextMenuTooltipItem$$);
    return function() {
      $DvtCustomTooltipItem$$ ? (document.removeEventListener("touchmove", $DvtDomXmlParser$$, $JSCompiler_alias_TRUE$$), document.removeEventListener("touchend", $DvtHtmlRichTooltipManager$$, $JSCompiler_alias_TRUE$$)) : (document.removeEventListener("mousemove", $DvtDomXmlParser$$, $JSCompiler_alias_TRUE$$), document.removeEventListener("mouseup", $DvtHtmlRichTooltipManager$$, $JSCompiler_alias_TRUE$$), document.removeEventListener("click", $DvtSvgImplFactory$$, $JSCompiler_alias_TRUE$$));
      $DvtCircularShape$$.webkitUserSelect = $dvt$$9$$.$SvgDocumentUtils$.$_webkitUserSelect$;
      $DvtCircularShape$$.MozUserSelect = $dvt$$9$$.$SvgDocumentUtils$.$_mozUserSelect$
    }
  };
  var $DvtSvgImageLoader$$ = {$_cache$:{}};
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSvgImageLoader$$, $dvt$$9$$.$Obj$);
  $DvtSvgImageLoader$$.$addBubbleEventListener$ = function $$DvtSvgImageLoader$$$$addBubbleEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return window.addEventListener ? ($dvt$$9$$.$ToolkitUtils$.$addDomEventListener$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $JSCompiler_alias_FALSE$$), $JSCompiler_alias_TRUE$$) : window.attachEvent ? ($DvtSvgShadowUtils$$.attachEvent("on" + $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), $JSCompiler_alias_TRUE$$) : $JSCompiler_alias_FALSE$$
  };
  $DvtSvgImageLoader$$.$loadImage$ = function $$DvtSvgImageLoader$$$$loadImage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_cache$[$DvtSvgShadowUtils$$];
    if($DvtSvgImageFillUtils$$) {
      if($DvtSvgImageFillUtils$$.$_image$) {
        $DvtSvgImageLoader$$.$_addListenerToQueue$($DvtSvgImageFillUtils$$.$_listeners$, $DvtSvgPatternFillUtils$$)
      }else {
        return $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$($DvtSvgImageFillUtils$$), $DvtSvgImageFillUtils$$
      }
    }else {
      this.$loadNewImage$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
    }
    return $JSCompiler_alias_NULL$$
  };
  $DvtSvgImageLoader$$.$loadNewImage$ = function $$DvtSvgImageLoader$$$$loadNewImage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = document.createElement("img"), $DvtSvgGradientUtils$$ = {$_listeners$:[], url:$DvtSvgShadowUtils$$, $_image$:$DvtSvgImageFillUtils$$};
    $DvtSvgPatternFillUtils$$ && $DvtSvgImageLoader$$.$_addListenerToQueue$($DvtSvgGradientUtils$$.$_listeners$, $DvtSvgPatternFillUtils$$);
    this.$_cache$[$DvtSvgShadowUtils$$] = $DvtSvgGradientUtils$$;
    $DvtSvgImageLoader$$.$addBubbleEventListener$($DvtSvgImageFillUtils$$, "load", function() {
      $DvtSvgGradientUtils$$.width = $DvtSvgImageFillUtils$$.width;
      $DvtSvgGradientUtils$$.height = $DvtSvgImageFillUtils$$.height;
      delete $DvtSvgGradientUtils$$.$_image$;
      var $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.$_listeners$.length;
      for($DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgShadowUtils$$++) {
        if($DvtSvgGradientUtils$$.$_listeners$[$DvtSvgShadowUtils$$]) {
          $DvtSvgGradientUtils$$.$_listeners$[$DvtSvgShadowUtils$$]($DvtSvgGradientUtils$$)
        }
      }
      delete $DvtSvgGradientUtils$$.$_listeners$
    });
    $DvtSvgImageFillUtils$$.src = $DvtSvgShadowUtils$$
  };
  $DvtSvgImageLoader$$.$_addListenerToQueue$ = function $$DvtSvgImageLoader$$$$_addListenerToQueue$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if($DvtSvgPatternFillUtils$$) {
      for(var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        if($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] === $DvtSvgPatternFillUtils$$) {
          return
        }
      }
      $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$)
    }
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtHtmlRichTooltipManager$$, $dvt$$9$$.$HtmlTooltipManager$);
  $DvtHtmlRichTooltipManager$$.prototype.Init = function $$DvtHtmlRichTooltipManager$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_storedContexts$ = {};
    $DvtHtmlRichTooltipManager$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)
  };
  $DvtHtmlRichTooltipManager$$.prototype.$InitContent$ = function $$DvtHtmlRichTooltipManager$$$$$InitContent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.innerHTML = "";
    $DvtSvgShadowUtils$$ = new $dvt$$9$$.$Context$($DvtSvgShadowUtils$$, "DvtCustomTooltip");
    this.$_storedContexts$[this.$_domElementId$] = $DvtSvgShadowUtils$$
  };
  $DvtHtmlRichTooltipManager$$.prototype.$GetStoredContext$ = function $$DvtHtmlRichTooltipManager$$$$$GetStoredContext$$() {
    return this.$_storedContexts$[this.$_domElementId$]
  };
  $DvtHtmlRichTooltipManager$$.prototype.$showRichElement$ = function $$DvtHtmlRichTooltipManager$$$$$showRichElement$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$showRichElementAtPosition$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)
  };
  $DvtHtmlRichTooltipManager$$.prototype.$showRichElementAtPosition$ = function $$DvtHtmlRichTooltipManager$$$$$showRichElementAtPosition$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$getTooltipElem$();
    $DvtSvgGradientUtils$$.style.position = "absolute";
    $DvtSvgGradientUtils$$.style.zIndex = 2147483647;
    var $DvtSvgFilterUtils$$ = this.$GetStoredContext$();
    $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.$_stage$, $DvtSvgFilterUtils$$.$removeChildren$(), $DvtSvgFilterUtils$$.$addChild$($DvtSvgImageFillUtils$$.$getRootDisplayable$()), $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.$Render$ && $DvtSvgImageFillUtils$$.$Render$(), $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.$getImpl$().$_SVGRoot$, $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "width", $DvtSvgImageFillUtils$$.$_displayWidth$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, 
    "height", $DvtSvgImageFillUtils$$.$_displayHeight$), this.$PostElement$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $JSCompiler_alias_FALSE$$, $JSCompiler_alias_TRUE$$))
  };
  $DvtHtmlRichTooltipManager$$.prototype.$hideTooltip$ = function $$DvtHtmlRichTooltipManager$$$$$hideTooltip$$() {
    $DvtHtmlRichTooltipManager$$.$superclass$.$hideTooltip$.call(this);
    var $DvtSvgShadowUtils$$ = this.$GetStoredContext$();
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$_stage$.$removeChildren$()
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSvgImplFactory$$, $dvt$$9$$.$Obj$);
  $DvtSvgImplFactory$$.prototype.$newDefs$ = function $$DvtSvgImplFactory$$$$$newDefs$$() {
    return $dvt$$9$$.$SvgShapeUtils$.createElement("defs")
  };
  $DvtSvgImplFactory$$.prototype.$getImageLoader$ = function $$DvtSvgImplFactory$$$$$getImageLoader$$() {
    return $dvt$$9$$.$Agent$.$isEnvironmentBrowser$() ? $DvtSvgImageLoader$$ : $dvt$$9$$.$JavaImageLoader$
  };
  $DvtSvgImplFactory$$.prototype.$getDocumentUtils$ = function $$DvtSvgImplFactory$$$$$getDocumentUtils$$() {
    return $dvt$$9$$.$SvgDocumentUtils$
  };
  $DvtSvgImplFactory$$.prototype.$newParser$ = function $$DvtSvgImplFactory$$$$$newParser$$() {
    return $dvt$$9$$.$Agent$.$isEnvironmentBrowser$() ? new $DvtDomXmlParser$$ : new $DvtJavaXmlParser$$
  };
  $DvtSvgImplFactory$$.prototype.$newTooltipManager$ = function $$DvtSvgImplFactory$$$$$newTooltipManager$$($DvtSvgShadowUtils$$) {
    return new $dvt$$9$$.$HtmlTooltipManager$(this.$_context$, $DvtSvgShadowUtils$$)
  };
  $DvtSvgImplFactory$$.prototype.$newRichTooltipManager$ = function $$DvtSvgImplFactory$$$$$newRichTooltipManager$$($DvtSvgShadowUtils$$) {
    return new $DvtHtmlRichTooltipManager$$(this.$_context$, $DvtSvgShadowUtils$$)
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSvgFilterContext$$, $dvt$$9$$.$Obj$);
  $DvtSvgFilterContext$$.prototype.Init = function $$DvtSvgFilterContext$$$$Init$() {
    this.$_regionPctRect$ = new $dvt$$9$$.$Rectangle$(-10, -10, 120, 120);
    this.$_counter$ = 0;
    this.$_resultIdsUnder$ = [];
    this.$_resultIdsOver$ = []
  };
  $DvtSvgFilterContext$$.prototype.$createResultId$ = function $$DvtSvgFilterContext$$$$$createResultId$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = "filtRes");
    return $DvtSvgShadowUtils$$ + this.$_counter$++
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSvgFilterUtils$$, $dvt$$9$$.$Obj$);
  $DvtSvgFilterUtils$$.$_counter$ = 0;
  $DvtSvgFilterUtils$$.$createFilter$ = function $$DvtSvgFilterUtils$$$$createFilter$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for(var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("filter", $DvtSvgFilterUtils$$.$CreateFilterId$()), $DvtSvgGradientUtils$$ = new $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImplFactory$$++) {
      var $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$];
      $DvtHtmlRichTooltipManager$$ && $DvtSvgFilterUtils$$.$CreateFilterPrimitives$($DvtSvgImageFillUtils$$, $DvtHtmlRichTooltipManager$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$)
    }
    var $DvtDomXmlParser$$ = $JSCompiler_alias_FALSE$$;
    if($DvtSvgPatternFillUtils$$) {
      var $DvtContextMenuTooltipItem$$ = $DvtSvgPatternFillUtils$$.$getElem$().getBBox();
      if($DvtContextMenuTooltipItem$$ && ($DvtSvgImplFactory$$ = $DvtContextMenuTooltipItem$$.width, $DvtHtmlRichTooltipManager$$ = $DvtContextMenuTooltipItem$$.height, 0 == $DvtHtmlRichTooltipManager$$ || 0 == $DvtSvgImplFactory$$)) {
        var $DvtCustomTooltipItem$$;
        $DvtSvgPatternFillUtils$$.$getStroke$ && ($DvtCustomTooltipItem$$ = $DvtSvgPatternFillUtils$$.$getStroke$());
        $DvtDomXmlParser$$ = 10;
        $DvtCustomTooltipItem$$ && ($DvtDomXmlParser$$ = $DvtCustomTooltipItem$$.getWidth());
        $DvtCustomTooltipItem$$ = $DvtContextMenuTooltipItem$$.x;
        $DvtContextMenuTooltipItem$$ = $DvtContextMenuTooltipItem$$.y;
        if($dvt$$9$$.$SvgDocumentUtils$.$isFilterStraightLineAdjustmentNeeded$() && $DvtSvgPatternFillUtils$$ instanceof $dvt$$9$$.$Polyline$) {
          var $DvtCustomTooltip$$ = $dvt$$9$$.$ArrayUtils$.copy($DvtSvgPatternFillUtils$$.$getPoints$());
          0 == $DvtSvgImplFactory$$ && ($DvtCustomTooltip$$[0] += 0.01);
          0 == $DvtHtmlRichTooltipManager$$ && ($DvtCustomTooltip$$[1] += 0.01);
          $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$.$getElem$(), "points", $dvt$$9$$.$SvgShapeUtils$.$convertPointsArray$($DvtCustomTooltip$$))
        }
        0 == $DvtHtmlRichTooltipManager$$ && ($DvtHtmlRichTooltipManager$$ = 2 * $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$ -= $DvtDomXmlParser$$);
        0 == $DvtSvgImplFactory$$ && ($DvtSvgImplFactory$$ = 2 * $DvtDomXmlParser$$, $DvtCustomTooltipItem$$ -= $DvtDomXmlParser$$);
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "x", $DvtCustomTooltipItem$$);
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "y", $DvtContextMenuTooltipItem$$);
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "width", $DvtSvgImplFactory$$);
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "height", $DvtHtmlRichTooltipManager$$);
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "filterUnits", "userSpaceOnUse");
        $DvtDomXmlParser$$ = $JSCompiler_alias_TRUE$$
      }
    }
    $DvtDomXmlParser$$ || (-10 != $DvtSvgGradientUtils$$.$_regionPctRect$.x && ("Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.x && "-Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.x) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "x", $DvtSvgGradientUtils$$.$_regionPctRect$.x + "%"), -10 != $DvtSvgGradientUtils$$.$_regionPctRect$.y && ("Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.y && "-Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.y) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, 
    "y", $DvtSvgGradientUtils$$.$_regionPctRect$.y + "%"), 120 != $DvtSvgGradientUtils$$.$_regionPctRect$.$w$ && ("Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.$w$ && "-Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.$w$) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "width", $DvtSvgGradientUtils$$.$_regionPctRect$.$w$ + "%"), 120 != $DvtSvgGradientUtils$$.$_regionPctRect$.$h$ && ("Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.$h$ && "-Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.$h$) && 
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "height", $DvtSvgGradientUtils$$.$_regionPctRect$.$h$ + "%"));
    $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$.$_resultIdsUnder$.length;
    $DvtHtmlRichTooltipManager$$ = $DvtSvgGradientUtils$$.$_resultIdsOver$.length;
    $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feMerge");
    if(0 < $DvtSvgImplFactory$$) {
      for($DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtSvgImplFactory$$;$DvtDomXmlParser$$++) {
        $DvtCustomTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feMergeNode"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "in", $DvtSvgGradientUtils$$.$_resultIdsUnder$[$DvtDomXmlParser$$]), $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$)
      }
    }
    $DvtCustomTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feMergeNode");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "in", "SourceGraphic");
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$);
    if(0 < $DvtHtmlRichTooltipManager$$) {
      for($DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtHtmlRichTooltipManager$$;$DvtDomXmlParser$$++) {
        $DvtCustomTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feMergeNode"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "in", $DvtSvgGradientUtils$$.$_resultIdsOver$[$DvtDomXmlParser$$]), $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$)
      }
    }
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$);
    return $DvtSvgImageFillUtils$$
  };
  $DvtSvgFilterUtils$$.$CreateFilterPrimitives$ = function $$DvtSvgFilterUtils$$$$CreateFilterPrimitives$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgImageFillUtils$$ instanceof $dvt$$9$$.$Shadow$ && $DvtSvgShadowUtils$$.$createFilterPrimitives$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $DvtSvgFilterUtils$$.$CreateFilterId$ = function $$DvtSvgFilterUtils$$$$CreateFilterId$$() {
    return"filt" + $DvtSvgFilterUtils$$.$_counter$++
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSvgGradientUtils$$, $dvt$$9$$.$Obj$);
  $DvtSvgGradientUtils$$.$createElem$ = function $$DvtSvgGradientUtils$$$$createElem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$LinearGradientFill$ || $DvtSvgShadowUtils$$ instanceof $dvt$$9$$.$LinearGradientStroke$, $DvtSvgGradientUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement($DvtSvgImageFillUtils$$ ? "linearGradient" : "radialGradient", $DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.$_arColors$, $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$_arAlphas$, $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$_arStops$, 
    $DvtDomXmlParser$$ = $DvtSvgShadowUtils$$.$getBounds$(), $DvtContextMenuTooltipItem$$ = $DvtSvgFilterContext$$.length;
    for($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtContextMenuTooltipItem$$;$DvtSvgFilterUtils$$++) {
      var $DvtCustomTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("stop");
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "offset", "" + 100 * $DvtHtmlRichTooltipManager$$[$DvtSvgFilterUtils$$] + "%");
      var $DvtCustomTooltip$$ = $DvtSvgFilterContext$$[$DvtSvgFilterUtils$$];
      if($DvtCustomTooltip$$) {
        var $DvtCircularShape$$ = $DvtSvgImplFactory$$[$DvtSvgFilterUtils$$];
        ($dvt$$9$$.$Agent$.$isEnvironmentBatik$() || $dvt$$9$$.$Agent$.$isBrowserSafari$()) && -1 !== $DvtCustomTooltip$$.indexOf("rgba") ? ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stop-color", $dvt$$9$$.$ColorUtils$.$getRGB$($DvtCustomTooltip$$)), $DvtCircularShape$$ != $JSCompiler_alias_NULL$$ ? $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stop-opacity", $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtCustomTooltip$$) * $DvtCircularShape$$, 1) : $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, 
        "stop-opacity", $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtCustomTooltip$$), 1)) : ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stop-color", $DvtCustomTooltip$$), $DvtCircularShape$$ != $JSCompiler_alias_NULL$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stop-opacity", $DvtCircularShape$$, 1))
      }
      $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgGradientUtils$$, $DvtCustomTooltipItem$$)
    }
    $DvtCustomTooltipItem$$ = !$DvtDomXmlParser$$ || 0 == $DvtDomXmlParser$$[0] && 0 == $DvtDomXmlParser$$[1] && 0 == $DvtDomXmlParser$$[2] && 0 == $DvtDomXmlParser$$[3];
    if($DvtSvgImageFillUtils$$) {
      $DvtContextMenuTooltipItem$$ = $DvtSvgShadowUtils$$.$getAngle$();
      $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ = "0%";
      $DvtSvgFilterContext$$ = "100%";
      $DvtSvgImplFactory$$ = "0%";
      $DvtHtmlRichTooltipManager$$ = $JSCompiler_alias_TRUE$$;
      if($DvtCustomTooltipItem$$) {
        45 === $DvtContextMenuTooltipItem$$ ? $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$ = "100%" : 90 === $DvtContextMenuTooltipItem$$ ? ($DvtSvgFilterUtils$$ = "100%", $DvtSvgFilterContext$$ = "0%") : 135 === $DvtContextMenuTooltipItem$$ ? ($DvtSvgImageFillUtils$$ = "100%", $DvtSvgFilterContext$$ = "0%", $DvtSvgImplFactory$$ = "100%") : 270 === $DvtContextMenuTooltipItem$$ ? ($DvtSvgFilterContext$$ = "0%", $DvtSvgImplFactory$$ = "100%") : 0 !== $DvtContextMenuTooltipItem$$ && ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, 
        "gradientTransform", "rotate(" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$(-$DvtContextMenuTooltipItem$$) + " .5 .5)"), $DvtHtmlRichTooltipManager$$ = $JSCompiler_alias_FALSE$$)
      }else {
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "gradientUnits", "userSpaceOnUse");
        $DvtSvgImageFillUtils$$ = "0";
        $DvtSvgFilterUtils$$ = "0.5";
        var $DvtSvgFilterContext$$ = "1", $DvtSvgImplFactory$$ = "0.5", $DvtCustomTooltip$$ = $DvtDomXmlParser$$[2], $DvtCircularShape$$ = $DvtDomXmlParser$$[3], $DvtCustomTooltipItem$$ = $DvtDomXmlParser$$[0], $DvtDomXmlParser$$ = $DvtDomXmlParser$$[1], $DvtContextMenuTooltipItem$$ = -$DvtContextMenuTooltipItem$$, $DvtCustomTooltipEventHandler$$ = "translate(" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtCustomTooltipItem$$) + " " + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtDomXmlParser$$) + 
        ")", $DvtContextMenuTooltipItem$$ = "scale(" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtCustomTooltip$$) + " " + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtCircularShape$$) + ") " + ("rotate(" + $dvt$$9$$.$ToolkitUtils$.$roundDecimal$($DvtContextMenuTooltipItem$$) + " .5 .5)");
        if(0 != $DvtCustomTooltipItem$$ || 0 != $DvtDomXmlParser$$) {
          $DvtContextMenuTooltipItem$$ = $DvtCustomTooltipEventHandler$$ + " " + $DvtContextMenuTooltipItem$$
        }
        $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "gradientTransform", $DvtContextMenuTooltipItem$$)
      }
      $DvtHtmlRichTooltipManager$$ && ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "x1", $DvtSvgImageFillUtils$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "y1", $DvtSvgFilterUtils$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "x2", $DvtSvgFilterContext$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "y2", $DvtSvgImplFactory$$))
    }else {
      $DvtCustomTooltipItem$$ || ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "gradientUnits", "userSpaceOnUse"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "cx", $DvtSvgShadowUtils$$.$getCx$()), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "cy", $DvtSvgShadowUtils$$.$getCy$()), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "fx", $DvtSvgShadowUtils$$.$getCx$()), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, 
      "fy", $DvtSvgShadowUtils$$.$getCy$()), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "r", $DvtSvgShadowUtils$$.$getRadius$()))
    }
    return $DvtSvgGradientUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSvgImageFillUtils$$, $dvt$$9$$.$Obj$);
  $DvtSvgImageFillUtils$$.$createElem$ = function $$DvtSvgImageFillUtils$$$$createElem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("pattern", $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("image", $DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getSrc$(), $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.$_bound$;
    $DvtSvgFilterContext$$ && ($dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "x", $DvtSvgFilterContext$$.x), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "y", $DvtSvgFilterContext$$.y), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "x", $DvtSvgFilterContext$$.x), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "y", $DvtSvgFilterContext$$.y), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "width", $DvtSvgFilterContext$$.$w$), 
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "height", $DvtSvgFilterContext$$.$h$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "width", $DvtSvgFilterContext$$.$w$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "height", $DvtSvgFilterContext$$.$h$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "patternUnits", "userSpaceOnUse"), $DvtSvgFilterUtils$$ && $dvt$$9$$.$ToolkitUtils$.$setAttrNS$($DvtSvgGradientUtils$$, 
    $dvt$$9$$.$Image$.$XLINK_NS$, "xlink:href", $DvtSvgFilterUtils$$));
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgImageFillUtils$$
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSvgPatternFillUtils$$, $dvt$$9$$.$Obj$);
  $DvtSvgPatternFillUtils$$.$_SM_WIDTH$ = 8;
  $DvtSvgPatternFillUtils$$.$_SM_HEIGHT$ = 8;
  $DvtSvgPatternFillUtils$$.$_LG_WIDTH$ = 16;
  $DvtSvgPatternFillUtils$$.$_LG_HEIGHT$ = 16;
  $DvtSvgPatternFillUtils$$.$createElem$ = function $$DvtSvgPatternFillUtils$$$$createElem$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("pattern", $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getPattern$(), $DvtSvgFilterContext$$;
    $DvtSvgPatternFillUtils$$.$IsSmallPattern$($DvtSvgFilterUtils$$) ? ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$_SM_WIDTH$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$_SM_HEIGHT$) : ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$_LG_WIDTH$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$_LG_HEIGHT$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "x", 0);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "y", 0);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "width", $DvtSvgFilterUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "height", $DvtSvgFilterContext$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "patternUnits", "userSpaceOnUse");
    ($DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getMatrix$()) && $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "patternTransform", "matrix(" + $DvtSvgFilterUtils$$.$_a$ + "," + $DvtSvgFilterUtils$$.$_c$ + "," + $DvtSvgFilterUtils$$.$_b$ + "," + $DvtSvgFilterUtils$$.$_d$ + "," + $DvtSvgFilterUtils$$.$_tx$ + "," + $DvtSvgFilterUtils$$.$_ty$ + ")");
    $DvtSvgPatternFillUtils$$.$CreatePatternElems$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgGradientUtils$$
  };
  $DvtSvgPatternFillUtils$$.$IsSmallPattern$ = function $$DvtSvgPatternFillUtils$$$$IsSmallPattern$$($DvtSvgShadowUtils$$) {
    return"s" === $DvtSvgShadowUtils$$.charAt(0)
  };
  $DvtSvgPatternFillUtils$$.$CreatePatternElems$ = function $$DvtSvgPatternFillUtils$$$$CreatePatternElems$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$;
    $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$getPattern$();
    var $DvtCustomTooltipItem$$ = $DvtSvgShadowUtils$$.$getColor$(), $DvtCustomTooltip$$ = $dvt$$9$$.$ColorUtils$.$getRGB$($DvtCustomTooltipItem$$), $DvtCustomTooltipItem$$ = $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtCustomTooltipItem$$);
    $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getBackgroundColor$();
    $DvtDomXmlParser$$ = $dvt$$9$$.$ColorUtils$.$getRGB$($DvtSvgGradientUtils$$);
    var $DvtCircularShape$$ = $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgGradientUtils$$);
    $DvtSvgPatternFillUtils$$.$IsSmallPattern$($DvtHtmlRichTooltipManager$$) ? ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$_SM_WIDTH$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$_SM_HEIGHT$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$_SM_WIDTH$, $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$.$_SM_HEIGHT$) : ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$_LG_WIDTH$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$_LG_HEIGHT$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$_LG_WIDTH$, 
    $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$.$_LG_HEIGHT$);
    $DvtDomXmlParser$$ && 0 < $DvtCircularShape$$ && ($DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("rect"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke", $DvtDomXmlParser$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-opacity", $DvtCircularShape$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-width", 1), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, 
    "fill", $DvtDomXmlParser$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "fill-opacity", $DvtCircularShape$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "x", 0), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "y", 0), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "width", $DvtSvgGradientUtils$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "height", $DvtSvgFilterUtils$$), 
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$));
    if($DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$SM_DIAG_UP_LT$ || $DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$LG_DIAG_UP_LT$) {
      $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("path"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke", $DvtCustomTooltip$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-width", 1), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-linecap", "square"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, 
      "d", $dvt$$9$$.$PathUtils$.moveTo(0, -$DvtSvgImplFactory$$ / 2) + $dvt$$9$$.$PathUtils$.lineTo(3 * $DvtSvgFilterContext$$ / 2, $DvtSvgImplFactory$$) + $dvt$$9$$.$PathUtils$.moveTo(-$DvtSvgFilterContext$$ / 2, 0) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgFilterContext$$ / 2, $DvtSvgImplFactory$$)), $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$)
    }else {
      if($DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$SM_DIAG_UP_RT$ || $DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$LG_DIAG_UP_RT$) {
        $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("path"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke", $DvtCustomTooltip$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-width", 1), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-linecap", "square"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, 
        "d", $dvt$$9$$.$PathUtils$.moveTo(-$DvtSvgFilterContext$$ / 2, $DvtSvgImplFactory$$) + $dvt$$9$$.$PathUtils$.lineTo($DvtSvgFilterContext$$, -$DvtSvgImplFactory$$ / 2) + $dvt$$9$$.$PathUtils$.moveTo(0, 3 * $DvtSvgImplFactory$$ / 2) + $dvt$$9$$.$PathUtils$.lineTo(3 * $DvtSvgFilterContext$$ / 2, 0)), $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$)
      }else {
        if($DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$SM_CROSSHATCH$ || $DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$LG_CROSSHATCH$) {
          $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("path"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke", $DvtCustomTooltip$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-width", 1), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "d", "M0,0L" + $DvtSvgGradientUtils$$ + 
          "," + $DvtSvgFilterUtils$$ + "M" + $DvtSvgGradientUtils$$ + ",0L0," + $DvtSvgFilterUtils$$), $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$)
        }else {
          if($DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$SM_CHECK$ || $DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$LG_CHECK$) {
            $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$ / 2, $DvtDomXmlParser$$ = $DvtSvgImplFactory$$ / 2, $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("path"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke", $DvtCustomTooltip$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-width", 
            1), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "fill", $DvtCustomTooltip$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "fill-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "d", "M" + $DvtHtmlRichTooltipManager$$ + ",0L" + $DvtSvgFilterContext$$ + ",0L" + $DvtSvgFilterContext$$ + "," + $DvtDomXmlParser$$ + "L" + $DvtHtmlRichTooltipManager$$ + "," + $DvtDomXmlParser$$ + "ZM0," + 
            $DvtDomXmlParser$$ + "L" + $DvtHtmlRichTooltipManager$$ + "," + $DvtDomXmlParser$$ + "L" + $DvtHtmlRichTooltipManager$$ + "," + $DvtSvgImplFactory$$ + "L0," + $DvtSvgImplFactory$$ + "Z"), $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$)
          }else {
            if($DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$SM_TRIANGLE_CHECK$ || $DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$LG_TRIANGLE_CHECK$) {
              $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("polygon"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke", $DvtCustomTooltip$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-width", 1), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "fill", $DvtCustomTooltip$$), 
              $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "fill-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "points", "0," + $DvtSvgFilterUtils$$ + " " + $DvtSvgGradientUtils$$ + ",0 " + $DvtSvgGradientUtils$$ + "," + $DvtSvgFilterUtils$$), $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$)
            }else {
              if($DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$SM_DIAMOND_CHECK$ || $DvtHtmlRichTooltipManager$$ === $dvt$$9$$.$PatternFill$.$LG_DIAMOND_CHECK$) {
                $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$ / 2, $DvtDomXmlParser$$ = $DvtSvgImplFactory$$ / 2, $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("polygon"), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke", $DvtCustomTooltip$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stroke-width", 
                1), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "fill", $DvtCustomTooltip$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "fill-opacity", $DvtCustomTooltipItem$$), $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "points", "0," + $DvtDomXmlParser$$ + " " + $DvtHtmlRichTooltipManager$$ + ",0 " + $DvtSvgGradientUtils$$ + "," + $DvtHtmlRichTooltipManager$$ + " " + $DvtHtmlRichTooltipManager$$ + "," + $DvtSvgFilterUtils$$), 
                $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$)
              }
            }
          }
        }
      }
    }
  };
  $dvt$$9$$.$Obj$.$createSubclass$($DvtSvgShadowUtils$$, $dvt$$9$$.$Obj$);
  $DvtSvgShadowUtils$$.$RADS_PER_DEGREE$ = Math.PI / 180;
  $DvtSvgShadowUtils$$.$createFilter$ = function $$DvtSvgShadowUtils$$$$createFilter$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$;
    if(!$DvtSvgPatternFillUtils$$.$_bLocked$) {
      var $DvtSvgFilterUtils$$ = new $DvtSvgFilterContext$$;
      $DvtSvgGradientUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("filter", $DvtSvgPatternFillUtils$$.$_Id$);
      $DvtSvgShadowUtils$$.$createFilterPrimitives$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
      var $DvtSvgImplFactory$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feMerge"), $DvtHtmlRichTooltipManager$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feMergeNode");
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtHtmlRichTooltipManager$$, "in", $DvtSvgFilterUtils$$.$_resultIdsUnder$[0]);
      $DvtSvgFilterUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feMergeNode");
      $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "in", "SourceGraphic");
      $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgGradientUtils$$, $DvtSvgImplFactory$$);
      $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$);
      $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImplFactory$$, $DvtSvgFilterUtils$$)
    }
    return $DvtSvgGradientUtils$$
  };
  $DvtSvgShadowUtils$$.$createFilterPrimitives$ = function $$DvtSvgShadowUtils$$$$createFilterPrimitives$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgImageFillUtils$$.$_bInner$ ? $DvtSvgShadowUtils$$.$CreateInnerFilterPrimitives$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$) : $DvtSvgShadowUtils$$.$CreateOuterFilterPrimitives$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$)
  };
  $DvtSvgShadowUtils$$.$CreateOuterFilterPrimitives$ = function $$DvtSvgShadowUtils$$$$CreateOuterFilterPrimitives$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.$_rgba$, $DvtSvgImplFactory$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgFilterContext$$) / 255, $DvtHtmlRichTooltipManager$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgFilterContext$$) / 255, $DvtDomXmlParser$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgFilterContext$$) / 255, $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgFilterContext$$), $DvtCustomTooltipItem$$ = $DvtSvgImageFillUtils$$.$_strength$, $DvtCustomTooltip$$ = 
    $DvtSvgImageFillUtils$$.$_blurX$, $DvtCircularShape$$ = $DvtSvgImageFillUtils$$.$_blurY$, $DvtCustomTooltipEventHandler$$ = $DvtSvgFilterContext$$ = 0;
    0 < $DvtSvgImageFillUtils$$.$_blurX$ && ($DvtSvgFilterContext$$ = Math.max($DvtSvgImageFillUtils$$.$_blurX$ / 3, 1));
    0 < $DvtSvgImageFillUtils$$.$_blurY$ && ($DvtCustomTooltipEventHandler$$ = Math.max($DvtSvgImageFillUtils$$.$_blurY$ / 3, 1));
    var $DvtCustomTooltipManager$$ = $DvtSvgImageFillUtils$$.$_distance$, $DvtStage$$ = $DvtSvgImageFillUtils$$.$_angle$ * $DvtSvgShadowUtils$$.$RADS_PER_DEGREE$;
    $DvtSvgImageFillUtils$$ = Math.cos($DvtStage$$) * $DvtCustomTooltipManager$$;
    var $DvtStage$$ = Math.sin($DvtStage$$) * $DvtCustomTooltipManager$$, $DvtPopupSource$$ = $DvtSvgGradientUtils$$.$getDimensions$($DvtSvgGradientUtils$$.getParent());
    if($DvtPopupSource$$) {
      var $DvtPopupBehaviorHandler$$ = Math.abs($DvtCustomTooltipManager$$), $DvtMarkerDefElem$$ = 2 * $DvtCustomTooltip$$, $DvtContextMenuSource$$ = 2 * $DvtCustomTooltip$$, $DvtCustomTooltip$$ = 2 * $DvtCircularShape$$, $DvtCircularShape$$ = 2 * $DvtCircularShape$$;
      0 < $DvtCustomTooltipManager$$ ? ($DvtMarkerDefElem$$ -= $DvtPopupBehaviorHandler$$, $DvtCustomTooltip$$ -= $DvtPopupBehaviorHandler$$, $DvtContextMenuSource$$ += $DvtPopupBehaviorHandler$$, $DvtCircularShape$$ += $DvtPopupBehaviorHandler$$) : 0 > $DvtCustomTooltipManager$$ && ($DvtMarkerDefElem$$ += $DvtPopupBehaviorHandler$$, $DvtCustomTooltip$$ += $DvtPopupBehaviorHandler$$, $DvtContextMenuSource$$ -= $DvtPopupBehaviorHandler$$, $DvtCircularShape$$ -= $DvtPopupBehaviorHandler$$);
      0 > $DvtMarkerDefElem$$ && ($DvtMarkerDefElem$$ = 0);
      0 > $DvtCustomTooltip$$ && ($DvtCustomTooltip$$ = 0);
      0 > $DvtContextMenuSource$$ && ($DvtContextMenuSource$$ = 0);
      0 > $DvtCircularShape$$ && ($DvtCircularShape$$ = 0);
      $DvtCustomTooltipManager$$ = 100 * ($DvtMarkerDefElem$$ / $DvtPopupSource$$.$w$);
      $DvtPopupBehaviorHandler$$ = 100 * ($DvtContextMenuSource$$ / $DvtPopupSource$$.$w$);
      $DvtCustomTooltip$$ = 100 * ($DvtCustomTooltip$$ / $DvtPopupSource$$.$h$);
      $DvtPopupSource$$ = 100 * ($DvtCircularShape$$ / $DvtPopupSource$$.$h$);
      $DvtSvgFilterUtils$$.$_regionPctRect$.x > -$DvtCustomTooltipManager$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.x = -$DvtCustomTooltipManager$$);
      $DvtSvgFilterUtils$$.$_regionPctRect$.y > -$DvtCustomTooltip$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.y = -$DvtCustomTooltip$$);
      $DvtSvgFilterUtils$$.$_regionPctRect$.$w$ < 100 + $DvtCustomTooltipManager$$ + $DvtPopupBehaviorHandler$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.$w$ = 100 + $DvtCustomTooltipManager$$ + $DvtPopupBehaviorHandler$$);
      $DvtSvgFilterUtils$$.$_regionPctRect$.$h$ < 100 + $DvtCustomTooltip$$ + $DvtPopupSource$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.$h$ = 100 + $DvtCustomTooltip$$ + $DvtPopupSource$$)
    }
    $DvtSvgGradientUtils$$ instanceof $dvt$$9$$.$Polyline$ && ($DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$getStroke$().getWidth(), 1 < $DvtSvgGradientUtils$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.$h$ += $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$.$_regionPctRect$.y -= $DvtSvgGradientUtils$$));
    $DvtSvgGradientUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feColorMatrix");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "in", "SourceGraphic");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "type", "matrix");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "values", "0 0 0 " + $DvtSvgImplFactory$$ + " 0 0 0 0 " + $DvtHtmlRichTooltipManager$$ + " 0 0 0 0 " + $DvtDomXmlParser$$ + " 0 0 0 0 " + $DvtContextMenuTooltipItem$$ * $DvtCustomTooltipItem$$ + " 0");
    $DvtSvgImplFactory$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feGaussianBlur");
    $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$;
    $DvtSvgFilterContext$$ !== $DvtCustomTooltipEventHandler$$ && ($DvtHtmlRichTooltipManager$$ += " " + $DvtCustomTooltipEventHandler$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "stdDeviation", $DvtHtmlRichTooltipManager$$);
    $DvtCustomTooltipEventHandler$$ = $DvtSvgFilterUtils$$.$createResultId$("blur");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "result", $DvtCustomTooltipEventHandler$$);
    $DvtSvgFilterContext$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feOffset");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "dx", $DvtSvgImageFillUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "dy", $DvtStage$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "in", $DvtCustomTooltipEventHandler$$);
    $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$.$createResultId$("offset");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "result", $DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$.$_resultIdsUnder$.push($DvtSvgImageFillUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgImplFactory$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$)
  };
  $DvtSvgShadowUtils$$.$CreateInnerFilterPrimitives$ = function $$DvtSvgShadowUtils$$$$CreateInnerFilterPrimitives$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.$_rgba$, $DvtSvgFilterContext$$ = $dvt$$9$$.$ColorUtils$.$getRed$($DvtSvgFilterUtils$$) / 255, $DvtSvgImplFactory$$ = $dvt$$9$$.$ColorUtils$.$getGreen$($DvtSvgFilterUtils$$) / 255, $DvtHtmlRichTooltipManager$$ = $dvt$$9$$.$ColorUtils$.$getBlue$($DvtSvgFilterUtils$$) / 255, $DvtSvgImplFactory$$ = $dvt$$9$$.$ColorUtils$.$makeRGB$($DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$), $DvtDomXmlParser$$ = $dvt$$9$$.$ColorUtils$.$getAlpha$($DvtSvgFilterUtils$$), 
    $DvtContextMenuTooltipItem$$ = Math.max($DvtSvgImageFillUtils$$.$_blurX$ / 2, 1), $DvtCustomTooltipItem$$ = Math.max($DvtSvgImageFillUtils$$.$_blurY$ / 2, 1), $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$.$_distance$, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.$_strength$;
    $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.$_angle$ * $DvtSvgShadowUtils$$.$RADS_PER_DEGREE$;
    $DvtSvgFilterUtils$$ = Math.cos($DvtSvgImageFillUtils$$) * $DvtHtmlRichTooltipManager$$;
    $DvtHtmlRichTooltipManager$$ *= Math.sin($DvtSvgImageFillUtils$$);
    $DvtSvgImageFillUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feFlood");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "in", "SourceGraphic");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "flood-opacity", $DvtDomXmlParser$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "flood-color", $DvtSvgImplFactory$$);
    $DvtDomXmlParser$$ = $DvtSvgGradientUtils$$.$createResultId$("flood");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "result", $DvtDomXmlParser$$);
    $DvtSvgImplFactory$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feComposite");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "operator", "out");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "in", $DvtDomXmlParser$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "in2", "SourceGraphic");
    var $DvtDomXmlParser$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feGaussianBlur"), $DvtCustomTooltip$$ = $DvtContextMenuTooltipItem$$;
    $DvtContextMenuTooltipItem$$ !== $DvtCustomTooltipItem$$ && ($DvtCustomTooltip$$ += " " + $DvtCustomTooltipItem$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtDomXmlParser$$, "stdDeviation", $DvtCustomTooltip$$);
    $DvtCustomTooltipItem$$ = $DvtSvgGradientUtils$$.$createResultId$("blur");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtDomXmlParser$$, "result", $DvtCustomTooltipItem$$);
    $DvtContextMenuTooltipItem$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feColorMatrix");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "in", $DvtCustomTooltipItem$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "type", "matrix");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 " + $DvtSvgFilterContext$$ + " 0");
    $DvtCustomTooltipItem$$ = $DvtSvgGradientUtils$$.$createResultId$("colMat");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "result", $DvtCustomTooltipItem$$);
    $DvtSvgFilterContext$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feOffset");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "dx", $DvtSvgFilterUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "dy", $DvtHtmlRichTooltipManager$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "in", $DvtCustomTooltipItem$$);
    $DvtHtmlRichTooltipManager$$ = $DvtSvgGradientUtils$$.$createResultId$("offset");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "result", $DvtHtmlRichTooltipManager$$);
    $DvtSvgFilterUtils$$ = $dvt$$9$$.$SvgShapeUtils$.createElement("feComposite");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "operator", "in");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "in", $DvtHtmlRichTooltipManager$$);
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "in2", "SourceGraphic");
    $DvtHtmlRichTooltipManager$$ = $DvtSvgGradientUtils$$.$createResultId$("comp");
    $dvt$$9$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "result", $DvtHtmlRichTooltipManager$$);
    $DvtSvgGradientUtils$$.$_resultIdsOver$.push($DvtHtmlRichTooltipManager$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgImplFactory$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtDomXmlParser$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtContextMenuTooltipItem$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$);
    $dvt$$9$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$)
  };
  $dvt$$9$$.$exportProperty$($dvt$$9$$, "Agent", $dvt$$9$$.$Agent$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Agent$, "setEnvironment", $dvt$$9$$.$Agent$.$setEnvironment$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Agent$, "setHighContrast", $dvt$$9$$.$Agent$.$setHighContrast$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Automation$.prototype, "getDomElementForSubId", $dvt$$9$$.$Automation$.prototype.$getDomElementForSubId$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Automation$.prototype, "getSubIdForDomElement", $dvt$$9$$.$Automation$.prototype.$getSubIdForDomElement$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$BaseComponent$.prototype, "applyOptions", $dvt$$9$$.$BaseComponent$.prototype.$applyOptions$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$BaseComponent$.prototype, "render", $dvt$$9$$.$BaseComponent$.prototype.$render$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$BaseComponent$.prototype, "highlight", $dvt$$9$$.$BaseComponent$.prototype.$highlight$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$BaseComponent$.prototype, "select", $dvt$$9$$.$BaseComponent$.prototype.select);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$BaseComponent$.prototype, "getKeyboardFocus", $dvt$$9$$.$BaseComponent$.prototype.$getKeyboardFocus$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$, "Bundle", $dvt$$9$$.$Bundle$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Bundle$, "addLocalizedStrings", $dvt$$9$$.$Bundle$.$addLocalizedStrings$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$, "Context", $dvt$$9$$.$Context$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$, "resetCaches", $dvt$$9$$.$Context$.$resetCaches$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$, "resetUniqueSeeds", $dvt$$9$$.$Context$.$resetUniqueSeeds$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "getStage", $dvt$$9$$.$Context$.prototype.$getStage$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "getSvgDocument", $dvt$$9$$.$Context$.prototype.$getSvgDocument$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "hideTooltips", $dvt$$9$$.$Context$.prototype.$hideTooltips$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "isReadyToRender", $dvt$$9$$.$Context$.prototype.$isReadyToRender$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "setDatatipStyleClass", $dvt$$9$$.$Context$.prototype.$setDatatipStyleClass$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "setLocaleHelpers", $dvt$$9$$.$Context$.prototype.$setLocaleHelpers$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "setReadingDirection", $dvt$$9$$.$Context$.prototype.$setReadingDirection$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "setOverlayAttachedCallback", $dvt$$9$$.$Context$.prototype.$setOverlayAttachedCallback$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "setTooltipAttachedCallback", $dvt$$9$$.$Context$.prototype.$setTooltipAttachedCallback$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Context$.prototype, "setTooltipStyleClass", $dvt$$9$$.$Context$.prototype.$setTooltipStyleClass$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Dimension$.prototype, "getWidth", $dvt$$9$$.$Dimension$.prototype.getWidth);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$Dimension$.prototype, "getHeight", $dvt$$9$$.$Dimension$.prototype.getHeight);
  $dvt$$9$$.$exportProperty$($dvt$$9$$, "JsonUtils", $dvt$$9$$.$JsonUtils$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$JsonUtils$, "clone", $dvt$$9$$.$JsonUtils$.$clone$);
  $dvt$$9$$.$exportProperty$($dvt$$9$$.$JsonUtils$, "merge", $dvt$$9$$.$JsonUtils$.$merge$);
  $dvt$$9$$.$exportProperty$($DvtStage$$.prototype, "addChild", $DvtStage$$.prototype.$addChild$);
  return $dvt$$9$$
}();

  return dvt;
});
